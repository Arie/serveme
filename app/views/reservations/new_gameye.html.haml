.row
  .col-md-12
    %p.alert.alert-success
      Welcome to the serveme.tf cloud beta, in association with
      %a{href: "https://gameye.com"} Gameye!
      Cloud servers are started on-demand for you, and are ready for action within a minute. Plugins are always enabled, demos and logs are available through demos.tf and logs.tf respectively.

= render "donator_nag"

.row
  .col-md-12.col-lg-6.offset-lg-2
    = simple_form_for(@reservation, url: url_for(controller: "reservations", action: "create_gameye"), wrapper: :horizontal_form, :html => { :class => 'form-horizontal reservation' }) do |f|
      - if @reservation.schedulable?
        = f.input :starts_at,       :as => :string, :input_html => { :value => I18n.l(@reservation.starts_at, :format => :datepicker), :data => { :"datepicker-format" => "dd-mm-yyyy hh:ii", :"datepicker-nodefault" => "false" } }, :label => "Starts at"
        = f.input :ends_at,         :as => :string, :input_html => { :value => I18n.l(@reservation.ends_at,   :format => :datepicker), :data => { :"datepicker-format" => "dd-mm-yyyy hh:ii", :"datepicker-nodefault" => "false" } }, :label => "Ends at"

      :javascript
        gameye_locations = #{@gameye_locations.map { |s| {id: s[:id], text: s[:name], flag: s[:flag]} }.to_json.html_safe};

      = f.input :gameye_location, :label => "Location", :required => true, :disabled => !@reservation.schedulable?

      = f.input :password,            :as => :string, :placeholder => "The server password to join the game"
      = f.input :rcon,                :as => :string, :placeholder => "The RCON password to control the server",        :disabled => !@reservation.schedulable?
      = f.input :first_map,           :collection => MapUpload.available_maps, :input_html => { :class => "select2" },  :disabled => !@reservation.schedulable?
      = f.input :tv_password,         :as => :string,   :placeholder => "Password for STV, default tv"
      = f.association :server_config, :collection => ServerConfig.ordered, :hint => "Specify a league config to run on each map start", :input_html => { :class => "select2" }
      = f.input :custom_whitelist_id, :hint => "Enter the whitelist ID or preset name (e.g. etf2l_6v6_s22) from <a href='http://whitelist.tf/configure' target='_blank'>whitelist.tf</a>".html_safe

      - users_last_reservation = current_user.reservations.last
      - if users_last_reservation && users_last_reservation.past? && users_last_reservation.inactive_too_long?
        - hint = "Auto-ending is forced on for your next reservation, because you didn't end your last one"
        - readonly = true
      - else
        - hint = "Automatically end the reservation once everyone has left the server"
        - readonly = false
      = f.input :auto_end, :as => :boolean, :hint => hint, :readonly => readonly, :disabled => readonly, :input_html => { :value => true }

      .row.submit-row
        .col-sm-2.offset-sm-4.col-lg-2.offset-lg-5
          %button.btn.btn-success{:type => :submit}
            Save

    = render "datepicker_javascript_options"
    :javascript
      var reservationSchedulable = #{@reservation.schedulable?}
