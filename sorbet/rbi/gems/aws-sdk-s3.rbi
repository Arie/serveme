# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/aws-sdk-s3/all/aws-sdk-s3.rbi
#
# aws-sdk-s3-1.158.0

module Aws::S3
  def self.access_grants_account_id_cache; end
  def self.access_grants_credentials_cache; end
  def self.bucket_region_cache; end
  def self.express_credentials_cache; end
end
module Aws::S3::Types
end
class Anonymous_Struct_320 < Struct
  def days_after_initiation; end
  def days_after_initiation=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::AbortIncompleteMultipartUpload < Anonymous_Struct_320
  include Aws::Structure
end
class Anonymous_Struct_321 < Struct
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::AbortMultipartUploadOutput < Anonymous_Struct_321
  include Aws::Structure
end
class Anonymous_Struct_322 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key; end
  def key=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def upload_id; end
  def upload_id=(_); end
end
class Aws::S3::Types::AbortMultipartUploadRequest < Anonymous_Struct_322
  include Aws::Structure
end
class Anonymous_Struct_323 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
end
class Aws::S3::Types::AccelerateConfiguration < Anonymous_Struct_323
  include Aws::Structure
end
class Anonymous_Struct_324 < Struct
  def grants; end
  def grants=(_); end
  def owner; end
  def owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::AccessControlPolicy < Anonymous_Struct_324
  include Aws::Structure
end
class Anonymous_Struct_325 < Struct
  def owner; end
  def owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::AccessControlTranslation < Anonymous_Struct_325
  include Aws::Structure
end
class Anonymous_Struct_326 < Struct
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tags; end
  def tags=(_); end
end
class Aws::S3::Types::AnalyticsAndOperator < Anonymous_Struct_326
  include Aws::Structure
end
class Anonymous_Struct_327 < Struct
  def filter; end
  def filter=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def storage_class_analysis; end
  def storage_class_analysis=(_); end
end
class Aws::S3::Types::AnalyticsConfiguration < Anonymous_Struct_327
  include Aws::Structure
end
class Anonymous_Struct_328 < Struct
  def s3_bucket_destination; end
  def s3_bucket_destination=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::AnalyticsExportDestination < Anonymous_Struct_328
  include Aws::Structure
end
class Anonymous_Struct_329 < Struct
  def and; end
  def and=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tag; end
  def tag=(_); end
end
class Aws::S3::Types::AnalyticsFilter < Anonymous_Struct_329
  include Aws::Structure
end
class Anonymous_Struct_330 < Struct
  def bucket; end
  def bucket=(_); end
  def bucket_account_id; end
  def bucket_account_id=(_); end
  def format; end
  def format=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::AnalyticsS3BucketDestination < Anonymous_Struct_330
  include Aws::Structure
end
class Anonymous_Struct_331 < Struct
  def creation_date; end
  def creation_date=(_); end
  def name; end
  def name=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Bucket < Anonymous_Struct_331
  include Aws::Structure
end
class Aws::S3::Types::BucketAlreadyExists < Aws::EmptyStructure
end
class Aws::S3::Types::BucketAlreadyOwnedByYou < Aws::EmptyStructure
end
class Anonymous_Struct_332 < Struct
  def data_redundancy; end
  def data_redundancy=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def type; end
  def type=(_); end
end
class Aws::S3::Types::BucketInfo < Anonymous_Struct_332
  include Aws::Structure
end
class Anonymous_Struct_333 < Struct
  def rules; end
  def rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::BucketLifecycleConfiguration < Anonymous_Struct_333
  include Aws::Structure
end
class Anonymous_Struct_334 < Struct
  def logging_enabled; end
  def logging_enabled=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::BucketLoggingStatus < Anonymous_Struct_334
  include Aws::Structure
end
class Anonymous_Struct_335 < Struct
  def cors_rules; end
  def cors_rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CORSConfiguration < Anonymous_Struct_335
  include Aws::Structure
end
class Anonymous_Struct_336 < Struct
  def allowed_headers; end
  def allowed_headers=(_); end
  def allowed_methods; end
  def allowed_methods=(_); end
  def allowed_origins; end
  def allowed_origins=(_); end
  def expose_headers; end
  def expose_headers=(_); end
  def id; end
  def id=(_); end
  def max_age_seconds; end
  def max_age_seconds=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CORSRule < Anonymous_Struct_336
  include Aws::Structure
end
class Anonymous_Struct_337 < Struct
  def allow_quoted_record_delimiter; end
  def allow_quoted_record_delimiter=(_); end
  def comments; end
  def comments=(_); end
  def field_delimiter; end
  def field_delimiter=(_); end
  def file_header_info; end
  def file_header_info=(_); end
  def quote_character; end
  def quote_character=(_); end
  def quote_escape_character; end
  def quote_escape_character=(_); end
  def record_delimiter; end
  def record_delimiter=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CSVInput < Anonymous_Struct_337
  include Aws::Structure
end
class Anonymous_Struct_338 < Struct
  def field_delimiter; end
  def field_delimiter=(_); end
  def quote_character; end
  def quote_character=(_); end
  def quote_escape_character; end
  def quote_escape_character=(_); end
  def quote_fields; end
  def quote_fields=(_); end
  def record_delimiter; end
  def record_delimiter=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CSVOutput < Anonymous_Struct_338
  include Aws::Structure
end
class Anonymous_Struct_339 < Struct
  def checksum_crc32; end
  def checksum_crc32=(_); end
  def checksum_crc32c; end
  def checksum_crc32c=(_); end
  def checksum_sha1; end
  def checksum_sha1=(_); end
  def checksum_sha256; end
  def checksum_sha256=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Checksum < Anonymous_Struct_339
  include Aws::Structure
end
class Anonymous_Struct_340 < Struct
  def cloud_function; end
  def cloud_function=(_); end
  def event; end
  def event=(_); end
  def events; end
  def events=(_); end
  def id; end
  def id=(_); end
  def invocation_role; end
  def invocation_role=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CloudFunctionConfiguration < Anonymous_Struct_340
  include Aws::Structure
end
class Anonymous_Struct_341 < Struct
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CommonPrefix < Anonymous_Struct_341
  include Aws::Structure
end
class Anonymous_Struct_342 < Struct
  def bucket; end
  def bucket=(_); end
  def bucket_key_enabled; end
  def bucket_key_enabled=(_); end
  def checksum_crc32; end
  def checksum_crc32=(_); end
  def checksum_crc32c; end
  def checksum_crc32c=(_); end
  def checksum_sha1; end
  def checksum_sha1=(_); end
  def checksum_sha256; end
  def checksum_sha256=(_); end
  def etag; end
  def etag=(_); end
  def expiration; end
  def expiration=(_); end
  def key; end
  def key=(_); end
  def location; end
  def location=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::CompleteMultipartUploadOutput < Anonymous_Struct_342
  include Aws::Structure
end
class Anonymous_Struct_343 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_crc32; end
  def checksum_crc32=(_); end
  def checksum_crc32c; end
  def checksum_crc32c=(_); end
  def checksum_sha1; end
  def checksum_sha1=(_); end
  def checksum_sha256; end
  def checksum_sha256=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key; end
  def key=(_); end
  def multipart_upload; end
  def multipart_upload=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def upload_id; end
  def upload_id=(_); end
end
class Aws::S3::Types::CompleteMultipartUploadRequest < Anonymous_Struct_343
  include Aws::Structure
end
class Anonymous_Struct_344 < Struct
  def parts; end
  def parts=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CompletedMultipartUpload < Anonymous_Struct_344
  include Aws::Structure
end
class Anonymous_Struct_345 < Struct
  def checksum_crc32; end
  def checksum_crc32=(_); end
  def checksum_crc32c; end
  def checksum_crc32c=(_); end
  def checksum_sha1; end
  def checksum_sha1=(_); end
  def checksum_sha256; end
  def checksum_sha256=(_); end
  def etag; end
  def etag=(_); end
  def part_number; end
  def part_number=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CompletedPart < Anonymous_Struct_345
  include Aws::Structure
end
class Anonymous_Struct_346 < Struct
  def http_error_code_returned_equals; end
  def http_error_code_returned_equals=(_); end
  def key_prefix_equals; end
  def key_prefix_equals=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Condition < Anonymous_Struct_346
  include Aws::Structure
end
class Anonymous_Struct_347 < Struct
  def event_type; end
  def event_type=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ContinuationEvent < Anonymous_Struct_347
  include Aws::Structure
end
class Anonymous_Struct_348 < Struct
  def bucket_key_enabled; end
  def bucket_key_enabled=(_); end
  def copy_object_result; end
  def copy_object_result=(_); end
  def copy_source_version_id; end
  def copy_source_version_id=(_); end
  def expiration; end
  def expiration=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_encryption_context; end
  def ssekms_encryption_context=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::CopyObjectOutput < Anonymous_Struct_348
  include Aws::Structure
end
class Anonymous_Struct_349 < Struct
  def acl; end
  def acl=(_); end
  def bucket; end
  def bucket=(_); end
  def bucket_key_enabled; end
  def bucket_key_enabled=(_); end
  def cache_control; end
  def cache_control=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_disposition; end
  def content_disposition=(_); end
  def content_encoding; end
  def content_encoding=(_); end
  def content_language; end
  def content_language=(_); end
  def content_type; end
  def content_type=(_); end
  def copy_source; end
  def copy_source=(_); end
  def copy_source_if_match; end
  def copy_source_if_match=(_); end
  def copy_source_if_modified_since; end
  def copy_source_if_modified_since=(_); end
  def copy_source_if_none_match; end
  def copy_source_if_none_match=(_); end
  def copy_source_if_unmodified_since; end
  def copy_source_if_unmodified_since=(_); end
  def copy_source_sse_customer_algorithm; end
  def copy_source_sse_customer_algorithm=(_); end
  def copy_source_sse_customer_key; end
  def copy_source_sse_customer_key=(_); end
  def copy_source_sse_customer_key_md5; end
  def copy_source_sse_customer_key_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def expected_source_bucket_owner; end
  def expected_source_bucket_owner=(_); end
  def expires; end
  def expires=(_); end
  def grant_full_control; end
  def grant_full_control=(_); end
  def grant_read; end
  def grant_read=(_); end
  def grant_read_acp; end
  def grant_read_acp=(_); end
  def grant_write_acp; end
  def grant_write_acp=(_); end
  def key; end
  def key=(_); end
  def metadata; end
  def metadata=(_); end
  def metadata_directive; end
  def metadata_directive=(_); end
  def object_lock_legal_hold_status; end
  def object_lock_legal_hold_status=(_); end
  def object_lock_mode; end
  def object_lock_mode=(_); end
  def object_lock_retain_until_date; end
  def object_lock_retain_until_date=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_encryption_context; end
  def ssekms_encryption_context=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def storage_class; end
  def storage_class=(_); end
  def tagging; end
  def tagging=(_); end
  def tagging_directive; end
  def tagging_directive=(_); end
  def website_redirect_location; end
  def website_redirect_location=(_); end
end
class Aws::S3::Types::CopyObjectRequest < Anonymous_Struct_349
  include Aws::Structure
end
class Anonymous_Struct_350 < Struct
  def checksum_crc32; end
  def checksum_crc32=(_); end
  def checksum_crc32c; end
  def checksum_crc32c=(_); end
  def checksum_sha1; end
  def checksum_sha1=(_); end
  def checksum_sha256; end
  def checksum_sha256=(_); end
  def etag; end
  def etag=(_); end
  def last_modified; end
  def last_modified=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CopyObjectResult < Anonymous_Struct_350
  include Aws::Structure
end
class Anonymous_Struct_351 < Struct
  def checksum_crc32; end
  def checksum_crc32=(_); end
  def checksum_crc32c; end
  def checksum_crc32c=(_); end
  def checksum_sha1; end
  def checksum_sha1=(_); end
  def checksum_sha256; end
  def checksum_sha256=(_); end
  def etag; end
  def etag=(_); end
  def last_modified; end
  def last_modified=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CopyPartResult < Anonymous_Struct_351
  include Aws::Structure
end
class Anonymous_Struct_352 < Struct
  def bucket; end
  def bucket=(_); end
  def location; end
  def location=(_); end
  def location_constraint; end
  def location_constraint=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CreateBucketConfiguration < Anonymous_Struct_352
  include Aws::Structure
end
class Anonymous_Struct_353 < Struct
  def location; end
  def location=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CreateBucketOutput < Anonymous_Struct_353
  include Aws::Structure
end
class Anonymous_Struct_354 < Struct
  def acl; end
  def acl=(_); end
  def bucket; end
  def bucket=(_); end
  def create_bucket_configuration; end
  def create_bucket_configuration=(_); end
  def grant_full_control; end
  def grant_full_control=(_); end
  def grant_read; end
  def grant_read=(_); end
  def grant_read_acp; end
  def grant_read_acp=(_); end
  def grant_write; end
  def grant_write=(_); end
  def grant_write_acp; end
  def grant_write_acp=(_); end
  def object_lock_enabled_for_bucket; end
  def object_lock_enabled_for_bucket=(_); end
  def object_ownership; end
  def object_ownership=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CreateBucketRequest < Anonymous_Struct_354
  include Aws::Structure
end
class Anonymous_Struct_355 < Struct
  def abort_date; end
  def abort_date=(_); end
  def abort_rule_id; end
  def abort_rule_id=(_); end
  def bucket; end
  def bucket=(_); end
  def bucket_key_enabled; end
  def bucket_key_enabled=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def key; end
  def key=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_encryption_context; end
  def ssekms_encryption_context=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def upload_id; end
  def upload_id=(_); end
end
class Aws::S3::Types::CreateMultipartUploadOutput < Anonymous_Struct_355
  include Aws::Structure
end
class Anonymous_Struct_356 < Struct
  def acl; end
  def acl=(_); end
  def bucket; end
  def bucket=(_); end
  def bucket_key_enabled; end
  def bucket_key_enabled=(_); end
  def cache_control; end
  def cache_control=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_disposition; end
  def content_disposition=(_); end
  def content_encoding; end
  def content_encoding=(_); end
  def content_language; end
  def content_language=(_); end
  def content_type; end
  def content_type=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def expires; end
  def expires=(_); end
  def grant_full_control; end
  def grant_full_control=(_); end
  def grant_read; end
  def grant_read=(_); end
  def grant_read_acp; end
  def grant_read_acp=(_); end
  def grant_write_acp; end
  def grant_write_acp=(_); end
  def key; end
  def key=(_); end
  def metadata; end
  def metadata=(_); end
  def object_lock_legal_hold_status; end
  def object_lock_legal_hold_status=(_); end
  def object_lock_mode; end
  def object_lock_mode=(_); end
  def object_lock_retain_until_date; end
  def object_lock_retain_until_date=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_encryption_context; end
  def ssekms_encryption_context=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def storage_class; end
  def storage_class=(_); end
  def tagging; end
  def tagging=(_); end
  def website_redirect_location; end
  def website_redirect_location=(_); end
end
class Aws::S3::Types::CreateMultipartUploadRequest < Anonymous_Struct_356
  include Aws::Structure
end
class Anonymous_Struct_357 < Struct
  def credentials; end
  def credentials=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::CreateSessionOutput < Anonymous_Struct_357
  include Aws::Structure
end
class Anonymous_Struct_358 < Struct
  def bucket; end
  def bucket=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def session_mode; end
  def session_mode=(_); end
end
class Aws::S3::Types::CreateSessionRequest < Anonymous_Struct_358
  include Aws::Structure
end
class Anonymous_Struct_359 < Struct
  def days; end
  def days=(_); end
  def mode; end
  def mode=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def years; end
  def years=(_); end
end
class Aws::S3::Types::DefaultRetention < Anonymous_Struct_359
  include Aws::Structure
end
class Anonymous_Struct_360 < Struct
  def objects; end
  def objects=(_); end
  def quiet; end
  def quiet=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Delete < Anonymous_Struct_360
  include Aws::Structure
end
class Anonymous_Struct_361 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketAnalyticsConfigurationRequest < Anonymous_Struct_361
  include Aws::Structure
end
class Anonymous_Struct_362 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketCorsRequest < Anonymous_Struct_362
  include Aws::Structure
end
class Anonymous_Struct_363 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketEncryptionRequest < Anonymous_Struct_363
  include Aws::Structure
end
class Anonymous_Struct_364 < Struct
  def bucket; end
  def bucket=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketIntelligentTieringConfigurationRequest < Anonymous_Struct_364
  include Aws::Structure
end
class Anonymous_Struct_365 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketInventoryConfigurationRequest < Anonymous_Struct_365
  include Aws::Structure
end
class Anonymous_Struct_366 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketLifecycleRequest < Anonymous_Struct_366
  include Aws::Structure
end
class Anonymous_Struct_367 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketMetricsConfigurationRequest < Anonymous_Struct_367
  include Aws::Structure
end
class Anonymous_Struct_368 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketOwnershipControlsRequest < Anonymous_Struct_368
  include Aws::Structure
end
class Anonymous_Struct_369 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketPolicyRequest < Anonymous_Struct_369
  include Aws::Structure
end
class Anonymous_Struct_370 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketReplicationRequest < Anonymous_Struct_370
  include Aws::Structure
end
class Anonymous_Struct_371 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketRequest < Anonymous_Struct_371
  include Aws::Structure
end
class Anonymous_Struct_372 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketTaggingRequest < Anonymous_Struct_372
  include Aws::Structure
end
class Anonymous_Struct_373 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteBucketWebsiteRequest < Anonymous_Struct_373
  include Aws::Structure
end
class Anonymous_Struct_374 < Struct
  def is_latest; end
  def is_latest=(_); end
  def key; end
  def key=(_); end
  def last_modified; end
  def last_modified=(_); end
  def owner; end
  def owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::DeleteMarkerEntry < Anonymous_Struct_374
  include Aws::Structure
end
class Anonymous_Struct_375 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
end
class Aws::S3::Types::DeleteMarkerReplication < Anonymous_Struct_375
  include Aws::Structure
end
class Anonymous_Struct_376 < Struct
  def delete_marker; end
  def delete_marker=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::DeleteObjectOutput < Anonymous_Struct_376
  include Aws::Structure
end
class Anonymous_Struct_377 < Struct
  def bucket; end
  def bucket=(_); end
  def bypass_governance_retention; end
  def bypass_governance_retention=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key; end
  def key=(_); end
  def mfa; end
  def mfa=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::DeleteObjectRequest < Anonymous_Struct_377
  include Aws::Structure
end
class Anonymous_Struct_378 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::DeleteObjectTaggingOutput < Anonymous_Struct_378
  include Aws::Structure
end
class Anonymous_Struct_379 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key; end
  def key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::DeleteObjectTaggingRequest < Anonymous_Struct_379
  include Aws::Structure
end
class Anonymous_Struct_380 < Struct
  def deleted; end
  def deleted=(_); end
  def errors; end
  def errors=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteObjectsOutput < Anonymous_Struct_380
  include Aws::Structure
end
class Anonymous_Struct_381 < Struct
  def bucket; end
  def bucket=(_); end
  def bypass_governance_retention; end
  def bypass_governance_retention=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def delete; end
  def delete=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def mfa; end
  def mfa=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeleteObjectsRequest < Anonymous_Struct_381
  include Aws::Structure
end
class Anonymous_Struct_382 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::DeletePublicAccessBlockRequest < Anonymous_Struct_382
  include Aws::Structure
end
class Anonymous_Struct_383 < Struct
  def delete_marker; end
  def delete_marker=(_); end
  def delete_marker_version_id; end
  def delete_marker_version_id=(_); end
  def key; end
  def key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::DeletedObject < Anonymous_Struct_383
  include Aws::Structure
end
class Anonymous_Struct_384 < Struct
  def access_control_translation; end
  def access_control_translation=(_); end
  def account; end
  def account=(_); end
  def bucket; end
  def bucket=(_); end
  def encryption_configuration; end
  def encryption_configuration=(_); end
  def metrics; end
  def metrics=(_); end
  def replication_time; end
  def replication_time=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def storage_class; end
  def storage_class=(_); end
end
class Aws::S3::Types::Destination < Anonymous_Struct_384
  include Aws::Structure
end
class Anonymous_Struct_385 < Struct
  def encryption_type; end
  def encryption_type=(_); end
  def kms_context; end
  def kms_context=(_); end
  def kms_key_id; end
  def kms_key_id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Encryption < Anonymous_Struct_385
  include Aws::Structure
end
class Anonymous_Struct_386 < Struct
  def replica_kms_key_id; end
  def replica_kms_key_id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::EncryptionConfiguration < Anonymous_Struct_386
  include Aws::Structure
end
class Anonymous_Struct_387 < Struct
  def event_type; end
  def event_type=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::EndEvent < Anonymous_Struct_387
  include Aws::Structure
end
class Anonymous_Struct_388 < Struct
  def code; end
  def code=(_); end
  def key; end
  def key=(_); end
  def message; end
  def message=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::Error < Anonymous_Struct_388
  include Aws::Structure
end
class Anonymous_Struct_389 < Struct
  def key; end
  def key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ErrorDocument < Anonymous_Struct_389
  include Aws::Structure
end
class Aws::S3::Types::EventBridgeConfiguration < Aws::EmptyStructure
end
class Anonymous_Struct_390 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
end
class Aws::S3::Types::ExistingObjectReplication < Anonymous_Struct_390
  include Aws::Structure
end
class Anonymous_Struct_391 < Struct
  def name; end
  def name=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def value; end
  def value=(_); end
end
class Aws::S3::Types::FilterRule < Anonymous_Struct_391
  include Aws::Structure
end
class Anonymous_Struct_392 < Struct
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
end
class Aws::S3::Types::GetBucketAccelerateConfigurationOutput < Anonymous_Struct_392
  include Aws::Structure
end
class Anonymous_Struct_393 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketAccelerateConfigurationRequest < Anonymous_Struct_393
  include Aws::Structure
end
class Anonymous_Struct_394 < Struct
  def grants; end
  def grants=(_); end
  def owner; end
  def owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketAclOutput < Anonymous_Struct_394
  include Aws::Structure
end
class Anonymous_Struct_395 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketAclRequest < Anonymous_Struct_395
  include Aws::Structure
end
class Anonymous_Struct_396 < Struct
  def analytics_configuration; end
  def analytics_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketAnalyticsConfigurationOutput < Anonymous_Struct_396
  include Aws::Structure
end
class Anonymous_Struct_397 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketAnalyticsConfigurationRequest < Anonymous_Struct_397
  include Aws::Structure
end
class Anonymous_Struct_398 < Struct
  def cors_rules; end
  def cors_rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketCorsOutput < Anonymous_Struct_398
  include Aws::Structure
end
class Anonymous_Struct_399 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketCorsRequest < Anonymous_Struct_399
  include Aws::Structure
end
class Anonymous_Struct_400 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption_configuration; end
  def server_side_encryption_configuration=(_); end
end
class Aws::S3::Types::GetBucketEncryptionOutput < Anonymous_Struct_400
  include Aws::Structure
end
class Anonymous_Struct_401 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketEncryptionRequest < Anonymous_Struct_401
  include Aws::Structure
end
class Anonymous_Struct_402 < Struct
  def intelligent_tiering_configuration; end
  def intelligent_tiering_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketIntelligentTieringConfigurationOutput < Anonymous_Struct_402
  include Aws::Structure
end
class Anonymous_Struct_403 < Struct
  def bucket; end
  def bucket=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketIntelligentTieringConfigurationRequest < Anonymous_Struct_403
  include Aws::Structure
end
class Anonymous_Struct_404 < Struct
  def inventory_configuration; end
  def inventory_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketInventoryConfigurationOutput < Anonymous_Struct_404
  include Aws::Structure
end
class Anonymous_Struct_405 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketInventoryConfigurationRequest < Anonymous_Struct_405
  include Aws::Structure
end
class Anonymous_Struct_406 < Struct
  def rules; end
  def rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketLifecycleConfigurationOutput < Anonymous_Struct_406
  include Aws::Structure
end
class Anonymous_Struct_407 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketLifecycleConfigurationRequest < Anonymous_Struct_407
  include Aws::Structure
end
class Anonymous_Struct_408 < Struct
  def rules; end
  def rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketLifecycleOutput < Anonymous_Struct_408
  include Aws::Structure
end
class Anonymous_Struct_409 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketLifecycleRequest < Anonymous_Struct_409
  include Aws::Structure
end
class Anonymous_Struct_410 < Struct
  def location_constraint; end
  def location_constraint=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketLocationOutput < Anonymous_Struct_410
  include Aws::Structure
end
class Anonymous_Struct_411 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketLocationRequest < Anonymous_Struct_411
  include Aws::Structure
end
class Anonymous_Struct_412 < Struct
  def logging_enabled; end
  def logging_enabled=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketLoggingOutput < Anonymous_Struct_412
  include Aws::Structure
end
class Anonymous_Struct_413 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketLoggingRequest < Anonymous_Struct_413
  include Aws::Structure
end
class Anonymous_Struct_414 < Struct
  def metrics_configuration; end
  def metrics_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketMetricsConfigurationOutput < Anonymous_Struct_414
  include Aws::Structure
end
class Anonymous_Struct_415 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketMetricsConfigurationRequest < Anonymous_Struct_415
  include Aws::Structure
end
class Anonymous_Struct_416 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketNotificationConfigurationRequest < Anonymous_Struct_416
  include Aws::Structure
end
class Anonymous_Struct_417 < Struct
  def ownership_controls; end
  def ownership_controls=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketOwnershipControlsOutput < Anonymous_Struct_417
  include Aws::Structure
end
class Anonymous_Struct_418 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketOwnershipControlsRequest < Anonymous_Struct_418
  include Aws::Structure
end
class Anonymous_Struct_419 < Struct
  def policy; end
  def policy=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketPolicyOutput < Anonymous_Struct_419
  include Aws::Structure
end
class Anonymous_Struct_420 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketPolicyRequest < Anonymous_Struct_420
  include Aws::Structure
end
class Anonymous_Struct_421 < Struct
  def policy_status; end
  def policy_status=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketPolicyStatusOutput < Anonymous_Struct_421
  include Aws::Structure
end
class Anonymous_Struct_422 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketPolicyStatusRequest < Anonymous_Struct_422
  include Aws::Structure
end
class Anonymous_Struct_423 < Struct
  def replication_configuration; end
  def replication_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketReplicationOutput < Anonymous_Struct_423
  include Aws::Structure
end
class Anonymous_Struct_424 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketReplicationRequest < Anonymous_Struct_424
  include Aws::Structure
end
class Anonymous_Struct_425 < Struct
  def payer; end
  def payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketRequestPaymentOutput < Anonymous_Struct_425
  include Aws::Structure
end
class Anonymous_Struct_426 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketRequestPaymentRequest < Anonymous_Struct_426
  include Aws::Structure
end
class Anonymous_Struct_427 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tag_set; end
  def tag_set=(_); end
end
class Aws::S3::Types::GetBucketTaggingOutput < Anonymous_Struct_427
  include Aws::Structure
end
class Anonymous_Struct_428 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketTaggingRequest < Anonymous_Struct_428
  include Aws::Structure
end
class Anonymous_Struct_429 < Struct
  def mfa_delete; end
  def mfa_delete=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
end
class Aws::S3::Types::GetBucketVersioningOutput < Anonymous_Struct_429
  include Aws::Structure
end
class Anonymous_Struct_430 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketVersioningRequest < Anonymous_Struct_430
  include Aws::Structure
end
class Anonymous_Struct_431 < Struct
  def error_document; end
  def error_document=(_); end
  def index_document; end
  def index_document=(_); end
  def redirect_all_requests_to; end
  def redirect_all_requests_to=(_); end
  def routing_rules; end
  def routing_rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketWebsiteOutput < Anonymous_Struct_431
  include Aws::Structure
end
class Anonymous_Struct_432 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetBucketWebsiteRequest < Anonymous_Struct_432
  include Aws::Structure
end
class Anonymous_Struct_433 < Struct
  def grants; end
  def grants=(_); end
  def owner; end
  def owner=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetObjectAclOutput < Anonymous_Struct_433
  include Aws::Structure
end
class Anonymous_Struct_434 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key; end
  def key=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::GetObjectAclRequest < Anonymous_Struct_434
  include Aws::Structure
end
class Anonymous_Struct_435 < Struct
  def checksum; end
  def checksum=(_); end
  def delete_marker; end
  def delete_marker=(_); end
  def etag; end
  def etag=(_); end
  def last_modified; end
  def last_modified=(_); end
  def object_parts; end
  def object_parts=(_); end
  def object_size; end
  def object_size=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def storage_class; end
  def storage_class=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::GetObjectAttributesOutput < Anonymous_Struct_435
  include Aws::Structure
end
class Anonymous_Struct_436 < Struct
  def is_truncated; end
  def is_truncated=(_); end
  def max_parts; end
  def max_parts=(_); end
  def next_part_number_marker; end
  def next_part_number_marker=(_); end
  def part_number_marker; end
  def part_number_marker=(_); end
  def parts; end
  def parts=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def total_parts_count; end
  def total_parts_count=(_); end
end
class Aws::S3::Types::GetObjectAttributesParts < Anonymous_Struct_436
  include Aws::Structure
end
class Anonymous_Struct_437 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key; end
  def key=(_); end
  def max_parts; end
  def max_parts=(_); end
  def object_attributes; end
  def object_attributes=(_); end
  def part_number_marker; end
  def part_number_marker=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::GetObjectAttributesRequest < Anonymous_Struct_437
  include Aws::Structure
end
class Anonymous_Struct_438 < Struct
  def legal_hold; end
  def legal_hold=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetObjectLegalHoldOutput < Anonymous_Struct_438
  include Aws::Structure
end
class Anonymous_Struct_439 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key; end
  def key=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::GetObjectLegalHoldRequest < Anonymous_Struct_439
  include Aws::Structure
end
class Anonymous_Struct_440 < Struct
  def object_lock_configuration; end
  def object_lock_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetObjectLockConfigurationOutput < Anonymous_Struct_440
  include Aws::Structure
end
class Anonymous_Struct_441 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetObjectLockConfigurationRequest < Anonymous_Struct_441
  include Aws::Structure
end
class Anonymous_Struct_442 < Struct
  def accept_ranges; end
  def accept_ranges=(_); end
  def body; end
  def body=(_); end
  def bucket_key_enabled; end
  def bucket_key_enabled=(_); end
  def cache_control; end
  def cache_control=(_); end
  def checksum_crc32; end
  def checksum_crc32=(_); end
  def checksum_crc32c; end
  def checksum_crc32c=(_); end
  def checksum_sha1; end
  def checksum_sha1=(_); end
  def checksum_sha256; end
  def checksum_sha256=(_); end
  def content_disposition; end
  def content_disposition=(_); end
  def content_encoding; end
  def content_encoding=(_); end
  def content_language; end
  def content_language=(_); end
  def content_length; end
  def content_length=(_); end
  def content_range; end
  def content_range=(_); end
  def content_type; end
  def content_type=(_); end
  def delete_marker; end
  def delete_marker=(_); end
  def etag; end
  def etag=(_); end
  def expiration; end
  def expiration=(_); end
  def expires; end
  def expires=(_); end
  def expires_string; end
  def expires_string=(_); end
  def last_modified; end
  def last_modified=(_); end
  def metadata; end
  def metadata=(_); end
  def missing_meta; end
  def missing_meta=(_); end
  def object_lock_legal_hold_status; end
  def object_lock_legal_hold_status=(_); end
  def object_lock_mode; end
  def object_lock_mode=(_); end
  def object_lock_retain_until_date; end
  def object_lock_retain_until_date=(_); end
  def parts_count; end
  def parts_count=(_); end
  def replication_status; end
  def replication_status=(_); end
  def request_charged; end
  def request_charged=(_); end
  def restore; end
  def restore=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def storage_class; end
  def storage_class=(_); end
  def tag_count; end
  def tag_count=(_); end
  def version_id; end
  def version_id=(_); end
  def website_redirect_location; end
  def website_redirect_location=(_); end
end
class Aws::S3::Types::GetObjectOutput < Anonymous_Struct_442
  include Aws::Structure
end
class Anonymous_Struct_443 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_mode; end
  def checksum_mode=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def if_match; end
  def if_match=(_); end
  def if_modified_since; end
  def if_modified_since=(_); end
  def if_none_match; end
  def if_none_match=(_); end
  def if_unmodified_since; end
  def if_unmodified_since=(_); end
  def key; end
  def key=(_); end
  def part_number; end
  def part_number=(_); end
  def range; end
  def range=(_); end
  def request_payer; end
  def request_payer=(_); end
  def response_cache_control; end
  def response_cache_control=(_); end
  def response_content_disposition; end
  def response_content_disposition=(_); end
  def response_content_encoding; end
  def response_content_encoding=(_); end
  def response_content_language; end
  def response_content_language=(_); end
  def response_content_type; end
  def response_content_type=(_); end
  def response_expires; end
  def response_expires=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::GetObjectRequest < Anonymous_Struct_443
  include Aws::Structure
end
class Anonymous_Struct_444 < Struct
  def retention; end
  def retention=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetObjectRetentionOutput < Anonymous_Struct_444
  include Aws::Structure
end
class Anonymous_Struct_445 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key; end
  def key=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::GetObjectRetentionRequest < Anonymous_Struct_445
  include Aws::Structure
end
class Anonymous_Struct_446 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tag_set; end
  def tag_set=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::GetObjectTaggingOutput < Anonymous_Struct_446
  include Aws::Structure
end
class Anonymous_Struct_447 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key; end
  def key=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::GetObjectTaggingRequest < Anonymous_Struct_447
  include Aws::Structure
end
class Anonymous_Struct_448 < Struct
  def body; end
  def body=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetObjectTorrentOutput < Anonymous_Struct_448
  include Aws::Structure
end
class Anonymous_Struct_449 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key; end
  def key=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetObjectTorrentRequest < Anonymous_Struct_449
  include Aws::Structure
end
class Anonymous_Struct_450 < Struct
  def public_access_block_configuration; end
  def public_access_block_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetPublicAccessBlockOutput < Anonymous_Struct_450
  include Aws::Structure
end
class Anonymous_Struct_451 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::GetPublicAccessBlockRequest < Anonymous_Struct_451
  include Aws::Structure
end
class Anonymous_Struct_452 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tier; end
  def tier=(_); end
end
class Aws::S3::Types::GlacierJobParameters < Anonymous_Struct_452
  include Aws::Structure
end
class Anonymous_Struct_453 < Struct
  def grantee; end
  def grantee=(_); end
  def permission; end
  def permission=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Grant < Anonymous_Struct_453
  include Aws::Structure
end
class Anonymous_Struct_454 < Struct
  def display_name; end
  def display_name=(_); end
  def email_address; end
  def email_address=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def type; end
  def type=(_); end
  def uri; end
  def uri=(_); end
end
class Aws::S3::Types::Grantee < Anonymous_Struct_454
  include Aws::Structure
end
class Anonymous_Struct_455 < Struct
  def access_point_alias; end
  def access_point_alias=(_); end
  def bucket_location_name; end
  def bucket_location_name=(_); end
  def bucket_location_type; end
  def bucket_location_type=(_); end
  def bucket_region; end
  def bucket_region=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::HeadBucketOutput < Anonymous_Struct_455
  include Aws::Structure
end
class Anonymous_Struct_456 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::HeadBucketRequest < Anonymous_Struct_456
  include Aws::Structure
end
class Anonymous_Struct_457 < Struct
  def accept_ranges; end
  def accept_ranges=(_); end
  def archive_status; end
  def archive_status=(_); end
  def bucket_key_enabled; end
  def bucket_key_enabled=(_); end
  def cache_control; end
  def cache_control=(_); end
  def checksum_crc32; end
  def checksum_crc32=(_); end
  def checksum_crc32c; end
  def checksum_crc32c=(_); end
  def checksum_sha1; end
  def checksum_sha1=(_); end
  def checksum_sha256; end
  def checksum_sha256=(_); end
  def content_disposition; end
  def content_disposition=(_); end
  def content_encoding; end
  def content_encoding=(_); end
  def content_language; end
  def content_language=(_); end
  def content_length; end
  def content_length=(_); end
  def content_type; end
  def content_type=(_); end
  def delete_marker; end
  def delete_marker=(_); end
  def etag; end
  def etag=(_); end
  def expiration; end
  def expiration=(_); end
  def expires; end
  def expires=(_); end
  def expires_string; end
  def expires_string=(_); end
  def last_modified; end
  def last_modified=(_); end
  def metadata; end
  def metadata=(_); end
  def missing_meta; end
  def missing_meta=(_); end
  def object_lock_legal_hold_status; end
  def object_lock_legal_hold_status=(_); end
  def object_lock_mode; end
  def object_lock_mode=(_); end
  def object_lock_retain_until_date; end
  def object_lock_retain_until_date=(_); end
  def parts_count; end
  def parts_count=(_); end
  def replication_status; end
  def replication_status=(_); end
  def request_charged; end
  def request_charged=(_); end
  def restore; end
  def restore=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def storage_class; end
  def storage_class=(_); end
  def version_id; end
  def version_id=(_); end
  def website_redirect_location; end
  def website_redirect_location=(_); end
end
class Aws::S3::Types::HeadObjectOutput < Anonymous_Struct_457
  include Aws::Structure
end
class Anonymous_Struct_458 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_mode; end
  def checksum_mode=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def if_match; end
  def if_match=(_); end
  def if_modified_since; end
  def if_modified_since=(_); end
  def if_none_match; end
  def if_none_match=(_); end
  def if_unmodified_since; end
  def if_unmodified_since=(_); end
  def key; end
  def key=(_); end
  def part_number; end
  def part_number=(_); end
  def range; end
  def range=(_); end
  def request_payer; end
  def request_payer=(_); end
  def response_cache_control; end
  def response_cache_control=(_); end
  def response_content_disposition; end
  def response_content_disposition=(_); end
  def response_content_encoding; end
  def response_content_encoding=(_); end
  def response_content_language; end
  def response_content_language=(_); end
  def response_content_type; end
  def response_content_type=(_); end
  def response_expires; end
  def response_expires=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::HeadObjectRequest < Anonymous_Struct_458
  include Aws::Structure
end
class Anonymous_Struct_459 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def suffix; end
  def suffix=(_); end
end
class Aws::S3::Types::IndexDocument < Anonymous_Struct_459
  include Aws::Structure
end
class Anonymous_Struct_460 < Struct
  def display_name; end
  def display_name=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Initiator < Anonymous_Struct_460
  include Aws::Structure
end
class Anonymous_Struct_461 < Struct
  def compression_type; end
  def compression_type=(_); end
  def csv; end
  def csv=(_); end
  def json; end
  def json=(_); end
  def parquet; end
  def parquet=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::InputSerialization < Anonymous_Struct_461
  include Aws::Structure
end
class Anonymous_Struct_462 < Struct
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tags; end
  def tags=(_); end
end
class Aws::S3::Types::IntelligentTieringAndOperator < Anonymous_Struct_462
  include Aws::Structure
end
class Anonymous_Struct_463 < Struct
  def filter; end
  def filter=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
  def tierings; end
  def tierings=(_); end
end
class Aws::S3::Types::IntelligentTieringConfiguration < Anonymous_Struct_463
  include Aws::Structure
end
class Anonymous_Struct_464 < Struct
  def and; end
  def and=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tag; end
  def tag=(_); end
end
class Aws::S3::Types::IntelligentTieringFilter < Anonymous_Struct_464
  include Aws::Structure
end
class Anonymous_Struct_465 < Struct
  def access_tier; end
  def access_tier=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def storage_class; end
  def storage_class=(_); end
end
class Aws::S3::Types::InvalidObjectState < Anonymous_Struct_465
  include Aws::Structure
end
class Anonymous_Struct_466 < Struct
  def destination; end
  def destination=(_); end
  def filter; end
  def filter=(_); end
  def id; end
  def id=(_); end
  def included_object_versions; end
  def included_object_versions=(_); end
  def is_enabled; end
  def is_enabled=(_); end
  def optional_fields; end
  def optional_fields=(_); end
  def schedule; end
  def schedule=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::InventoryConfiguration < Anonymous_Struct_466
  include Aws::Structure
end
class Anonymous_Struct_467 < Struct
  def s3_bucket_destination; end
  def s3_bucket_destination=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::InventoryDestination < Anonymous_Struct_467
  include Aws::Structure
end
class Anonymous_Struct_468 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def ssekms; end
  def ssekms=(_); end
  def sses3; end
  def sses3=(_); end
end
class Aws::S3::Types::InventoryEncryption < Anonymous_Struct_468
  include Aws::Structure
end
class Anonymous_Struct_469 < Struct
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::InventoryFilter < Anonymous_Struct_469
  include Aws::Structure
end
class Anonymous_Struct_470 < Struct
  def account_id; end
  def account_id=(_); end
  def bucket; end
  def bucket=(_); end
  def encryption; end
  def encryption=(_); end
  def format; end
  def format=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::InventoryS3BucketDestination < Anonymous_Struct_470
  include Aws::Structure
end
class Anonymous_Struct_471 < Struct
  def frequency; end
  def frequency=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::InventorySchedule < Anonymous_Struct_471
  include Aws::Structure
end
class Anonymous_Struct_472 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def type; end
  def type=(_); end
end
class Aws::S3::Types::JSONInput < Anonymous_Struct_472
  include Aws::Structure
end
class Anonymous_Struct_473 < Struct
  def record_delimiter; end
  def record_delimiter=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::JSONOutput < Anonymous_Struct_473
  include Aws::Structure
end
class Anonymous_Struct_474 < Struct
  def events; end
  def events=(_); end
  def filter; end
  def filter=(_); end
  def id; end
  def id=(_); end
  def lambda_function_arn; end
  def lambda_function_arn=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::LambdaFunctionConfiguration < Anonymous_Struct_474
  include Aws::Structure
end
class Anonymous_Struct_475 < Struct
  def rules; end
  def rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::LifecycleConfiguration < Anonymous_Struct_475
  include Aws::Structure
end
class Anonymous_Struct_476 < Struct
  def date; end
  def date=(_); end
  def days; end
  def days=(_); end
  def expired_object_delete_marker; end
  def expired_object_delete_marker=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::LifecycleExpiration < Anonymous_Struct_476
  include Aws::Structure
end
class Anonymous_Struct_477 < Struct
  def abort_incomplete_multipart_upload; end
  def abort_incomplete_multipart_upload=(_); end
  def expiration; end
  def expiration=(_); end
  def filter; end
  def filter=(_); end
  def id; end
  def id=(_); end
  def noncurrent_version_expiration; end
  def noncurrent_version_expiration=(_); end
  def noncurrent_version_transitions; end
  def noncurrent_version_transitions=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
  def transitions; end
  def transitions=(_); end
end
class Aws::S3::Types::LifecycleRule < Anonymous_Struct_477
  include Aws::Structure
end
class Anonymous_Struct_478 < Struct
  def object_size_greater_than; end
  def object_size_greater_than=(_); end
  def object_size_less_than; end
  def object_size_less_than=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tags; end
  def tags=(_); end
end
class Aws::S3::Types::LifecycleRuleAndOperator < Anonymous_Struct_478
  include Aws::Structure
end
class Anonymous_Struct_479 < Struct
  def and; end
  def and=(_); end
  def object_size_greater_than; end
  def object_size_greater_than=(_); end
  def object_size_less_than; end
  def object_size_less_than=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tag; end
  def tag=(_); end
end
class Aws::S3::Types::LifecycleRuleFilter < Anonymous_Struct_479
  include Aws::Structure
end
class Anonymous_Struct_480 < Struct
  def analytics_configuration_list; end
  def analytics_configuration_list=(_); end
  def continuation_token; end
  def continuation_token=(_); end
  def is_truncated; end
  def is_truncated=(_); end
  def next_continuation_token; end
  def next_continuation_token=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListBucketAnalyticsConfigurationsOutput < Anonymous_Struct_480
  include Aws::Structure
end
class Anonymous_Struct_481 < Struct
  def bucket; end
  def bucket=(_); end
  def continuation_token; end
  def continuation_token=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListBucketAnalyticsConfigurationsRequest < Anonymous_Struct_481
  include Aws::Structure
end
class Anonymous_Struct_482 < Struct
  def continuation_token; end
  def continuation_token=(_); end
  def intelligent_tiering_configuration_list; end
  def intelligent_tiering_configuration_list=(_); end
  def is_truncated; end
  def is_truncated=(_); end
  def next_continuation_token; end
  def next_continuation_token=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListBucketIntelligentTieringConfigurationsOutput < Anonymous_Struct_482
  include Aws::Structure
end
class Anonymous_Struct_483 < Struct
  def bucket; end
  def bucket=(_); end
  def continuation_token; end
  def continuation_token=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListBucketIntelligentTieringConfigurationsRequest < Anonymous_Struct_483
  include Aws::Structure
end
class Anonymous_Struct_484 < Struct
  def continuation_token; end
  def continuation_token=(_); end
  def inventory_configuration_list; end
  def inventory_configuration_list=(_); end
  def is_truncated; end
  def is_truncated=(_); end
  def next_continuation_token; end
  def next_continuation_token=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListBucketInventoryConfigurationsOutput < Anonymous_Struct_484
  include Aws::Structure
end
class Anonymous_Struct_485 < Struct
  def bucket; end
  def bucket=(_); end
  def continuation_token; end
  def continuation_token=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListBucketInventoryConfigurationsRequest < Anonymous_Struct_485
  include Aws::Structure
end
class Anonymous_Struct_486 < Struct
  def continuation_token; end
  def continuation_token=(_); end
  def is_truncated; end
  def is_truncated=(_); end
  def metrics_configuration_list; end
  def metrics_configuration_list=(_); end
  def next_continuation_token; end
  def next_continuation_token=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListBucketMetricsConfigurationsOutput < Anonymous_Struct_486
  include Aws::Structure
end
class Anonymous_Struct_487 < Struct
  def bucket; end
  def bucket=(_); end
  def continuation_token; end
  def continuation_token=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListBucketMetricsConfigurationsRequest < Anonymous_Struct_487
  include Aws::Structure
end
class Anonymous_Struct_488 < Struct
  def buckets; end
  def buckets=(_); end
  def continuation_token; end
  def continuation_token=(_); end
  def owner; end
  def owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListBucketsOutput < Anonymous_Struct_488
  include Aws::Structure
end
class Anonymous_Struct_489 < Struct
  def continuation_token; end
  def continuation_token=(_); end
  def max_buckets; end
  def max_buckets=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListBucketsRequest < Anonymous_Struct_489
  include Aws::Structure
end
class Anonymous_Struct_490 < Struct
  def buckets; end
  def buckets=(_); end
  def continuation_token; end
  def continuation_token=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListDirectoryBucketsOutput < Anonymous_Struct_490
  include Aws::Structure
end
class Anonymous_Struct_491 < Struct
  def continuation_token; end
  def continuation_token=(_); end
  def max_directory_buckets; end
  def max_directory_buckets=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListDirectoryBucketsRequest < Anonymous_Struct_491
  include Aws::Structure
end
class Anonymous_Struct_492 < Struct
  def bucket; end
  def bucket=(_); end
  def common_prefixes; end
  def common_prefixes=(_); end
  def delimiter; end
  def delimiter=(_); end
  def encoding_type; end
  def encoding_type=(_); end
  def is_truncated; end
  def is_truncated=(_); end
  def key_marker; end
  def key_marker=(_); end
  def max_uploads; end
  def max_uploads=(_); end
  def next_key_marker; end
  def next_key_marker=(_); end
  def next_upload_id_marker; end
  def next_upload_id_marker=(_); end
  def prefix; end
  def prefix=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def upload_id_marker; end
  def upload_id_marker=(_); end
  def uploads; end
  def uploads=(_); end
end
class Aws::S3::Types::ListMultipartUploadsOutput < Anonymous_Struct_492
  include Aws::Structure
end
class Anonymous_Struct_493 < Struct
  def bucket; end
  def bucket=(_); end
  def delimiter; end
  def delimiter=(_); end
  def encoding_type; end
  def encoding_type=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key_marker; end
  def key_marker=(_); end
  def max_uploads; end
  def max_uploads=(_); end
  def prefix; end
  def prefix=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def upload_id_marker; end
  def upload_id_marker=(_); end
end
class Aws::S3::Types::ListMultipartUploadsRequest < Anonymous_Struct_493
  include Aws::Structure
end
class Anonymous_Struct_494 < Struct
  def common_prefixes; end
  def common_prefixes=(_); end
  def delete_markers; end
  def delete_markers=(_); end
  def delimiter; end
  def delimiter=(_); end
  def encoding_type; end
  def encoding_type=(_); end
  def is_truncated; end
  def is_truncated=(_); end
  def key_marker; end
  def key_marker=(_); end
  def max_keys; end
  def max_keys=(_); end
  def name; end
  def name=(_); end
  def next_key_marker; end
  def next_key_marker=(_); end
  def next_version_id_marker; end
  def next_version_id_marker=(_); end
  def prefix; end
  def prefix=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id_marker; end
  def version_id_marker=(_); end
  def versions; end
  def versions=(_); end
end
class Aws::S3::Types::ListObjectVersionsOutput < Anonymous_Struct_494
  def versions_delete_markers; end
  include Aws::Structure
end
class Anonymous_Struct_495 < Struct
  def bucket; end
  def bucket=(_); end
  def delimiter; end
  def delimiter=(_); end
  def encoding_type; end
  def encoding_type=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key_marker; end
  def key_marker=(_); end
  def max_keys; end
  def max_keys=(_); end
  def optional_object_attributes; end
  def optional_object_attributes=(_); end
  def prefix; end
  def prefix=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id_marker; end
  def version_id_marker=(_); end
end
class Aws::S3::Types::ListObjectVersionsRequest < Anonymous_Struct_495
  include Aws::Structure
end
class Anonymous_Struct_496 < Struct
  def common_prefixes; end
  def common_prefixes=(_); end
  def contents; end
  def contents=(_); end
  def delimiter; end
  def delimiter=(_); end
  def encoding_type; end
  def encoding_type=(_); end
  def is_truncated; end
  def is_truncated=(_); end
  def marker; end
  def marker=(_); end
  def max_keys; end
  def max_keys=(_); end
  def name; end
  def name=(_); end
  def next_marker; end
  def next_marker=(_); end
  def prefix; end
  def prefix=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListObjectsOutput < Anonymous_Struct_496
  include Aws::Structure
end
class Anonymous_Struct_497 < Struct
  def bucket; end
  def bucket=(_); end
  def delimiter; end
  def delimiter=(_); end
  def encoding_type; end
  def encoding_type=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def marker; end
  def marker=(_); end
  def max_keys; end
  def max_keys=(_); end
  def optional_object_attributes; end
  def optional_object_attributes=(_); end
  def prefix; end
  def prefix=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ListObjectsRequest < Anonymous_Struct_497
  include Aws::Structure
end
class Anonymous_Struct_498 < Struct
  def common_prefixes; end
  def common_prefixes=(_); end
  def contents; end
  def contents=(_); end
  def continuation_token; end
  def continuation_token=(_); end
  def delimiter; end
  def delimiter=(_); end
  def encoding_type; end
  def encoding_type=(_); end
  def is_truncated; end
  def is_truncated=(_); end
  def key_count; end
  def key_count=(_); end
  def max_keys; end
  def max_keys=(_); end
  def name; end
  def name=(_); end
  def next_continuation_token; end
  def next_continuation_token=(_); end
  def prefix; end
  def prefix=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def start_after; end
  def start_after=(_); end
end
class Aws::S3::Types::ListObjectsV2Output < Anonymous_Struct_498
  include Aws::Structure
end
class Anonymous_Struct_499 < Struct
  def bucket; end
  def bucket=(_); end
  def continuation_token; end
  def continuation_token=(_); end
  def delimiter; end
  def delimiter=(_); end
  def encoding_type; end
  def encoding_type=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def fetch_owner; end
  def fetch_owner=(_); end
  def max_keys; end
  def max_keys=(_); end
  def optional_object_attributes; end
  def optional_object_attributes=(_); end
  def prefix; end
  def prefix=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def start_after; end
  def start_after=(_); end
end
class Aws::S3::Types::ListObjectsV2Request < Anonymous_Struct_499
  include Aws::Structure
end
class Anonymous_Struct_500 < Struct
  def abort_date; end
  def abort_date=(_); end
  def abort_rule_id; end
  def abort_rule_id=(_); end
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def initiator; end
  def initiator=(_); end
  def is_truncated; end
  def is_truncated=(_); end
  def key; end
  def key=(_); end
  def max_parts; end
  def max_parts=(_); end
  def next_part_number_marker; end
  def next_part_number_marker=(_); end
  def owner; end
  def owner=(_); end
  def part_number_marker; end
  def part_number_marker=(_); end
  def parts; end
  def parts=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def storage_class; end
  def storage_class=(_); end
  def upload_id; end
  def upload_id=(_); end
end
class Aws::S3::Types::ListPartsOutput < Anonymous_Struct_500
  include Aws::Structure
end
class Anonymous_Struct_501 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key; end
  def key=(_); end
  def max_parts; end
  def max_parts=(_); end
  def part_number_marker; end
  def part_number_marker=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def upload_id; end
  def upload_id=(_); end
end
class Aws::S3::Types::ListPartsRequest < Anonymous_Struct_501
  include Aws::Structure
end
class Anonymous_Struct_502 < Struct
  def name; end
  def name=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def type; end
  def type=(_); end
end
class Aws::S3::Types::LocationInfo < Anonymous_Struct_502
  include Aws::Structure
end
class Anonymous_Struct_503 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def target_bucket; end
  def target_bucket=(_); end
  def target_grants; end
  def target_grants=(_); end
  def target_object_key_format; end
  def target_object_key_format=(_); end
  def target_prefix; end
  def target_prefix=(_); end
end
class Aws::S3::Types::LoggingEnabled < Anonymous_Struct_503
  include Aws::Structure
end
class Anonymous_Struct_504 < Struct
  def name; end
  def name=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def value; end
  def value=(_); end
end
class Aws::S3::Types::MetadataEntry < Anonymous_Struct_504
  include Aws::Structure
end
class Anonymous_Struct_505 < Struct
  def event_threshold; end
  def event_threshold=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
end
class Aws::S3::Types::Metrics < Anonymous_Struct_505
  include Aws::Structure
end
class Anonymous_Struct_506 < Struct
  def access_point_arn; end
  def access_point_arn=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tags; end
  def tags=(_); end
end
class Aws::S3::Types::MetricsAndOperator < Anonymous_Struct_506
  include Aws::Structure
end
class Anonymous_Struct_507 < Struct
  def filter; end
  def filter=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::MetricsConfiguration < Anonymous_Struct_507
  include Aws::Structure
end
class Anonymous_Struct_508 < Struct
  def access_point_arn; end
  def access_point_arn=(_); end
  def and; end
  def and=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tag; end
  def tag=(_); end
end
class Aws::S3::Types::MetricsFilter < Anonymous_Struct_508
  include Aws::Structure
end
class Anonymous_Struct_509 < Struct
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def initiated; end
  def initiated=(_); end
  def initiator; end
  def initiator=(_); end
  def key; end
  def key=(_); end
  def owner; end
  def owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def storage_class; end
  def storage_class=(_); end
  def upload_id; end
  def upload_id=(_); end
end
class Aws::S3::Types::MultipartUpload < Anonymous_Struct_509
  include Aws::Structure
end
class Aws::S3::Types::NoSuchBucket < Aws::EmptyStructure
end
class Aws::S3::Types::NoSuchKey < Aws::EmptyStructure
end
class Aws::S3::Types::NoSuchUpload < Aws::EmptyStructure
end
class Anonymous_Struct_510 < Struct
  def newer_noncurrent_versions; end
  def newer_noncurrent_versions=(_); end
  def noncurrent_days; end
  def noncurrent_days=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::NoncurrentVersionExpiration < Anonymous_Struct_510
  include Aws::Structure
end
class Anonymous_Struct_511 < Struct
  def newer_noncurrent_versions; end
  def newer_noncurrent_versions=(_); end
  def noncurrent_days; end
  def noncurrent_days=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def storage_class; end
  def storage_class=(_); end
end
class Aws::S3::Types::NoncurrentVersionTransition < Anonymous_Struct_511
  include Aws::Structure
end
class Anonymous_Struct_512 < Struct
  def event_bridge_configuration; end
  def event_bridge_configuration=(_); end
  def lambda_function_configurations; end
  def lambda_function_configurations=(_); end
  def queue_configurations; end
  def queue_configurations=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def topic_configurations; end
  def topic_configurations=(_); end
end
class Aws::S3::Types::NotificationConfiguration < Anonymous_Struct_512
  include Aws::Structure
end
class Anonymous_Struct_513 < Struct
  def cloud_function_configuration; end
  def cloud_function_configuration=(_); end
  def queue_configuration; end
  def queue_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def topic_configuration; end
  def topic_configuration=(_); end
end
class Aws::S3::Types::NotificationConfigurationDeprecated < Anonymous_Struct_513
  include Aws::Structure
end
class Anonymous_Struct_514 < Struct
  def key; end
  def key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::NotificationConfigurationFilter < Anonymous_Struct_514
  include Aws::Structure
end
class Anonymous_Struct_515 < Struct
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def etag; end
  def etag=(_); end
  def key; end
  def key=(_); end
  def last_modified; end
  def last_modified=(_); end
  def owner; end
  def owner=(_); end
  def restore_status; end
  def restore_status=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def size; end
  def size=(_); end
  def storage_class; end
  def storage_class=(_); end
end
class Aws::S3::Types::Object < Anonymous_Struct_515
  include Aws::Structure
end
class Aws::S3::Types::ObjectAlreadyInActiveTierError < Aws::EmptyStructure
end
class Anonymous_Struct_516 < Struct
  def key; end
  def key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::ObjectIdentifier < Anonymous_Struct_516
  include Aws::Structure
end
class Anonymous_Struct_517 < Struct
  def object_lock_enabled; end
  def object_lock_enabled=(_); end
  def rule; end
  def rule=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ObjectLockConfiguration < Anonymous_Struct_517
  include Aws::Structure
end
class Anonymous_Struct_518 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
end
class Aws::S3::Types::ObjectLockLegalHold < Anonymous_Struct_518
  include Aws::Structure
end
class Anonymous_Struct_519 < Struct
  def mode; end
  def mode=(_); end
  def retain_until_date; end
  def retain_until_date=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ObjectLockRetention < Anonymous_Struct_519
  include Aws::Structure
end
class Anonymous_Struct_520 < Struct
  def default_retention; end
  def default_retention=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ObjectLockRule < Anonymous_Struct_520
  include Aws::Structure
end
class Aws::S3::Types::ObjectNotInActiveTierError < Aws::EmptyStructure
end
class Anonymous_Struct_521 < Struct
  def checksum_crc32; end
  def checksum_crc32=(_); end
  def checksum_crc32c; end
  def checksum_crc32c=(_); end
  def checksum_sha1; end
  def checksum_sha1=(_); end
  def checksum_sha256; end
  def checksum_sha256=(_); end
  def part_number; end
  def part_number=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def size; end
  def size=(_); end
end
class Aws::S3::Types::ObjectPart < Anonymous_Struct_521
  include Aws::Structure
end
class Anonymous_Struct_522 < Struct
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def etag; end
  def etag=(_); end
  def is_latest; end
  def is_latest=(_); end
  def key; end
  def key=(_); end
  def last_modified; end
  def last_modified=(_); end
  def owner; end
  def owner=(_); end
  def restore_status; end
  def restore_status=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def size; end
  def size=(_); end
  def storage_class; end
  def storage_class=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::ObjectVersion < Anonymous_Struct_522
  include Aws::Structure
end
class Anonymous_Struct_523 < Struct
  def s3; end
  def s3=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::OutputLocation < Anonymous_Struct_523
  include Aws::Structure
end
class Anonymous_Struct_524 < Struct
  def csv; end
  def csv=(_); end
  def json; end
  def json=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::OutputSerialization < Anonymous_Struct_524
  include Aws::Structure
end
class Anonymous_Struct_525 < Struct
  def display_name; end
  def display_name=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Owner < Anonymous_Struct_525
  include Aws::Structure
end
class Anonymous_Struct_526 < Struct
  def rules; end
  def rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::OwnershipControls < Anonymous_Struct_526
  include Aws::Structure
end
class Anonymous_Struct_527 < Struct
  def object_ownership; end
  def object_ownership=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::OwnershipControlsRule < Anonymous_Struct_527
  include Aws::Structure
end
class Aws::S3::Types::ParquetInput < Aws::EmptyStructure
end
class Anonymous_Struct_528 < Struct
  def checksum_crc32; end
  def checksum_crc32=(_); end
  def checksum_crc32c; end
  def checksum_crc32c=(_); end
  def checksum_sha1; end
  def checksum_sha1=(_); end
  def checksum_sha256; end
  def checksum_sha256=(_); end
  def etag; end
  def etag=(_); end
  def last_modified; end
  def last_modified=(_); end
  def part_number; end
  def part_number=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def size; end
  def size=(_); end
end
class Aws::S3::Types::Part < Anonymous_Struct_528
  include Aws::Structure
end
class Anonymous_Struct_529 < Struct
  def partition_date_source; end
  def partition_date_source=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PartitionedPrefix < Anonymous_Struct_529
  include Aws::Structure
end
class Anonymous_Struct_530 < Struct
  def is_public; end
  def is_public=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PolicyStatus < Anonymous_Struct_530
  include Aws::Structure
end
class Anonymous_Struct_531 < Struct
  def bytes_processed; end
  def bytes_processed=(_); end
  def bytes_returned; end
  def bytes_returned=(_); end
  def bytes_scanned; end
  def bytes_scanned=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Progress < Anonymous_Struct_531
  include Aws::Structure
end
class Anonymous_Struct_532 < Struct
  def details; end
  def details=(_); end
  def event_type; end
  def event_type=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ProgressEvent < Anonymous_Struct_532
  include Aws::Structure
end
class Anonymous_Struct_533 < Struct
  def block_public_acls; end
  def block_public_acls=(_); end
  def block_public_policy; end
  def block_public_policy=(_); end
  def ignore_public_acls; end
  def ignore_public_acls=(_); end
  def restrict_public_buckets; end
  def restrict_public_buckets=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PublicAccessBlockConfiguration < Anonymous_Struct_533
  include Aws::Structure
end
class Anonymous_Struct_534 < Struct
  def accelerate_configuration; end
  def accelerate_configuration=(_); end
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketAccelerateConfigurationRequest < Anonymous_Struct_534
  include Aws::Structure
end
class Anonymous_Struct_535 < Struct
  def access_control_policy; end
  def access_control_policy=(_); end
  def acl; end
  def acl=(_); end
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def grant_full_control; end
  def grant_full_control=(_); end
  def grant_read; end
  def grant_read=(_); end
  def grant_read_acp; end
  def grant_read_acp=(_); end
  def grant_write; end
  def grant_write=(_); end
  def grant_write_acp; end
  def grant_write_acp=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketAclRequest < Anonymous_Struct_535
  include Aws::Structure
end
class Anonymous_Struct_536 < Struct
  def analytics_configuration; end
  def analytics_configuration=(_); end
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketAnalyticsConfigurationRequest < Anonymous_Struct_536
  include Aws::Structure
end
class Anonymous_Struct_537 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_md5; end
  def content_md5=(_); end
  def cors_configuration; end
  def cors_configuration=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketCorsRequest < Anonymous_Struct_537
  include Aws::Structure
end
class Anonymous_Struct_538 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption_configuration; end
  def server_side_encryption_configuration=(_); end
end
class Aws::S3::Types::PutBucketEncryptionRequest < Anonymous_Struct_538
  include Aws::Structure
end
class Anonymous_Struct_539 < Struct
  def bucket; end
  def bucket=(_); end
  def id; end
  def id=(_); end
  def intelligent_tiering_configuration; end
  def intelligent_tiering_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketIntelligentTieringConfigurationRequest < Anonymous_Struct_539
  include Aws::Structure
end
class Anonymous_Struct_540 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def id; end
  def id=(_); end
  def inventory_configuration; end
  def inventory_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketInventoryConfigurationRequest < Anonymous_Struct_540
  include Aws::Structure
end
class Anonymous_Struct_541 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def lifecycle_configuration; end
  def lifecycle_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketLifecycleConfigurationRequest < Anonymous_Struct_541
  include Aws::Structure
end
class Anonymous_Struct_542 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def lifecycle_configuration; end
  def lifecycle_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketLifecycleRequest < Anonymous_Struct_542
  include Aws::Structure
end
class Anonymous_Struct_543 < Struct
  def bucket; end
  def bucket=(_); end
  def bucket_logging_status; end
  def bucket_logging_status=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketLoggingRequest < Anonymous_Struct_543
  include Aws::Structure
end
class Anonymous_Struct_544 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def id; end
  def id=(_); end
  def metrics_configuration; end
  def metrics_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketMetricsConfigurationRequest < Anonymous_Struct_544
  include Aws::Structure
end
class Anonymous_Struct_545 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def notification_configuration; end
  def notification_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def skip_destination_validation; end
  def skip_destination_validation=(_); end
end
class Aws::S3::Types::PutBucketNotificationConfigurationRequest < Anonymous_Struct_545
  include Aws::Structure
end
class Anonymous_Struct_546 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def notification_configuration; end
  def notification_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketNotificationRequest < Anonymous_Struct_546
  include Aws::Structure
end
class Anonymous_Struct_547 < Struct
  def bucket; end
  def bucket=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def ownership_controls; end
  def ownership_controls=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketOwnershipControlsRequest < Anonymous_Struct_547
  include Aws::Structure
end
class Anonymous_Struct_548 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def confirm_remove_self_bucket_access; end
  def confirm_remove_self_bucket_access=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def policy; end
  def policy=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketPolicyRequest < Anonymous_Struct_548
  include Aws::Structure
end
class Anonymous_Struct_549 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def replication_configuration; end
  def replication_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def token; end
  def token=(_); end
end
class Aws::S3::Types::PutBucketReplicationRequest < Anonymous_Struct_549
  include Aws::Structure
end
class Anonymous_Struct_550 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def request_payment_configuration; end
  def request_payment_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutBucketRequestPaymentRequest < Anonymous_Struct_550
  include Aws::Structure
end
class Anonymous_Struct_551 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tagging; end
  def tagging=(_); end
end
class Aws::S3::Types::PutBucketTaggingRequest < Anonymous_Struct_551
  include Aws::Structure
end
class Anonymous_Struct_552 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def mfa; end
  def mfa=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def versioning_configuration; end
  def versioning_configuration=(_); end
end
class Aws::S3::Types::PutBucketVersioningRequest < Anonymous_Struct_552
  include Aws::Structure
end
class Anonymous_Struct_553 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def website_configuration; end
  def website_configuration=(_); end
end
class Aws::S3::Types::PutBucketWebsiteRequest < Anonymous_Struct_553
  include Aws::Structure
end
class Anonymous_Struct_554 < Struct
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutObjectAclOutput < Anonymous_Struct_554
  include Aws::Structure
end
class Anonymous_Struct_555 < Struct
  def access_control_policy; end
  def access_control_policy=(_); end
  def acl; end
  def acl=(_); end
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def grant_full_control; end
  def grant_full_control=(_); end
  def grant_read; end
  def grant_read=(_); end
  def grant_read_acp; end
  def grant_read_acp=(_); end
  def grant_write; end
  def grant_write=(_); end
  def grant_write_acp; end
  def grant_write_acp=(_); end
  def key; end
  def key=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::PutObjectAclRequest < Anonymous_Struct_555
  include Aws::Structure
end
class Anonymous_Struct_556 < Struct
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutObjectLegalHoldOutput < Anonymous_Struct_556
  include Aws::Structure
end
class Anonymous_Struct_557 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key; end
  def key=(_); end
  def legal_hold; end
  def legal_hold=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::PutObjectLegalHoldRequest < Anonymous_Struct_557
  include Aws::Structure
end
class Anonymous_Struct_558 < Struct
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutObjectLockConfigurationOutput < Anonymous_Struct_558
  include Aws::Structure
end
class Anonymous_Struct_559 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def object_lock_configuration; end
  def object_lock_configuration=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def token; end
  def token=(_); end
end
class Aws::S3::Types::PutObjectLockConfigurationRequest < Anonymous_Struct_559
  include Aws::Structure
end
class Anonymous_Struct_560 < Struct
  def bucket_key_enabled; end
  def bucket_key_enabled=(_); end
  def checksum_crc32; end
  def checksum_crc32=(_); end
  def checksum_crc32c; end
  def checksum_crc32c=(_); end
  def checksum_sha1; end
  def checksum_sha1=(_); end
  def checksum_sha256; end
  def checksum_sha256=(_); end
  def etag; end
  def etag=(_); end
  def expiration; end
  def expiration=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_encryption_context; end
  def ssekms_encryption_context=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::PutObjectOutput < Anonymous_Struct_560
  include Aws::Structure
end
class Anonymous_Struct_561 < Struct
  def acl; end
  def acl=(_); end
  def body; end
  def body=(_); end
  def bucket; end
  def bucket=(_); end
  def bucket_key_enabled; end
  def bucket_key_enabled=(_); end
  def cache_control; end
  def cache_control=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def checksum_crc32; end
  def checksum_crc32=(_); end
  def checksum_crc32c; end
  def checksum_crc32c=(_); end
  def checksum_sha1; end
  def checksum_sha1=(_); end
  def checksum_sha256; end
  def checksum_sha256=(_); end
  def content_disposition; end
  def content_disposition=(_); end
  def content_encoding; end
  def content_encoding=(_); end
  def content_language; end
  def content_language=(_); end
  def content_length; end
  def content_length=(_); end
  def content_md5; end
  def content_md5=(_); end
  def content_type; end
  def content_type=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def expires; end
  def expires=(_); end
  def grant_full_control; end
  def grant_full_control=(_); end
  def grant_read; end
  def grant_read=(_); end
  def grant_read_acp; end
  def grant_read_acp=(_); end
  def grant_write_acp; end
  def grant_write_acp=(_); end
  def key; end
  def key=(_); end
  def metadata; end
  def metadata=(_); end
  def object_lock_legal_hold_status; end
  def object_lock_legal_hold_status=(_); end
  def object_lock_mode; end
  def object_lock_mode=(_); end
  def object_lock_retain_until_date; end
  def object_lock_retain_until_date=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_encryption_context; end
  def ssekms_encryption_context=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def storage_class; end
  def storage_class=(_); end
  def tagging; end
  def tagging=(_); end
  def website_redirect_location; end
  def website_redirect_location=(_); end
end
class Aws::S3::Types::PutObjectRequest < Anonymous_Struct_561
  include Aws::Structure
end
class Anonymous_Struct_562 < Struct
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutObjectRetentionOutput < Anonymous_Struct_562
  include Aws::Structure
end
class Anonymous_Struct_563 < Struct
  def bucket; end
  def bucket=(_); end
  def bypass_governance_retention; end
  def bypass_governance_retention=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key; end
  def key=(_); end
  def request_payer; end
  def request_payer=(_); end
  def retention; end
  def retention=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::PutObjectRetentionRequest < Anonymous_Struct_563
  include Aws::Structure
end
class Anonymous_Struct_564 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::PutObjectTaggingOutput < Anonymous_Struct_564
  include Aws::Structure
end
class Anonymous_Struct_565 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key; end
  def key=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tagging; end
  def tagging=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::PutObjectTaggingRequest < Anonymous_Struct_565
  include Aws::Structure
end
class Anonymous_Struct_566 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def public_access_block_configuration; end
  def public_access_block_configuration=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PutPublicAccessBlockRequest < Anonymous_Struct_566
  include Aws::Structure
end
class Anonymous_Struct_567 < Struct
  def events; end
  def events=(_); end
  def filter; end
  def filter=(_); end
  def id; end
  def id=(_); end
  def queue_arn; end
  def queue_arn=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::QueueConfiguration < Anonymous_Struct_567
  include Aws::Structure
end
class Anonymous_Struct_568 < Struct
  def event; end
  def event=(_); end
  def events; end
  def events=(_); end
  def id; end
  def id=(_); end
  def queue; end
  def queue=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::QueueConfigurationDeprecated < Anonymous_Struct_568
  include Aws::Structure
end
class Anonymous_Struct_569 < Struct
  def event_type; end
  def event_type=(_); end
  def payload; end
  def payload=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::RecordsEvent < Anonymous_Struct_569
  include Aws::Structure
end
class Anonymous_Struct_570 < Struct
  def host_name; end
  def host_name=(_); end
  def http_redirect_code; end
  def http_redirect_code=(_); end
  def protocol; end
  def protocol=(_); end
  def replace_key_prefix_with; end
  def replace_key_prefix_with=(_); end
  def replace_key_with; end
  def replace_key_with=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Redirect < Anonymous_Struct_570
  include Aws::Structure
end
class Anonymous_Struct_571 < Struct
  def host_name; end
  def host_name=(_); end
  def protocol; end
  def protocol=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::RedirectAllRequestsTo < Anonymous_Struct_571
  include Aws::Structure
end
class Anonymous_Struct_572 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
end
class Aws::S3::Types::ReplicaModifications < Anonymous_Struct_572
  include Aws::Structure
end
class Anonymous_Struct_573 < Struct
  def role; end
  def role=(_); end
  def rules; end
  def rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ReplicationConfiguration < Anonymous_Struct_573
  include Aws::Structure
end
class Anonymous_Struct_574 < Struct
  def delete_marker_replication; end
  def delete_marker_replication=(_); end
  def destination; end
  def destination=(_); end
  def existing_object_replication; end
  def existing_object_replication=(_); end
  def filter; end
  def filter=(_); end
  def id; end
  def id=(_); end
  def prefix; end
  def prefix=(_); end
  def priority; end
  def priority=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def source_selection_criteria; end
  def source_selection_criteria=(_); end
  def status; end
  def status=(_); end
end
class Aws::S3::Types::ReplicationRule < Anonymous_Struct_574
  include Aws::Structure
end
class Anonymous_Struct_575 < Struct
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tags; end
  def tags=(_); end
end
class Aws::S3::Types::ReplicationRuleAndOperator < Anonymous_Struct_575
  include Aws::Structure
end
class Anonymous_Struct_576 < Struct
  def and; end
  def and=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tag; end
  def tag=(_); end
end
class Aws::S3::Types::ReplicationRuleFilter < Anonymous_Struct_576
  include Aws::Structure
end
class Anonymous_Struct_577 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
  def time; end
  def time=(_); end
end
class Aws::S3::Types::ReplicationTime < Anonymous_Struct_577
  include Aws::Structure
end
class Anonymous_Struct_578 < Struct
  def minutes; end
  def minutes=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ReplicationTimeValue < Anonymous_Struct_578
  include Aws::Structure
end
class Anonymous_Struct_579 < Struct
  def payer; end
  def payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::RequestPaymentConfiguration < Anonymous_Struct_579
  include Aws::Structure
end
class Anonymous_Struct_580 < Struct
  def enabled; end
  def enabled=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::RequestProgress < Anonymous_Struct_580
  include Aws::Structure
end
class Anonymous_Struct_581 < Struct
  def request_charged; end
  def request_charged=(_); end
  def restore_output_path; end
  def restore_output_path=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::RestoreObjectOutput < Anonymous_Struct_581
  include Aws::Structure
end
class Anonymous_Struct_582 < Struct
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key; end
  def key=(_); end
  def request_payer; end
  def request_payer=(_); end
  def restore_request; end
  def restore_request=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::RestoreObjectRequest < Anonymous_Struct_582
  include Aws::Structure
end
class Anonymous_Struct_583 < Struct
  def days; end
  def days=(_); end
  def description; end
  def description=(_); end
  def glacier_job_parameters; end
  def glacier_job_parameters=(_); end
  def output_location; end
  def output_location=(_); end
  def select_parameters; end
  def select_parameters=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tier; end
  def tier=(_); end
  def type; end
  def type=(_); end
end
class Aws::S3::Types::RestoreRequest < Anonymous_Struct_583
  include Aws::Structure
end
class Anonymous_Struct_584 < Struct
  def is_restore_in_progress; end
  def is_restore_in_progress=(_); end
  def restore_expiry_date; end
  def restore_expiry_date=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::RestoreStatus < Anonymous_Struct_584
  include Aws::Structure
end
class Anonymous_Struct_585 < Struct
  def condition; end
  def condition=(_); end
  def redirect; end
  def redirect=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::RoutingRule < Anonymous_Struct_585
  include Aws::Structure
end
class Anonymous_Struct_586 < Struct
  def abort_incomplete_multipart_upload; end
  def abort_incomplete_multipart_upload=(_); end
  def expiration; end
  def expiration=(_); end
  def id; end
  def id=(_); end
  def noncurrent_version_expiration; end
  def noncurrent_version_expiration=(_); end
  def noncurrent_version_transition; end
  def noncurrent_version_transition=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
  def transition; end
  def transition=(_); end
end
class Aws::S3::Types::Rule < Anonymous_Struct_586
  include Aws::Structure
end
class Anonymous_Struct_587 < Struct
  def filter_rules; end
  def filter_rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::S3KeyFilter < Anonymous_Struct_587
  include Aws::Structure
end
class Anonymous_Struct_588 < Struct
  def access_control_list; end
  def access_control_list=(_); end
  def bucket_name; end
  def bucket_name=(_); end
  def canned_acl; end
  def canned_acl=(_); end
  def encryption; end
  def encryption=(_); end
  def prefix; end
  def prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def storage_class; end
  def storage_class=(_); end
  def tagging; end
  def tagging=(_); end
  def user_metadata; end
  def user_metadata=(_); end
end
class Aws::S3::Types::S3Location < Anonymous_Struct_588
  include Aws::Structure
end
class Anonymous_Struct_589 < Struct
  def key_id; end
  def key_id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::SSEKMS < Anonymous_Struct_589
  include Aws::Structure
end
class Aws::S3::Types::SSES3 < Aws::EmptyStructure
end
class Anonymous_Struct_590 < Struct
  def end; end
  def end=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def start; end
  def start=(_); end
end
class Aws::S3::Types::ScanRange < Anonymous_Struct_590
  include Aws::Structure
end
class Anonymous_Struct_591 < Struct
  def payload; end
  def payload=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::SelectObjectContentOutput < Anonymous_Struct_591
  include Aws::Structure
end
class Anonymous_Struct_592 < Struct
  def bucket; end
  def bucket=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def expression; end
  def expression=(_); end
  def expression_type; end
  def expression_type=(_); end
  def input_serialization; end
  def input_serialization=(_); end
  def key; end
  def key=(_); end
  def output_serialization; end
  def output_serialization=(_); end
  def request_progress; end
  def request_progress=(_); end
  def scan_range; end
  def scan_range=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
end
class Aws::S3::Types::SelectObjectContentRequest < Anonymous_Struct_592
  include Aws::Structure
end
class Anonymous_Struct_593 < Struct
  def expression; end
  def expression=(_); end
  def expression_type; end
  def expression_type=(_); end
  def input_serialization; end
  def input_serialization=(_); end
  def output_serialization; end
  def output_serialization=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::SelectParameters < Anonymous_Struct_593
  include Aws::Structure
end
class Anonymous_Struct_594 < Struct
  def kms_master_key_id; end
  def kms_master_key_id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def sse_algorithm; end
  def sse_algorithm=(_); end
end
class Aws::S3::Types::ServerSideEncryptionByDefault < Anonymous_Struct_594
  include Aws::Structure
end
class Anonymous_Struct_595 < Struct
  def rules; end
  def rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ServerSideEncryptionConfiguration < Anonymous_Struct_595
  include Aws::Structure
end
class Anonymous_Struct_596 < Struct
  def apply_server_side_encryption_by_default; end
  def apply_server_side_encryption_by_default=(_); end
  def bucket_key_enabled; end
  def bucket_key_enabled=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::ServerSideEncryptionRule < Anonymous_Struct_596
  include Aws::Structure
end
class Anonymous_Struct_597 < Struct
  def access_key_id; end
  def access_key_id=(_); end
  def expiration; end
  def expiration=(_); end
  def secret_access_key; end
  def secret_access_key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def session_token; end
  def session_token=(_); end
end
class Aws::S3::Types::SessionCredentials < Anonymous_Struct_597
  include Aws::Structure
end
class Aws::S3::Types::SimplePrefix < Aws::EmptyStructure
end
class Anonymous_Struct_598 < Struct
  def replica_modifications; end
  def replica_modifications=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def sse_kms_encrypted_objects; end
  def sse_kms_encrypted_objects=(_); end
end
class Aws::S3::Types::SourceSelectionCriteria < Anonymous_Struct_598
  include Aws::Structure
end
class Anonymous_Struct_599 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
end
class Aws::S3::Types::SseKmsEncryptedObjects < Anonymous_Struct_599
  include Aws::Structure
end
class Anonymous_Struct_600 < Struct
  def bytes_processed; end
  def bytes_processed=(_); end
  def bytes_returned; end
  def bytes_returned=(_); end
  def bytes_scanned; end
  def bytes_scanned=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Stats < Anonymous_Struct_600
  include Aws::Structure
end
class Anonymous_Struct_601 < Struct
  def details; end
  def details=(_); end
  def event_type; end
  def event_type=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::StatsEvent < Anonymous_Struct_601
  include Aws::Structure
end
class Anonymous_Struct_602 < Struct
  def data_export; end
  def data_export=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::StorageClassAnalysis < Anonymous_Struct_602
  include Aws::Structure
end
class Anonymous_Struct_603 < Struct
  def destination; end
  def destination=(_); end
  def output_schema_version; end
  def output_schema_version=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::StorageClassAnalysisDataExport < Anonymous_Struct_603
  include Aws::Structure
end
class Anonymous_Struct_604 < Struct
  def key; end
  def key=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def value; end
  def value=(_); end
end
class Aws::S3::Types::Tag < Anonymous_Struct_604
  include Aws::Structure
end
class Anonymous_Struct_605 < Struct
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def tag_set; end
  def tag_set=(_); end
end
class Aws::S3::Types::Tagging < Anonymous_Struct_605
  include Aws::Structure
end
class Anonymous_Struct_606 < Struct
  def grantee; end
  def grantee=(_); end
  def permission; end
  def permission=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::TargetGrant < Anonymous_Struct_606
  include Aws::Structure
end
class Anonymous_Struct_607 < Struct
  def partitioned_prefix; end
  def partitioned_prefix=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def simple_prefix; end
  def simple_prefix=(_); end
end
class Aws::S3::Types::TargetObjectKeyFormat < Anonymous_Struct_607
  include Aws::Structure
end
class Anonymous_Struct_608 < Struct
  def access_tier; end
  def access_tier=(_); end
  def days; end
  def days=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::Tiering < Anonymous_Struct_608
  include Aws::Structure
end
class Anonymous_Struct_609 < Struct
  def events; end
  def events=(_); end
  def filter; end
  def filter=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def topic_arn; end
  def topic_arn=(_); end
end
class Aws::S3::Types::TopicConfiguration < Anonymous_Struct_609
  include Aws::Structure
end
class Anonymous_Struct_610 < Struct
  def event; end
  def event=(_); end
  def events; end
  def events=(_); end
  def id; end
  def id=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def topic; end
  def topic=(_); end
end
class Aws::S3::Types::TopicConfigurationDeprecated < Anonymous_Struct_610
  include Aws::Structure
end
class Anonymous_Struct_611 < Struct
  def date; end
  def date=(_); end
  def days; end
  def days=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def storage_class; end
  def storage_class=(_); end
end
class Aws::S3::Types::Transition < Anonymous_Struct_611
  include Aws::Structure
end
class Anonymous_Struct_612 < Struct
  def bucket_key_enabled; end
  def bucket_key_enabled=(_); end
  def copy_part_result; end
  def copy_part_result=(_); end
  def copy_source_version_id; end
  def copy_source_version_id=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
end
class Aws::S3::Types::UploadPartCopyOutput < Anonymous_Struct_612
  include Aws::Structure
end
class Anonymous_Struct_613 < Struct
  def bucket; end
  def bucket=(_); end
  def copy_source; end
  def copy_source=(_); end
  def copy_source_if_match; end
  def copy_source_if_match=(_); end
  def copy_source_if_modified_since; end
  def copy_source_if_modified_since=(_); end
  def copy_source_if_none_match; end
  def copy_source_if_none_match=(_); end
  def copy_source_if_unmodified_since; end
  def copy_source_if_unmodified_since=(_); end
  def copy_source_range; end
  def copy_source_range=(_); end
  def copy_source_sse_customer_algorithm; end
  def copy_source_sse_customer_algorithm=(_); end
  def copy_source_sse_customer_key; end
  def copy_source_sse_customer_key=(_); end
  def copy_source_sse_customer_key_md5; end
  def copy_source_sse_customer_key_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def expected_source_bucket_owner; end
  def expected_source_bucket_owner=(_); end
  def key; end
  def key=(_); end
  def part_number; end
  def part_number=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def upload_id; end
  def upload_id=(_); end
end
class Aws::S3::Types::UploadPartCopyRequest < Anonymous_Struct_613
  include Aws::Structure
end
class Anonymous_Struct_614 < Struct
  def bucket_key_enabled; end
  def bucket_key_enabled=(_); end
  def checksum_crc32; end
  def checksum_crc32=(_); end
  def checksum_crc32c; end
  def checksum_crc32c=(_); end
  def checksum_sha1; end
  def checksum_sha1=(_); end
  def checksum_sha256; end
  def checksum_sha256=(_); end
  def etag; end
  def etag=(_); end
  def request_charged; end
  def request_charged=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
end
class Aws::S3::Types::UploadPartOutput < Anonymous_Struct_614
  include Aws::Structure
end
class Anonymous_Struct_615 < Struct
  def body; end
  def body=(_); end
  def bucket; end
  def bucket=(_); end
  def checksum_algorithm; end
  def checksum_algorithm=(_); end
  def checksum_crc32; end
  def checksum_crc32=(_); end
  def checksum_crc32c; end
  def checksum_crc32c=(_); end
  def checksum_sha1; end
  def checksum_sha1=(_); end
  def checksum_sha256; end
  def checksum_sha256=(_); end
  def content_length; end
  def content_length=(_); end
  def content_md5; end
  def content_md5=(_); end
  def expected_bucket_owner; end
  def expected_bucket_owner=(_); end
  def key; end
  def key=(_); end
  def part_number; end
  def part_number=(_); end
  def request_payer; end
  def request_payer=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key; end
  def sse_customer_key=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def upload_id; end
  def upload_id=(_); end
end
class Aws::S3::Types::UploadPartRequest < Anonymous_Struct_615
  include Aws::Structure
end
class Anonymous_Struct_616 < Struct
  def mfa_delete; end
  def mfa_delete=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def status; end
  def status=(_); end
end
class Aws::S3::Types::VersioningConfiguration < Anonymous_Struct_616
  include Aws::Structure
end
class Anonymous_Struct_617 < Struct
  def error_document; end
  def error_document=(_); end
  def index_document; end
  def index_document=(_); end
  def redirect_all_requests_to; end
  def redirect_all_requests_to=(_); end
  def routing_rules; end
  def routing_rules=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::WebsiteConfiguration < Anonymous_Struct_617
  include Aws::Structure
end
class Anonymous_Struct_618 < Struct
  def accept_ranges; end
  def accept_ranges=(_); end
  def body; end
  def body=(_); end
  def bucket_key_enabled; end
  def bucket_key_enabled=(_); end
  def cache_control; end
  def cache_control=(_); end
  def checksum_crc32; end
  def checksum_crc32=(_); end
  def checksum_crc32c; end
  def checksum_crc32c=(_); end
  def checksum_sha1; end
  def checksum_sha1=(_); end
  def checksum_sha256; end
  def checksum_sha256=(_); end
  def content_disposition; end
  def content_disposition=(_); end
  def content_encoding; end
  def content_encoding=(_); end
  def content_language; end
  def content_language=(_); end
  def content_length; end
  def content_length=(_); end
  def content_range; end
  def content_range=(_); end
  def content_type; end
  def content_type=(_); end
  def delete_marker; end
  def delete_marker=(_); end
  def error_code; end
  def error_code=(_); end
  def error_message; end
  def error_message=(_); end
  def etag; end
  def etag=(_); end
  def expiration; end
  def expiration=(_); end
  def expires; end
  def expires=(_); end
  def last_modified; end
  def last_modified=(_); end
  def metadata; end
  def metadata=(_); end
  def missing_meta; end
  def missing_meta=(_); end
  def object_lock_legal_hold_status; end
  def object_lock_legal_hold_status=(_); end
  def object_lock_mode; end
  def object_lock_mode=(_); end
  def object_lock_retain_until_date; end
  def object_lock_retain_until_date=(_); end
  def parts_count; end
  def parts_count=(_); end
  def replication_status; end
  def replication_status=(_); end
  def request_charged; end
  def request_charged=(_); end
  def request_route; end
  def request_route=(_); end
  def request_token; end
  def request_token=(_); end
  def restore; end
  def restore=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def server_side_encryption; end
  def server_side_encryption=(_); end
  def sse_customer_algorithm; end
  def sse_customer_algorithm=(_); end
  def sse_customer_key_md5; end
  def sse_customer_key_md5=(_); end
  def ssekms_key_id; end
  def ssekms_key_id=(_); end
  def status_code; end
  def status_code=(_); end
  def storage_class; end
  def storage_class=(_); end
  def tag_count; end
  def tag_count=(_); end
  def version_id; end
  def version_id=(_); end
end
class Aws::S3::Types::WriteGetObjectResponseRequest < Anonymous_Struct_618
  include Aws::Structure
end
class Aws::S3::Types::SelectObjectContentEventStream < Enumerator
  def event_types; end
end
module Aws::S3::ClientApi
  include Seahorse::Model
end
module Aws::S3::Plugins
end
class Aws::S3::Plugins::Endpoints < Seahorse::Client::Plugin
  def add_handlers(handlers, _config); end
end
class Aws::S3::Plugins::Endpoints::Handler < Seahorse::Client::Handler
  def apply_endpoint_headers(context, headers); end
  def call(context); end
  def parameters_for_operation(context); end
end
module Aws
end
class Aws::S3::Plugins::Accelerate < Seahorse::Client::Plugin
  def add_handlers(handlers, config); end
end
class Aws::S3::Plugins::Accelerate::OptionHandler < Seahorse::Client::Handler
  def call(context); end
end
class Aws::S3::Plugins::AccessGrants < Seahorse::Client::Plugin
  def add_handlers(handlers, config); end
  def after_initialize(client); end
  def self.s3control?; end
end
class Aws::S3::Plugins::AccessGrants::Handler < Seahorse::Client::Handler
  def access_grants_operation?(context); end
  def call(context); end
  def common_prefixes(keys); end
  def credentials_head_bucket_call?(provider); end
  def s3_express_endpoint?(context); end
  def with_metric(credentials, &block); end
end
class Aws::S3::Plugins::ARN < Seahorse::Client::Plugin
  def self.resolve_s3_disable_multiregion_access_points(cfg); end
  def self.resolve_s3_use_arn_region(cfg); end
end
class Aws::S3::Plugins::BucketDns < Seahorse::Client::Plugin
  def self.dns_compatible?(bucket_name, ssl); end
  def self.valid_subdomain?(bucket_name); end
end
class Aws::S3::Plugins::BucketNameRestrictions < Seahorse::Client::Plugin
end
class Aws::S3::Plugins::BucketNameRestrictions::Handler < Seahorse::Client::Handler
  def _bucket_member(input); end
  def call(context); end
end
class Aws::S3::Plugins::Dualstack < Seahorse::Client::Plugin
  def add_handlers(handlers, _config); end
end
class Aws::S3::Plugins::Dualstack::OptionHandler < Seahorse::Client::Handler
  def call(context); end
end
class Aws::S3::Plugins::Expect100Continue < Seahorse::Client::Plugin
  def add_handlers(handlers, config); end
end
class Aws::S3::Plugins::Expect100Continue::Handler < Seahorse::Client::Handler
  def call(context); end
end
class Aws::S3::Plugins::ExpressSessionAuth < Seahorse::Client::Plugin
  def after_initialize(client); end
  def self.resolve_disable_s3_express_session_auth(cfg); end
end
class Aws::S3::Plugins::ExpressSessionAuth::Handler < Seahorse::Client::Handler
  def call(context); end
  def checksum_required?(context); end
  def with_metric(credentials, &block); end
end
class Aws::S3::Plugins::GetBucketLocationFix < Seahorse::Client::Plugin
end
class Aws::S3::Plugins::GetBucketLocationFix::Handler < Seahorse::Client::Handler
  def call(context); end
end
class Aws::S3::Plugins::Http200Errors < Seahorse::Client::Plugin
end
class Aws::S3::Plugins::Http200Errors::Handler < Seahorse::Client::Handler
  def call(context); end
  def check_for_error(context); end
  def incomplete_xml_body?(xml, output); end
  def members_in_body?(output); end
  def streaming_output?(output); end
  def structure_shape?(shape); end
end
class Aws::S3::Plugins::IADRegionalEndpoint < Seahorse::Client::Plugin
  def self.resolve_iad_regional_endpoint(cfg); end
end
class Aws::S3::Plugins::LocationConstraint < Seahorse::Client::Plugin
end
class Aws::S3::Plugins::LocationConstraint::Handler < Seahorse::Client::Handler
  def call(context); end
  def populate_location_constraint(params, region); end
end
class Aws::S3::Plugins::Md5s < Seahorse::Client::Plugin
  def add_handlers(handlers, config); end
end
class Aws::S3::Plugins::Md5s::Handler < Seahorse::Client::Handler
  def call(context); end
  def md5(value); end
  def update_in_chunks(digest, io); end
end
class Aws::S3::Plugins::Redirects < Seahorse::Client::Plugin
  def add_handlers(handlers, config); end
end
class Aws::S3::Plugins::Redirects::Handler < Seahorse::Client::Handler
  def call(context); end
end
class Aws::S3::Plugins::S3HostId < Seahorse::Client::Plugin
end
class Aws::S3::Plugins::S3HostId::Handler < Seahorse::Client::Handler
  def call(context); end
end
class Aws::S3::Plugins::S3Signer < Seahorse::Client::Plugin
  def add_handlers(handlers, cfg); end
  def add_legacy_handler(handlers); end
  def add_v4_handlers(handlers); end
  def self.custom_endpoint?(context); end
  def self.new_hostname(context, region); end
end
class Aws::S3::Plugins::S3Signer::LegacyHandler < Seahorse::Client::Handler
  def call(context); end
end
class Aws::S3::Plugins::S3Signer::CachedBucketRegionHandler < Seahorse::Client::Handler
  def call(context); end
  def check_for_cached_region(context, bucket); end
end
class Aws::S3::Plugins::S3Signer::BucketRegionErrorHandler < Seahorse::Client::Handler
  def call(context); end
  def expired_credentials?(resp); end
  def fips_region?(resp); end
  def get_region_and_retry(context); end
  def handle_region_errors(response); end
  def log_warning(context, actual_region); end
  def region_from_body(body); end
  def resign_with_new_region(context, actual_region); end
  def update_bucket_cache(context, actual_region); end
  def wrong_sigv4_region?(resp); end
end
class Aws::S3::Plugins::SseCpk < Seahorse::Client::Plugin
end
class Aws::S3::Plugins::SseCpk::Handler < Seahorse::Client::Handler
  def base64(str); end
  def call(context); end
  def compute_key_md5(context); end
  def md5(str); end
  def require_https(context); end
end
class Aws::S3::Plugins::SkipWholeMultipartGetChecksums < Seahorse::Client::Plugin
end
class Aws::S3::Plugins::SkipWholeMultipartGetChecksums::Handler < Seahorse::Client::Handler
  def call(context); end
end
class Aws::S3::Plugins::RetryableBlockIO
  def initialize(block_io); end
  def read(*args, **, &block); end
  def rewind; end
  def size(*args, **, &block); end
  def truncate(_integer); end
  def write(*args, **, &block); end
  extend Forwardable
end
class Aws::S3::Plugins::RetryableManagedFile
  def close(*args, **, &block); end
  def initialize(managed_file); end
  def open?(*args, **, &block); end
  def read(*args, **, &block); end
  def rewind; end
  def size(*args, **, &block); end
  def truncate(_integer); end
  def write(*args, **, &block); end
  extend Forwardable
end
class Aws::S3::Plugins::NonRetryableStreamingError < StandardError
  def initialize(error); end
  def original_error; end
end
class Aws::S3::Plugins::StreamingRetry < Seahorse::Client::Plugin
end
class Aws::S3::Plugins::StreamingRetry::Handler < Seahorse::Client::Handler
  def add_event_listeners(context, target); end
  def call(context); end
  def retryable_body?(context); end
  def supported_target?(target); end
  def truncated_body?(error); end
end
class Aws::S3::Plugins::UrlEncodedKeys < Seahorse::Client::Plugin
end
class Aws::S3::Plugins::UrlEncodedKeys::Handler < Seahorse::Client::Handler
  def call(context); end
  def decode(member, struct); end
  def decode_list_multipart_uploads_keys(data); end
  def decode_list_object_versions_keys(data); end
  def decode_list_objects_keys(data); end
  def manage_keys(context); end
end
class Aws::S3::Client < Seahorse::Client::Base
  def abort_multipart_upload(params = nil, options = nil); end
  def build_request(operation_name, params = nil); end
  def complete_multipart_upload(params = nil, options = nil); end
  def copy_object(params = nil, options = nil); end
  def create_bucket(params = nil, options = nil); end
  def create_multipart_upload(params = nil, options = nil); end
  def create_session(params = nil, options = nil); end
  def delete_bucket(params = nil, options = nil); end
  def delete_bucket_analytics_configuration(params = nil, options = nil); end
  def delete_bucket_cors(params = nil, options = nil); end
  def delete_bucket_encryption(params = nil, options = nil); end
  def delete_bucket_intelligent_tiering_configuration(params = nil, options = nil); end
  def delete_bucket_inventory_configuration(params = nil, options = nil); end
  def delete_bucket_lifecycle(params = nil, options = nil); end
  def delete_bucket_metrics_configuration(params = nil, options = nil); end
  def delete_bucket_ownership_controls(params = nil, options = nil); end
  def delete_bucket_policy(params = nil, options = nil); end
  def delete_bucket_replication(params = nil, options = nil); end
  def delete_bucket_tagging(params = nil, options = nil); end
  def delete_bucket_website(params = nil, options = nil); end
  def delete_object(params = nil, options = nil); end
  def delete_object_tagging(params = nil, options = nil); end
  def delete_objects(params = nil, options = nil); end
  def delete_public_access_block(params = nil, options = nil); end
  def get_bucket_accelerate_configuration(params = nil, options = nil); end
  def get_bucket_acl(params = nil, options = nil); end
  def get_bucket_analytics_configuration(params = nil, options = nil); end
  def get_bucket_cors(params = nil, options = nil); end
  def get_bucket_encryption(params = nil, options = nil); end
  def get_bucket_intelligent_tiering_configuration(params = nil, options = nil); end
  def get_bucket_inventory_configuration(params = nil, options = nil); end
  def get_bucket_lifecycle(params = nil, options = nil); end
  def get_bucket_lifecycle_configuration(params = nil, options = nil); end
  def get_bucket_location(params = nil, options = nil); end
  def get_bucket_logging(params = nil, options = nil); end
  def get_bucket_metrics_configuration(params = nil, options = nil); end
  def get_bucket_notification(params = nil, options = nil); end
  def get_bucket_notification_configuration(params = nil, options = nil); end
  def get_bucket_ownership_controls(params = nil, options = nil); end
  def get_bucket_policy(params = nil, options = nil, &block); end
  def get_bucket_policy_status(params = nil, options = nil); end
  def get_bucket_replication(params = nil, options = nil); end
  def get_bucket_request_payment(params = nil, options = nil); end
  def get_bucket_tagging(params = nil, options = nil); end
  def get_bucket_versioning(params = nil, options = nil); end
  def get_bucket_website(params = nil, options = nil); end
  def get_object(params = nil, options = nil, &block); end
  def get_object_acl(params = nil, options = nil); end
  def get_object_attributes(params = nil, options = nil); end
  def get_object_legal_hold(params = nil, options = nil); end
  def get_object_lock_configuration(params = nil, options = nil); end
  def get_object_retention(params = nil, options = nil); end
  def get_object_tagging(params = nil, options = nil); end
  def get_object_torrent(params = nil, options = nil, &block); end
  def get_public_access_block(params = nil, options = nil); end
  def head_bucket(params = nil, options = nil); end
  def head_object(params = nil, options = nil); end
  def initialize(*args); end
  def list_bucket_analytics_configurations(params = nil, options = nil); end
  def list_bucket_intelligent_tiering_configurations(params = nil, options = nil); end
  def list_bucket_inventory_configurations(params = nil, options = nil); end
  def list_bucket_metrics_configurations(params = nil, options = nil); end
  def list_buckets(params = nil, options = nil); end
  def list_directory_buckets(params = nil, options = nil); end
  def list_multipart_uploads(params = nil, options = nil); end
  def list_object_versions(params = nil, options = nil); end
  def list_objects(params = nil, options = nil); end
  def list_objects_v2(params = nil, options = nil); end
  def list_parts(params = nil, options = nil); end
  def put_bucket_accelerate_configuration(params = nil, options = nil); end
  def put_bucket_acl(params = nil, options = nil); end
  def put_bucket_analytics_configuration(params = nil, options = nil); end
  def put_bucket_cors(params = nil, options = nil); end
  def put_bucket_encryption(params = nil, options = nil); end
  def put_bucket_intelligent_tiering_configuration(params = nil, options = nil); end
  def put_bucket_inventory_configuration(params = nil, options = nil); end
  def put_bucket_lifecycle(params = nil, options = nil); end
  def put_bucket_lifecycle_configuration(params = nil, options = nil); end
  def put_bucket_logging(params = nil, options = nil); end
  def put_bucket_metrics_configuration(params = nil, options = nil); end
  def put_bucket_notification(params = nil, options = nil); end
  def put_bucket_notification_configuration(params = nil, options = nil); end
  def put_bucket_ownership_controls(params = nil, options = nil); end
  def put_bucket_policy(params = nil, options = nil); end
  def put_bucket_replication(params = nil, options = nil); end
  def put_bucket_request_payment(params = nil, options = nil); end
  def put_bucket_tagging(params = nil, options = nil); end
  def put_bucket_versioning(params = nil, options = nil); end
  def put_bucket_website(params = nil, options = nil); end
  def put_object(params = nil, options = nil); end
  def put_object_acl(params = nil, options = nil); end
  def put_object_legal_hold(params = nil, options = nil); end
  def put_object_lock_configuration(params = nil, options = nil); end
  def put_object_retention(params = nil, options = nil); end
  def put_object_tagging(params = nil, options = nil); end
  def put_public_access_block(params = nil, options = nil); end
  def restore_object(params = nil, options = nil); end
  def select_object_content(params = nil, options = nil, &block); end
  def self.errors_module; end
  def self.identifier; end
  def upload_part(params = nil, options = nil); end
  def upload_part_copy(params = nil, options = nil); end
  def wait_until(waiter_name, params = nil, options = nil); end
  def waiter(waiter_name, options = nil); end
  def waiter_names; end
  def waiters; end
  def write_get_object_response(params = nil, options = nil); end
  include Anonymous_Module_619
  include Aws::ClientStubs
end
module Anonymous_Module_619
  def abort_multipart_upload(*args, &block); end
  def complete_multipart_upload(*args, &block); end
  def copy_object(*args, &block); end
  def create_bucket(*args, &block); end
  def create_multipart_upload(*args, &block); end
  def create_session(*args, &block); end
  def delete_bucket(*args, &block); end
  def delete_bucket_analytics_configuration(*args, &block); end
  def delete_bucket_cors(*args, &block); end
  def delete_bucket_encryption(*args, &block); end
  def delete_bucket_intelligent_tiering_configuration(*args, &block); end
  def delete_bucket_inventory_configuration(*args, &block); end
  def delete_bucket_lifecycle(*args, &block); end
  def delete_bucket_metrics_configuration(*args, &block); end
  def delete_bucket_ownership_controls(*args, &block); end
  def delete_bucket_policy(*args, &block); end
  def delete_bucket_replication(*args, &block); end
  def delete_bucket_tagging(*args, &block); end
  def delete_bucket_website(*args, &block); end
  def delete_object(*args, &block); end
  def delete_object_tagging(*args, &block); end
  def delete_objects(*args, &block); end
  def delete_public_access_block(*args, &block); end
  def get_bucket_accelerate_configuration(*args, &block); end
  def get_bucket_acl(*args, &block); end
  def get_bucket_analytics_configuration(*args, &block); end
  def get_bucket_cors(*args, &block); end
  def get_bucket_encryption(*args, &block); end
  def get_bucket_intelligent_tiering_configuration(*args, &block); end
  def get_bucket_inventory_configuration(*args, &block); end
  def get_bucket_lifecycle(*args, &block); end
  def get_bucket_lifecycle_configuration(*args, &block); end
  def get_bucket_location(*args, &block); end
  def get_bucket_logging(*args, &block); end
  def get_bucket_metrics_configuration(*args, &block); end
  def get_bucket_notification(*args, &block); end
  def get_bucket_notification_configuration(*args, &block); end
  def get_bucket_ownership_controls(*args, &block); end
  def get_bucket_policy(*args, &block); end
  def get_bucket_policy_status(*args, &block); end
  def get_bucket_replication(*args, &block); end
  def get_bucket_request_payment(*args, &block); end
  def get_bucket_tagging(*args, &block); end
  def get_bucket_versioning(*args, &block); end
  def get_bucket_website(*args, &block); end
  def get_object(*args, &block); end
  def get_object_acl(*args, &block); end
  def get_object_attributes(*args, &block); end
  def get_object_legal_hold(*args, &block); end
  def get_object_lock_configuration(*args, &block); end
  def get_object_retention(*args, &block); end
  def get_object_tagging(*args, &block); end
  def get_object_torrent(*args, &block); end
  def get_public_access_block(*args, &block); end
  def head_bucket(*args, &block); end
  def head_object(*args, &block); end
  def list_bucket_analytics_configurations(*args, &block); end
  def list_bucket_intelligent_tiering_configurations(*args, &block); end
  def list_bucket_inventory_configurations(*args, &block); end
  def list_bucket_metrics_configurations(*args, &block); end
  def list_buckets(*args, &block); end
  def list_directory_buckets(*args, &block); end
  def list_multipart_uploads(*args, &block); end
  def list_object_versions(*args, &block); end
  def list_objects(*args, &block); end
  def list_objects_v2(*args, &block); end
  def list_parts(*args, &block); end
  def put_bucket_accelerate_configuration(*args, &block); end
  def put_bucket_acl(*args, &block); end
  def put_bucket_analytics_configuration(*args, &block); end
  def put_bucket_cors(*args, &block); end
  def put_bucket_encryption(*args, &block); end
  def put_bucket_intelligent_tiering_configuration(*args, &block); end
  def put_bucket_inventory_configuration(*args, &block); end
  def put_bucket_lifecycle(*args, &block); end
  def put_bucket_lifecycle_configuration(*args, &block); end
  def put_bucket_logging(*args, &block); end
  def put_bucket_metrics_configuration(*args, &block); end
  def put_bucket_notification(*args, &block); end
  def put_bucket_notification_configuration(*args, &block); end
  def put_bucket_ownership_controls(*args, &block); end
  def put_bucket_policy(*args, &block); end
  def put_bucket_replication(*args, &block); end
  def put_bucket_request_payment(*args, &block); end
  def put_bucket_tagging(*args, &block); end
  def put_bucket_versioning(*args, &block); end
  def put_bucket_website(*args, &block); end
  def put_object(*args, &block); end
  def put_object_acl(*args, &block); end
  def put_object_legal_hold(*args, &block); end
  def put_object_lock_configuration(*args, &block); end
  def put_object_retention(*args, &block); end
  def put_object_tagging(*args, &block); end
  def put_public_access_block(*args, &block); end
  def restore_object(*args, &block); end
  def select_object_content(*args, &block); end
  def upload_part(*args, &block); end
  def upload_part_copy(*args, &block); end
  def write_get_object_response(*args, &block); end
end
module Aws::S3::Errors
  extend Aws::Errors::DynamicErrors
end
class Aws::S3::Errors::ServiceError < Aws::Errors::ServiceError
end
class Aws::S3::Errors::BucketAlreadyExists < Aws::S3::Errors::ServiceError
  def initialize(context, message, data = nil); end
end
class Aws::S3::Errors::BucketAlreadyOwnedByYou < Aws::S3::Errors::ServiceError
  def initialize(context, message, data = nil); end
end
class Aws::S3::Errors::InvalidObjectState < Aws::S3::Errors::ServiceError
  def access_tier; end
  def initialize(context, message, data = nil); end
  def storage_class; end
end
class Aws::S3::Errors::NoSuchBucket < Aws::S3::Errors::ServiceError
  def initialize(context, message, data = nil); end
end
class Aws::S3::Errors::NoSuchKey < Aws::S3::Errors::ServiceError
  def initialize(context, message, data = nil); end
end
class Aws::S3::Errors::NoSuchUpload < Aws::S3::Errors::ServiceError
  def initialize(context, message, data = nil); end
end
class Aws::S3::Errors::ObjectAlreadyInActiveTierError < Aws::S3::Errors::ServiceError
  def initialize(context, message, data = nil); end
end
class Aws::S3::Errors::ObjectNotInActiveTierError < Aws::S3::Errors::ServiceError
  def initialize(context, message, data = nil); end
end
module Aws::S3::Waiters
end
class Aws::S3::Waiters::BucketExists
  def initialize(options); end
  def wait(params = nil); end
  def waiter; end
end
class Aws::S3::Waiters::BucketNotExists
  def initialize(options); end
  def wait(params = nil); end
  def waiter; end
end
class Aws::S3::Waiters::ObjectExists
  def initialize(options); end
  def wait(params = nil); end
  def waiter; end
end
class Aws::S3::Waiters::ObjectNotExists
  def initialize(options); end
  def wait(params = nil); end
  def waiter; end
end
class Aws::S3::Resource
  def bucket(name); end
  def buckets(options = nil); end
  def client; end
  def create_bucket(options = nil); end
  def initialize(options = nil); end
end
class Aws::S3::EndpointParameters < Struct
  def accelerate; end
  def accelerate=(_); end
  def bucket; end
  def bucket=(_); end
  def copy_source; end
  def copy_source=(_); end
  def disable_access_points; end
  def disable_access_points=(_); end
  def disable_multi_region_access_points; end
  def disable_multi_region_access_points=(_); end
  def disable_s3_express_session_auth; end
  def disable_s3_express_session_auth=(_); end
  def endpoint; end
  def endpoint=(_); end
  def force_path_style; end
  def force_path_style=(_); end
  def initialize(options = nil); end
  def key; end
  def key=(_); end
  def prefix; end
  def prefix=(_); end
  def region; end
  def region=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def use_arn_region; end
  def use_arn_region=(_); end
  def use_dual_stack; end
  def use_dual_stack=(_); end
  def use_fips; end
  def use_fips=(_); end
  def use_global_endpoint; end
  def use_global_endpoint=(_); end
  def use_object_lambda_endpoint; end
  def use_object_lambda_endpoint=(_); end
  def use_s3_express_control_endpoint; end
  def use_s3_express_control_endpoint=(_); end
  include Aws::Structure
end
class Aws::S3::EndpointProvider
  def resolve_endpoint(parameters); end
end
module Aws::S3::Endpoints
end
class Aws::S3::Endpoints::AbortMultipartUpload
  def self.build(context); end
end
class Aws::S3::Endpoints::CompleteMultipartUpload
  def self.build(context); end
end
class Aws::S3::Endpoints::CopyObject
  def self.build(context); end
end
class Aws::S3::Endpoints::CreateBucket
  def self.build(context); end
end
class Aws::S3::Endpoints::CreateMultipartUpload
  def self.build(context); end
end
class Aws::S3::Endpoints::CreateSession
  def self.build(context); end
end
class Aws::S3::Endpoints::DeleteBucket
  def self.build(context); end
end
class Aws::S3::Endpoints::DeleteBucketAnalyticsConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::DeleteBucketCors
  def self.build(context); end
end
class Aws::S3::Endpoints::DeleteBucketEncryption
  def self.build(context); end
end
class Aws::S3::Endpoints::DeleteBucketIntelligentTieringConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::DeleteBucketInventoryConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::DeleteBucketLifecycle
  def self.build(context); end
end
class Aws::S3::Endpoints::DeleteBucketMetricsConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::DeleteBucketOwnershipControls
  def self.build(context); end
end
class Aws::S3::Endpoints::DeleteBucketPolicy
  def self.build(context); end
end
class Aws::S3::Endpoints::DeleteBucketReplication
  def self.build(context); end
end
class Aws::S3::Endpoints::DeleteBucketTagging
  def self.build(context); end
end
class Aws::S3::Endpoints::DeleteBucketWebsite
  def self.build(context); end
end
class Aws::S3::Endpoints::DeleteObject
  def self.build(context); end
end
class Aws::S3::Endpoints::DeleteObjectTagging
  def self.build(context); end
end
class Aws::S3::Endpoints::DeleteObjects
  def self.build(context); end
end
class Aws::S3::Endpoints::DeletePublicAccessBlock
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketAccelerateConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketAcl
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketAnalyticsConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketCors
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketEncryption
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketIntelligentTieringConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketInventoryConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketLifecycle
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketLifecycleConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketLocation
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketLogging
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketMetricsConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketNotification
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketNotificationConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketOwnershipControls
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketPolicy
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketPolicyStatus
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketReplication
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketRequestPayment
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketTagging
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketVersioning
  def self.build(context); end
end
class Aws::S3::Endpoints::GetBucketWebsite
  def self.build(context); end
end
class Aws::S3::Endpoints::GetObject
  def self.build(context); end
end
class Aws::S3::Endpoints::GetObjectAcl
  def self.build(context); end
end
class Aws::S3::Endpoints::GetObjectAttributes
  def self.build(context); end
end
class Aws::S3::Endpoints::GetObjectLegalHold
  def self.build(context); end
end
class Aws::S3::Endpoints::GetObjectLockConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::GetObjectRetention
  def self.build(context); end
end
class Aws::S3::Endpoints::GetObjectTagging
  def self.build(context); end
end
class Aws::S3::Endpoints::GetObjectTorrent
  def self.build(context); end
end
class Aws::S3::Endpoints::GetPublicAccessBlock
  def self.build(context); end
end
class Aws::S3::Endpoints::HeadBucket
  def self.build(context); end
end
class Aws::S3::Endpoints::HeadObject
  def self.build(context); end
end
class Aws::S3::Endpoints::ListBucketAnalyticsConfigurations
  def self.build(context); end
end
class Aws::S3::Endpoints::ListBucketIntelligentTieringConfigurations
  def self.build(context); end
end
class Aws::S3::Endpoints::ListBucketInventoryConfigurations
  def self.build(context); end
end
class Aws::S3::Endpoints::ListBucketMetricsConfigurations
  def self.build(context); end
end
class Aws::S3::Endpoints::ListBuckets
  def self.build(context); end
end
class Aws::S3::Endpoints::ListDirectoryBuckets
  def self.build(context); end
end
class Aws::S3::Endpoints::ListMultipartUploads
  def self.build(context); end
end
class Aws::S3::Endpoints::ListObjectVersions
  def self.build(context); end
end
class Aws::S3::Endpoints::ListObjects
  def self.build(context); end
end
class Aws::S3::Endpoints::ListObjectsV2
  def self.build(context); end
end
class Aws::S3::Endpoints::ListParts
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketAccelerateConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketAcl
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketAnalyticsConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketCors
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketEncryption
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketIntelligentTieringConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketInventoryConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketLifecycle
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketLifecycleConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketLogging
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketMetricsConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketNotification
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketNotificationConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketOwnershipControls
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketPolicy
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketReplication
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketRequestPayment
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketTagging
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketVersioning
  def self.build(context); end
end
class Aws::S3::Endpoints::PutBucketWebsite
  def self.build(context); end
end
class Aws::S3::Endpoints::PutObject
  def self.build(context); end
end
class Aws::S3::Endpoints::PutObjectAcl
  def self.build(context); end
end
class Aws::S3::Endpoints::PutObjectLegalHold
  def self.build(context); end
end
class Aws::S3::Endpoints::PutObjectLockConfiguration
  def self.build(context); end
end
class Aws::S3::Endpoints::PutObjectRetention
  def self.build(context); end
end
class Aws::S3::Endpoints::PutObjectTagging
  def self.build(context); end
end
class Aws::S3::Endpoints::PutPublicAccessBlock
  def self.build(context); end
end
class Aws::S3::Endpoints::RestoreObject
  def self.build(context); end
end
class Aws::S3::Endpoints::SelectObjectContent
  def self.build(context); end
end
class Aws::S3::Endpoints::UploadPart
  def self.build(context); end
end
class Aws::S3::Endpoints::UploadPartCopy
  def self.build(context); end
end
class Aws::S3::Endpoints::WriteGetObjectResponse
  def self.build(context); end
end
class Aws::S3::Bucket
  def acl; end
  def clear!; end
  def client; end
  def cors; end
  def create(options = nil); end
  def creation_date; end
  def data; end
  def data_loaded?; end
  def delete!(options = nil); end
  def delete(options = nil); end
  def delete_objects(options = nil); end
  def deprecated_identifiers; end
  def exists?(options = nil); end
  def extract_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def lifecycle; end
  def lifecycle_configuration; end
  def load; end
  def logging; end
  def multipart_uploads(options = nil); end
  def name; end
  def notification; end
  def object(key); end
  def object_versions(options = nil); end
  def objects(options = nil); end
  def policy; end
  def presigned_post(options = nil); end
  def put_object(options = nil); end
  def reload; end
  def request_payment; end
  def separate_params_and_options(options); end
  def tagging; end
  def url(options = nil); end
  def versioning; end
  def wait_until(options = nil, &block); end
  def wait_until_exists(options = nil, &block); end
  def wait_until_not_exists(options = nil, &block); end
  def website; end
  def yield_waiter_and_warn(waiter, &block); end
  extend Aws::Deprecations
end
class Aws::S3::Bucket::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketAcl
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def grants; end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def owner; end
  def put(options = nil); end
  def reload; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketAcl::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketCors
  def bucket; end
  def bucket_name; end
  def client; end
  def cors_rules; end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def put(options = nil); end
  def reload; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketCors::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketLifecycle
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def put(options = nil); end
  def reload; end
  def rules; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketLifecycle::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketLifecycleConfiguration
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def put(options = nil); end
  def reload; end
  def rules; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketLifecycleConfiguration::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketLogging
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def logging_enabled; end
  def put(options = nil); end
  def reload; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketLogging::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketNotification
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def deprecated_identifiers; end
  def event_bridge_configuration; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def lambda_function_configurations; end
  def load; end
  def put(options = nil); end
  def queue_configurations; end
  def reload; end
  def topic_configurations; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketNotification::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketPolicy
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def policy; end
  def put(options = nil); end
  def reload; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketPolicy::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketRequestPayment
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def payer; end
  def put(options = nil); end
  def reload; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketRequestPayment::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketTagging
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def put(options = nil); end
  def reload; end
  def tag_set; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketTagging::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketVersioning
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def deprecated_identifiers; end
  def enable(options = nil); end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def mfa_delete; end
  def put(options = nil); end
  def reload; end
  def status; end
  def suspend(options = nil); end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketVersioning::Collection < Aws::Resources::Collection
end
class Aws::S3::BucketWebsite
  def bucket; end
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def deprecated_identifiers; end
  def error_document; end
  def extract_bucket_name(args, options); end
  def identifiers(*args, &block); end
  def index_document; end
  def initialize(*args); end
  def load; end
  def put(options = nil); end
  def redirect_all_requests_to; end
  def reload; end
  def routing_rules; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::BucketWebsite::Collection < Aws::Resources::Collection
end
class Aws::S3::MultipartUpload
  def abort(options = nil); end
  def basic_complete(options = nil); end
  def bucket_name; end
  def checksum_algorithm; end
  def client; end
  def complete(options = nil); end
  def compute_parts; end
  def data; end
  def data_loaded?; end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def extract_id(args, options); end
  def extract_object_key(args, options); end
  def id; end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def initiated; end
  def initiator; end
  def key; end
  def load; end
  def object; end
  def object_key; end
  def owner; end
  def part(part_number); end
  def parts(options = nil); end
  def reload; end
  def storage_class; end
  def upload_id; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::MultipartUpload::Collection < Aws::Resources::Collection
end
class Aws::S3::MultipartUploadPart
  def bucket_name; end
  def checksum_crc32; end
  def checksum_crc32c; end
  def checksum_sha1; end
  def checksum_sha256; end
  def client; end
  def copy_from(options = nil); end
  def data; end
  def data_loaded?; end
  def deprecated_identifiers; end
  def etag; end
  def extract_bucket_name(args, options); end
  def extract_multipart_upload_id(args, options); end
  def extract_object_key(args, options); end
  def extract_part_number(args, options); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def last_modified; end
  def load; end
  def multipart_upload; end
  def multipart_upload_id; end
  def object_key; end
  def part_number; end
  def reload; end
  def size; end
  def upload(options = nil); end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::MultipartUploadPart::Collection < Aws::Resources::Collection
end
class Aws::S3::Object
  def accept_ranges; end
  def acl; end
  def archive_status; end
  def bucket; end
  def bucket_key_enabled; end
  def bucket_name; end
  def cache_control; end
  def checksum_crc32; end
  def checksum_crc32c; end
  def checksum_sha1; end
  def checksum_sha256; end
  def client; end
  def content_disposition; end
  def content_encoding; end
  def content_language; end
  def content_length; end
  def content_type; end
  def copy_from(source, options = nil); end
  def copy_to(target, options = nil); end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def delete_marker; end
  def deprecated_identifiers; end
  def download_file(destination, options = nil); end
  def etag; end
  def exists?(options = nil); end
  def expiration; end
  def expires; end
  def expires_string; end
  def extract_bucket_name(args, options); end
  def extract_key(args, options); end
  def get(options = nil, &block); end
  def head(options = nil); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def initiate_multipart_upload(options = nil); end
  def key; end
  def last_modified; end
  def load; end
  def metadata; end
  def missing_meta; end
  def move_to(target, options = nil); end
  def multipart_upload(id); end
  def object_lock_legal_hold_status; end
  def object_lock_mode; end
  def object_lock_retain_until_date; end
  def parts_count; end
  def presigned_post(options = nil); end
  def presigned_request(method, params = nil); end
  def presigned_url(method, params = nil); end
  def public_url(options = nil); end
  def put(options = nil); end
  def reload; end
  def replication_status; end
  def request_charged; end
  def restore; end
  def restore_object(options = nil); end
  def separate_params_and_options(options); end
  def server_side_encryption; end
  def size; end
  def sse_customer_algorithm; end
  def sse_customer_key_md5; end
  def ssekms_key_id; end
  def storage_class; end
  def upload_file(source, options = nil); end
  def upload_stream(options = nil, &block); end
  def version(id); end
  def version_id; end
  def wait_until(options = nil, &block); end
  def wait_until_exists(options = nil, &block); end
  def wait_until_not_exists(options = nil, &block); end
  def website_redirect_location; end
  def yield_waiter_and_warn(waiter, &block); end
  extend Aws::Deprecations
end
class Aws::S3::Object::Collection < Aws::Resources::Collection
  def batch_delete!(options = nil); end
  def delete(*args, &block); end
  def deprecated_delete(options = nil); end
  extend Aws::Deprecations
end
class Aws::S3::ObjectAcl
  def bucket_name; end
  def client; end
  def data; end
  def data_loaded?; end
  def deprecated_identifiers; end
  def extract_bucket_name(args, options); end
  def extract_object_key(args, options); end
  def grants; end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def load; end
  def object; end
  def object_key; end
  def owner; end
  def put(options = nil); end
  def reload; end
  def request_charged; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::ObjectAcl::Collection < Aws::Resources::Collection
end
class Aws::S3::ObjectSummary
  def acl; end
  def bucket; end
  def bucket_name; end
  def checksum_algorithm; end
  def client; end
  def content_length; end
  def copy_from(source, options = nil); end
  def copy_to(target, options = nil); end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def deprecated_identifiers; end
  def download_file(destination, options = nil); end
  def etag; end
  def exists?(options = nil); end
  def extract_bucket_name(args, options); end
  def extract_key(args, options); end
  def get(options = nil, &block); end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def initiate_multipart_upload(options = nil); end
  def key; end
  def last_modified; end
  def load; end
  def move_to(target, options = nil); end
  def multipart_upload(id); end
  def object; end
  def owner; end
  def presigned_post(options = nil); end
  def presigned_url(http_method, params = nil); end
  def public_url(options = nil); end
  def put(options = nil); end
  def reload; end
  def restore_object(options = nil); end
  def restore_status; end
  def separate_params_and_options(options); end
  def size; end
  def storage_class; end
  def upload_file(source, options = nil); end
  def upload_stream(options = nil, &block); end
  def version(id); end
  def wait_until(options = nil, &block); end
  def wait_until_exists(options = nil, &block); end
  def wait_until_not_exists(options = nil, &block); end
  def yield_waiter_and_warn(waiter, &block); end
  extend Aws::Deprecations
end
class Aws::S3::ObjectSummary::Collection < Aws::Resources::Collection
  def batch_delete!(options = nil); end
  def delete(*args, &block); end
  def deprecated_delete(options = nil); end
  extend Aws::Deprecations
end
class Aws::S3::ObjectVersion
  def bucket_name; end
  def checksum_algorithm; end
  def client; end
  def data; end
  def data_loaded?; end
  def delete(options = nil); end
  def deprecated_identifiers; end
  def etag; end
  def extract_bucket_name(args, options); end
  def extract_id(args, options); end
  def extract_object_key(args, options); end
  def get(options = nil, &block); end
  def head(options = nil); end
  def id; end
  def identifiers(*args, &block); end
  def initialize(*args); end
  def is_latest; end
  def key; end
  def last_modified; end
  def load; end
  def object; end
  def object_key; end
  def owner; end
  def reload; end
  def restore_status; end
  def size; end
  def storage_class; end
  def version_id; end
  def wait_until(options = nil, &block); end
  extend Aws::Deprecations
end
class Aws::S3::ObjectVersion::Collection < Aws::Resources::Collection
  def batch_delete!(options = nil); end
  def delete(*args, &block); end
  def deprecated_delete(options = nil); end
  extend Aws::Deprecations
end
class Aws::S3::BucketRegionCache
  def [](bucket_name); end
  def []=(bucket_name, region_name); end
  def bucket_added(&block); end
  def clear; end
  def initialize; end
  def key?(key); end
  def to_h; end
  def to_hash; end
end
module Aws::S3::Encryption
end
class Aws::S3::Encryption::Client
  def build_request(*args, **, &block); end
  def cipher_provider(options); end
  def client; end
  def config(*args, **, &block); end
  def delete_object(*args, **, &block); end
  def deprecated_initialize(options = nil); end
  def envelope_location; end
  def envelope_options(params); end
  def extract_client(options); end
  def extract_key_provider(options); end
  def extract_location(options); end
  def extract_suffix(options); end
  def get_object(params = nil, &block); end
  def head_object(*args, **, &block); end
  def initialize(*args, &block); end
  def instruction_file_suffix; end
  def key_provider; end
  def kms_client(options); end
  def put_object(params = nil); end
  extend Aws::Deprecations
  extend Forwardable
end
class Aws::S3::Encryption::DecryptHandler < Seahorse::Client::Handler
  def apply_cse_user_agent(context); end
  def attach_http_event_listeners(context); end
  def auth_tag_length(envelope); end
  def authenticated_decrypter(context, cipher, envelope); end
  def body_contains_auth_tag?(envelope); end
  def call(context); end
  def decryption_cipher(context); end
  def envelope_from_instr_file(context); end
  def envelope_from_metadata(context); end
  def extract_envelope(hash); end
  def get_encryption_envelope(context); end
  def v1_envelope(envelope); end
  def v2_envelope(envelope); end
end
class Aws::S3::Encryption::DefaultCipherProvider
  def decode64(str); end
  def decryption_cipher(envelope, options = nil); end
  def encode64(str); end
  def encrypt(data); end
  def encryption_cipher; end
  def envelope_iv(cipher); end
  def envelope_key(cipher); end
  def initialize(options = nil); end
  def materials_description; end
end
class Aws::S3::Encryption::EncryptHandler < Seahorse::Client::Handler
  def apply_cse_user_agent(context); end
  def apply_encryption_cipher(context, cipher); end
  def apply_encryption_envelope(context, envelope, cipher); end
  def call(context); end
end
module Aws::S3::Encryption::Errors
end
class Aws::S3::Encryption::Errors::DecryptionError < RuntimeError
end
class Aws::S3::Encryption::Errors::EncryptionError < RuntimeError
end
class Aws::S3::Encryption::IOEncrypter
  def close; end
  def encrypt_to_stringio(cipher, plain_text); end
  def encrypt_to_tempfile(cipher, io); end
  def initialize(cipher, io); end
  def read(bytes = nil, output_buffer = nil); end
  def rewind; end
  def size; end
end
class Aws::S3::Encryption::IODecrypter
  def finalize; end
  def initialize(cipher, io); end
  def io; end
  def write(chunk); end
end
class Aws::S3::Encryption::IOAuthDecrypter
  def finalize; end
  def initialize(options = nil); end
  def io; end
  def truncate_chunk(chunk); end
  def write(chunk); end
end
module Aws::S3::Encryption::KeyProvider
  def encryption_materials; end
  def key_for(materials_description); end
end
class Aws::S3::Encryption::KmsCipherProvider
  def build_encryption_context(cek_alg, options = nil); end
  def decode64(str); end
  def decryption_cipher(envelope, options = nil); end
  def encode64(str); end
  def encryption_cipher; end
  def initialize(options = nil); end
end
class Aws::S3::Encryption::Materials
  def description; end
  def initialize(options = nil); end
  def key; end
  def validate_desc(description); end
  def validate_key(key); end
end
module Aws::S3::Encryption::Utils
  def self.aes_cipher(mode, block_mode, key, iv); end
  def self.aes_decryption_cipher(block_mode, key = nil, iv = nil); end
  def self.aes_encryption_cipher(block_mode, key = nil, iv = nil); end
  def self.cipher_size(key); end
  def self.decrypt(key, data); end
  def self.decrypt_aes_gcm(key, data, auth_data); end
  def self.decrypt_rsa(key, enc_data); end
  def self.encrypt(key, data); end
end
class Aws::S3::Encryption::DefaultKeyProvider
  def encryption_materials; end
  def initialize(options = nil); end
  def key_for(materials_description); end
  include Aws::S3::Encryption::KeyProvider
end
module Aws::S3::EncryptionV2
end
class Aws::S3::EncryptionV2::Client
  def build_request(*args, **, &block); end
  def cipher_provider(options); end
  def client; end
  def config(*args, **, &block); end
  def delete_object(*args, **, &block); end
  def envelope_location; end
  def envelope_options(params); end
  def extract_client(options); end
  def extract_key_provider(options); end
  def extract_location(options); end
  def extract_security_profile(options); end
  def extract_suffix(options); end
  def get_object(params = nil, &block); end
  def head_object(*args, **, &block); end
  def initialize(options = nil); end
  def instruction_file_suffix; end
  def key_provider; end
  def kms_allow_decrypt_with_any_cmk; end
  def kms_any_cmk_mode(params); end
  def kms_client(options); end
  def put_object(params = nil); end
  def security_profile; end
  def security_profile_from_params(params); end
  def validate_params(options); end
  def validate_security_profile(security_profile); end
  extend Aws::Deprecations
  extend Forwardable
end
class Aws::S3::EncryptionV2::DecryptHandler < Seahorse::Client::Handler
  def apply_cse_user_agent(context); end
  def attach_http_event_listeners(context); end
  def auth_tag_length(envelope); end
  def authenticated_decrypter(context, cipher, envelope); end
  def body_contains_auth_tag?(envelope); end
  def call(context); end
  def decryption_cipher(context); end
  def envelope_from_instr_file(context); end
  def envelope_from_metadata(context); end
  def extract_envelope(hash); end
  def get_encryption_envelope(context); end
  def v1_envelope(envelope); end
  def v2_envelope(envelope); end
end
class Aws::S3::EncryptionV2::DefaultCipherProvider
  def decode64(str); end
  def decryption_cipher(envelope, options = nil); end
  def encode64(str); end
  def encrypt_aes_gcm(data, auth_data); end
  def encrypt_rsa(data, auth_data); end
  def encryption_cipher(options = nil); end
  def envelope_iv(cipher); end
  def envelope_key(cipher); end
  def initialize(options = nil); end
  def materials_description; end
  def validate_cek(content_encryption_schema); end
  def validate_key_wrap(key_wrap_schema, key); end
  def validate_options(options); end
end
class Aws::S3::EncryptionV2::EncryptHandler < Seahorse::Client::Handler
  def apply_cse_user_agent(context); end
  def apply_encryption_cipher(context, cipher); end
  def apply_encryption_envelope(context, envelope); end
  def call(context); end
end
module Aws::S3::EncryptionV2::Errors
end
class Aws::S3::EncryptionV2::Errors::DecryptionError < RuntimeError
end
class Aws::S3::EncryptionV2::Errors::EncryptionError < RuntimeError
end
class Aws::S3::EncryptionV2::Errors::LegacyDecryptionError < Aws::S3::EncryptionV2::Errors::DecryptionError
  def initialize(*args); end
end
class Aws::S3::EncryptionV2::Errors::CEKAlgMismatchError < Aws::S3::EncryptionV2::Errors::DecryptionError
  def initialize(*args); end
end
class Aws::S3::EncryptionV2::IOEncrypter
  def close; end
  def encrypt_to_stringio(cipher, plain_text); end
  def encrypt_to_tempfile(cipher, io); end
  def initialize(cipher, io); end
  def read(bytes = nil, output_buffer = nil); end
  def rewind; end
  def size; end
end
class Aws::S3::EncryptionV2::IODecrypter
  def finalize; end
  def initialize(cipher, io); end
  def io; end
  def write(chunk); end
end
class Aws::S3::EncryptionV2::IOAuthDecrypter
  def finalize; end
  def initialize(options = nil); end
  def io; end
  def truncate_chunk(chunk); end
  def write(chunk); end
end
module Aws::S3::EncryptionV2::KeyProvider
  def encryption_materials; end
  def key_for(materials_description); end
end
class Aws::S3::EncryptionV2::KmsCipherProvider
  def build_encryption_context(cek_alg, options = nil); end
  def decode64(str); end
  def decryption_cipher(envelope, options = nil); end
  def encode64(str); end
  def encryption_cipher(options = nil); end
  def initialize(options = nil); end
  def validate_cek(content_encryption_schema); end
  def validate_key_for_encryption; end
  def validate_key_wrap(key_wrap_schema); end
  def validate_kms_key(kms_key_id); end
end
class Aws::S3::EncryptionV2::Materials
  def description; end
  def initialize(options = nil); end
  def key; end
  def validate_desc(description); end
  def validate_key(key); end
end
module Aws::S3::EncryptionV2::Utils
  def self.aes_cipher(mode, block_mode, key, iv); end
  def self.aes_decryption_cipher(block_mode, key = nil, iv = nil); end
  def self.aes_encryption_cipher(block_mode, key = nil, iv = nil); end
  def self.cipher_size(key); end
  def self.decrypt(key, data); end
  def self.decrypt_aes_gcm(key, data, auth_data); end
  def self.decrypt_rsa(key, enc_data); end
  def self.encrypt_aes_gcm(key, data, auth_data); end
  def self.encrypt_rsa(key, data, auth_data); end
end
class Aws::S3::EncryptionV2::DefaultKeyProvider
  def encryption_materials; end
  def initialize(options = nil); end
  def key_for(materials_description); end
  include Aws::S3::EncryptionV2::KeyProvider
end
class Aws::S3::FilePart
  def close; end
  def first_byte; end
  def initialize(options = nil); end
  def last_byte; end
  def open_file; end
  def read(bytes = nil, output_buffer = nil); end
  def read_from_file(bytes, output_buffer); end
  def remaining_bytes; end
  def rewind; end
  def size; end
  def source; end
end
class Aws::S3::FileUploader
  def client; end
  def initialize(options = nil); end
  def multipart_threshold; end
  def open_file(source); end
  def put_object(source, options); end
  def single_part_progress(progress_callback); end
  def upload(source, options = nil); end
end
class Aws::S3::FileDownloader
  def batches(chunks, mode); end
  def client; end
  def compute_chunk(file_size); end
  def compute_mode(file_size, count); end
  def construct_chunks(file_size); end
  def download(destination, options = nil); end
  def download_in_threads(pending, total_size); end
  def initialize(options = nil); end
  def multipart_download; end
  def multithreaded_get_by_parts(n_parts, total_size); end
  def multithreaded_get_by_ranges(file_size); end
  def single_part_progress; end
  def single_request; end
  def validate!; end
  def write(resp); end
end
class Anonymous_Struct_620 < Struct
  def params; end
  def params=(_); end
  def part_number; end
  def part_number=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def size; end
  def size=(_); end
end
class Aws::S3::FileDownloader::Part < Anonymous_Struct_620
  include Aws::Structure
end
class Aws::S3::FileDownloader::PartList
  def clear!; end
  def each(&block); end
  def initialize(parts = nil); end
  def shift; end
  def size; end
  include Enumerable
end
class Aws::S3::FileDownloader::MultipartProgress
  def call(part_number, bytes_received, total); end
  def initialize(parts, total_size, progress_callback); end
end
class Aws::S3::LegacySigner
  def authorization(request); end
  def canonicalized_headers(request); end
  def canonicalized_resource(endpoint); end
  def credentials; end
  def digest(secret, string_to_sign); end
  def hmac(key, value); end
  def initialize(credentials, params, force_path_style); end
  def params; end
  def self.sign(context); end
  def sign(request); end
  def signature(request); end
  def signed_querystring_params(endpoint); end
  def signing_string_date(request); end
  def string_to_sign(request); end
  def uri_escape(s); end
end
class Aws::S3::MultipartFileUploader
  def abort_upload(upload_id, options, errors); end
  def client; end
  def complete_opts(options); end
  def complete_upload(upload_id, parts, options); end
  def compute_default_part_size(source_size); end
  def compute_parts(upload_id, source, options); end
  def create_opts(options); end
  def initialize(options = nil); end
  def initiate_upload(options); end
  def part_size(total_size, part_size, offset); end
  def upload(source, options = nil); end
  def upload_in_threads(pending, completed, options); end
  def upload_part_opts(options); end
  def upload_parts(upload_id, source, options); end
end
class Aws::S3::MultipartFileUploader::PartList
  def clear!; end
  def initialize(parts = nil); end
  def part_sizes; end
  def push(part); end
  def shift; end
  def size; end
  def to_a; end
end
class Aws::S3::MultipartFileUploader::MultipartProgress
  def call(part_number, bytes_read); end
  def initialize(parts, progress_callback); end
end
class Aws::S3::MultipartStreamUploader
  def abort_upload(upload_id, options, errors); end
  def client; end
  def complete_opts(options); end
  def complete_upload(upload_id, parts, options); end
  def create_opts(options); end
  def initialize(options = nil); end
  def initiate_upload(options); end
  def read_to_part_body(read_pipe); end
  def upload(options = nil, &block); end
  def upload_in_threads(read_pipe, completed, options, thread_errors); end
  def upload_part_opts(options); end
  def upload_parts(upload_id, options, &block); end
end
class Aws::S3::MultipartUploadError < StandardError
  def errors; end
  def initialize(message, errors); end
end
class Aws::S3::ObjectCopier
  def apply_source_client(source, options); end
  def copy_from(source, options = nil); end
  def copy_object(source, target, options); end
  def copy_source(source); end
  def copy_target(target); end
  def copy_to(target, options = nil); end
  def escape(str); end
  def initialize(object, options = nil); end
  def merge_options(source_or_target, options); end
end
class Aws::S3::ObjectMultipartCopier
  def abort_upload(options); end
  def byte_range(offset, part_size, size); end
  def calculate_part_size(part_number, default_part_size, options); end
  def client; end
  def complete_upload(parts, options); end
  def compute_parts(size, default_part_size, options); end
  def copy(options = nil); end
  def copy_part(part); end
  def copy_part_thread(queue); end
  def copy_parts(size, default_part_size, options); end
  def default_part_size(source_size); end
  def initialize(options = nil); end
  def initiate_upload(options); end
  def options_for(operation_name, options); end
  def self.options_for(shape_name); end
  def source_has_parts(options); end
  def source_metadata(options); end
end
class Aws::S3::ObjectMultipartCopier::PartQueue
  def clear!; end
  def initialize(parts = nil); end
  def shift; end
end
class Aws::S3::PresignedPost
  def acl(value); end
  def acl_starts_with(value); end
  def allow_any(*field_names); end
  def base64(str); end
  def bucket_url; end
  def cache_control(value); end
  def cache_control_starts_with(value); end
  def check_required_values!; end
  def content_disposition(value); end
  def content_disposition_starts_with(value); end
  def content_encoding(value); end
  def content_encoding_starts_with(value); end
  def content_length_range(byte_range); end
  def content_type(value); end
  def content_type_starts_with(value); end
  def credential_scope(datetime); end
  def expires(time); end
  def expires_starts_with(prefix); end
  def fields; end
  def hexhmac(key, value); end
  def hmac(key, value); end
  def initialize(credentials, bucket_region, bucket_name, options = nil); end
  def key(key); end
  def key_starts_with(prefix); end
  def metadata(hash); end
  def metadata_starts_with(hash); end
  def policy(datetime); end
  def self.define_field(field, *args, &block); end
  def server_side_encryption(value); end
  def server_side_encryption_aws_kms_key_id(value); end
  def server_side_encryption_customer_algorithm(value); end
  def server_side_encryption_customer_key(value); end
  def server_side_encryption_customer_key_starts_with(prefix); end
  def signature(datetime, string_to_sign); end
  def signature_fields(datetime); end
  def starts_with(field_name, value, &block); end
  def storage_class(value); end
  def success_action_redirect(value); end
  def success_action_redirect_starts_with(value); end
  def success_action_status(value); end
  def url; end
  def website_redirect_location(value); end
  def with(field_name, value); end
end
class Aws::S3::Presigner
  def _presigned_request(method, params, hoist = nil); end
  def expires_in(params); end
  def handle_presigned_url_context(req); end
  def initialize(options = nil); end
  def presigned_request(method, params = nil); end
  def presigned_url(method, params = nil); end
  def sign_but_dont_send(req, expires_in, secure, time, unsigned_headers, hoist = nil); end
  def unsigned_headers(params); end
  def use_bucket_as_hostname(req); end
end
class Aws::S3::ExpressCredentials
  def client; end
  def initialize(options = nil); end
  def refresh; end
  def self.create_session_options; end
  include Aws::CredentialProvider
  include Aws::RefreshingCredentials
end
class Aws::S3::ExpressCredentialsProvider
  def cached_credentials_for(bucket); end
  def client; end
  def client=(arg0); end
  def express_credentials_for(bucket); end
  def initialize(options = nil); end
  def new_credentials_for(bucket); end
end
class Aws::S3::AccessGrantsCredentials
  def client; end
  def initialize(options = nil); end
  def matched_grant_target; end
  def refresh; end
  def self.get_data_access_options; end
  include Aws::CredentialProvider
  include Aws::RefreshingCredentials
end
class Aws::S3::AccessGrantsCredentialsProvider
  def access_grants_credentials_for(options = nil); end
  def account_id_for_access_grants(target, credentials); end
  def account_id_for_credentials(region, credentials); end
  def broad_search_credentials_cache_characters(target, permission, credentials); end
  def broad_search_credentials_cache_prefix(target, permission, credentials); end
  def bucket_name_from(target); end
  def bucket_region_for_access_grants(target); end
  def cached_account_id_for(target, credentials); end
  def cached_bucket_region_for(bucket); end
  def cached_credentials_for(target, permission, credentials); end
  def credentials_cache_key(target, permission, credentials); end
  def initialize(options = nil); end
  def new_account_id_for(target, credentials); end
  def new_bucket_region_for(bucket); end
  def new_credentials_for(target, permission, credentials); end
  def s3_client; end
  def s3_client=(arg0); end
  def s3_control_client(bucket_region); end
  def target_prefix(bucket, key, prefix); end
end
class Aws::S3::Errors::PermanentRedirect < Aws::S3::Errors::ServiceError
  def initialize(context, message, _data = nil); end
end
class Aws::S3::Errors::Http301Error < Aws::S3::Errors::ServiceError
  def initialize(context, message, _data = nil); end
end
class Anonymous_Struct_621 < Struct
  def bucket; end
  def bucket=(_); end
  def endpoint; end
  def endpoint=(_); end
  def message; end
  def message=(_); end
  def region; end
  def region=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Aws::S3::Types::PermanentRedirect < Anonymous_Struct_621
  include Aws::Structure
end
module Aws::S3::EventStreams
end
class Aws::S3::EventStreams::SelectObjectContentEventStream
  def event_emitter; end
  def initialize; end
  def on_cont_event(&block); end
  def on_end_event(&block); end
  def on_error_event(&block); end
  def on_event(&block); end
  def on_initial_response_event(&block); end
  def on_progress_event(&block); end
  def on_records_event(&block); end
  def on_stats_event(&block); end
  def on_unknown_event(&block); end
end
