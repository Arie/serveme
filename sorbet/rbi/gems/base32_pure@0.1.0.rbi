# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `base32_pure` gem.
# Please instead update this file by running `bin/tapioca gem base32_pure`.

# Extend fixnum with an each_byte method
#
# source://base32_pure//lib/base32/crockford.rb#3
module Base32; end

# source://base32_pure//lib/base32/crockford.rb#21
class Base32::Crockford
  class << self
    # source://base32_pure//lib/base32/crockford.rb#89
    def decode(v, to = T.unsafe(nil)); end

    # source://base32_pure//lib/base32/crockford.rb#59
    def encode(v); end

    # source://base32_pure//lib/base32/crockford.rb#85
    def hypenate(v); end
  end
end

# source://base32_pure//lib/base32/crockford.rb#23
Base32::Crockford::DECODE = T.let(T.unsafe(nil), Hash)

# source://base32_pure//lib/base32/crockford.rb#22
Base32::Crockford::ENCODE = T.let(T.unsafe(nil), String)

# source://base32_pure//lib/base32/crockford.rb#5
class Base32::NormalizedInteger
  # @return [NormalizedInteger] a new instance of NormalizedInteger
  #
  # source://base32_pure//lib/base32/crockford.rb#6
  def initialize(v); end

  # source://base32_pure//lib/base32/crockford.rb#11
  def each_byte(&blk); end
end
