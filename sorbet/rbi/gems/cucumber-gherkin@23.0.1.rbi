# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `cucumber-gherkin` gem.
# Please instead update this file by running `bin/tapioca gem cucumber-gherkin`.

# source://cucumber-gherkin//lib/gherkin/ast_node.rb#1
module Gherkin
  class << self
    # source://cucumber-gherkin//lib/gherkin.rb#32
    def encode_source_message(uri, data); end

    # source://cucumber-gherkin//lib/gherkin.rb#10
    def from_paths(paths, options = T.unsafe(nil)); end

    # source://cucumber-gherkin//lib/gherkin.rb#26
    def from_source(uri, data, options = T.unsafe(nil)); end

    # source://cucumber-gherkin//lib/gherkin.rb#18
    def from_sources(sources, options = T.unsafe(nil)); end
  end
end

# source://cucumber-gherkin//lib/gherkin/ast_builder.rb#5
class Gherkin::AstBuilder
  # @return [AstBuilder] a new instance of AstBuilder
  #
  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#6
  def initialize(id_generator); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#25
  def build(token); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#40
  def current_node; end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#20
  def end_rule(rule_type); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#82
  def ensure_cell_count(rows); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#92
  def get_cells(table_row_token); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#101
  def get_description(node); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#44
  def get_location(token, column); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#36
  def get_result; end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#105
  def get_steps(node); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#70
  def get_table_rows(node); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#52
  def get_tags(node); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#11
  def reset; end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#16
  def start_rule(rule_type); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#109
  def transform_node(node); end
end

# source://cucumber-gherkin//lib/gherkin/errors.rb#21
class Gherkin::AstBuilderException < ::Gherkin::ParserException; end

# source://cucumber-gherkin//lib/gherkin/ast_node.rb#2
class Gherkin::AstNode
  # @return [AstNode] a new instance of AstNode
  #
  # source://cucumber-gherkin//lib/gherkin/ast_node.rb#5
  def initialize(rule_type); end

  # source://cucumber-gherkin//lib/gherkin/ast_node.rb#10
  def add(rule_type, obj); end

  # source://cucumber-gherkin//lib/gherkin/ast_node.rb#18
  def get_items(rule_type); end

  # source://cucumber-gherkin//lib/gherkin/ast_node.rb#14
  def get_single(rule_type); end

  # source://cucumber-gherkin//lib/gherkin/ast_node.rb#22
  def get_token(token_type); end

  # source://cucumber-gherkin//lib/gherkin/ast_node.rb#26
  def get_tokens(token_type); end

  # Returns the value of attribute rule_type.
  #
  # source://cucumber-gherkin//lib/gherkin/ast_node.rb#3
  def rule_type; end
end

# source://cucumber-gherkin//lib/gherkin/errors.rb#3
class Gherkin::AstNodeNotLocatedException < ::StandardError; end

# source://cucumber-gherkin//lib/gherkin/errors.rb#23
class Gherkin::CompositeParserException < ::Gherkin::ParserError
  # @return [CompositeParserException] a new instance of CompositeParserException
  #
  # source://cucumber-gherkin//lib/gherkin/errors.rb#26
  def initialize(errors); end

  # Returns the value of attribute errors.
  #
  # source://cucumber-gherkin//lib/gherkin/errors.rb#24
  def errors; end
end

# source://cucumber-gherkin//lib/gherkin.rb#4
Gherkin::DEFAULT_OPTIONS = T.let(T.unsafe(nil), Hash)

# source://cucumber-gherkin//lib/gherkin/dialect.rb#5
Gherkin::DIALECTS = T.let(T.unsafe(nil), Hash)

# source://cucumber-gherkin//lib/gherkin/dialect.rb#4
Gherkin::DIALECT_FILE_PATH = T.let(T.unsafe(nil), String)

# source://cucumber-gherkin//lib/gherkin/dialect.rb#7
class Gherkin::Dialect
  # @return [Dialect] a new instance of Dialect
  #
  # source://cucumber-gherkin//lib/gherkin/dialect.rb#14
  def initialize(spec); end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#54
  def and_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#38
  def background_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#58
  def but_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#34
  def examples_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#18
  def feature_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#42
  def given_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#22
  def rule_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#26
  def scenario_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#30
  def scenario_outline_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#50
  def then_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#46
  def when_keywords; end

  class << self
    # source://cucumber-gherkin//lib/gherkin/dialect.rb#8
    def for(name); end
  end
end

# source://cucumber-gherkin//lib/gherkin/errors.rb#4
class Gherkin::DoubleIterationException < ::StandardError; end

# source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#2
class Gherkin::GherkinLine
  # @return [GherkinLine] a new instance of GherkinLine
  #
  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#4
  def initialize(line_text, line_number); end

  # @return [Boolean]
  #
  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#23
  def empty?; end

  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#27
  def get_line_text(indent_to_remove); end

  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#19
  def get_rest_trimmed(length); end

  # Returns the value of attribute indent.
  #
  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#3
  def indent; end

  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#51
  def split_table_cells(row); end

  # @return [Boolean]
  #
  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#11
  def start_with?(prefix); end

  # @return [Boolean]
  #
  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#15
  def start_with_title_keyword?(keyword); end

  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#36
  def table_cells; end

  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#84
  def tags; end

  # Returns the value of attribute trimmed_line_text.
  #
  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#3
  def trimmed_line_text; end
end

# source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#107
class Gherkin::GherkinLine::Span < ::Struct; end

# source://cucumber-gherkin//lib/gherkin/errors.rb#15
class Gherkin::NoSuchLanguageException < ::Gherkin::ParserException
  # @return [NoSuchLanguageException] a new instance of NoSuchLanguageException
  #
  # source://cucumber-gherkin//lib/gherkin/errors.rb#16
  def initialize(language, location); end
end

# source://cucumber-gherkin//lib/gherkin/parser.rb#56
class Gherkin::Parser
  # @return [Parser] a new instance of Parser
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#59
  def initialize(ast_builder = T.unsafe(nil)); end

  # @raise [CompositeParserException]
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#96
  def add_error(context, error); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#90
  def build(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#107
  def end_rule(context, rule_type); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#113
  def get_result; end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#3831
  def lookahead_0(context, currentToken); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#3854
  def lookahead_1(context, currentToken); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#163
  def match_BackgroundLine(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#135
  def match_Comment(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#191
  def match_DocStringSeparator(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#122
  def match_EOF(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#128
  def match_Empty(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#177
  def match_ExamplesLine(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#149
  def match_FeatureLine(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#205
  def match_Language(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#212
  def match_Other(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#156
  def match_RuleLine(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#170
  def match_ScenarioLine(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#184
  def match_StepLine(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#198
  def match_TableRow(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#142
  def match_TagLine(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#219
  def match_token(state, token, context); end

  # Start
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#328
  def match_token_at_0(token, context); end

  # GherkinDocument:0>Feature:0>FeatureHeader:0>#Language:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#370
  def match_token_at_1(token, context); end

  # GherkinDocument:0>Feature:1>Background:2>Step:1>StepArg:0>__alt0:0>DataTable:0>#TableRow:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#896
  def match_token_at_10(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:0>Tags:0>#TagLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#973
  def match_token_at_11(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:0>#ScenarioLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1002
  def match_token_at_12(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:1>DescriptionHelper:1>Description:0>#Other:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1087
  def match_token_at_13(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:1>DescriptionHelper:2>#Comment:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1176
  def match_token_at_14(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:2>Step:0>#StepLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1256
  def match_token_at_15(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:2>Step:1>StepArg:0>__alt0:0>DataTable:0>#TableRow:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1354
  def match_token_at_16(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:0>Tags:0>#TagLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1454
  def match_token_at_17(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:1>Examples:0>#ExamplesLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1483
  def match_token_at_18(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:1>Examples:1>DescriptionHelper:1>Description:0>#Other:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1582
  def match_token_at_19(token, context); end

  # GherkinDocument:0>Feature:0>FeatureHeader:1>Tags:0>#TagLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#398
  def match_token_at_2(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:1>Examples:1>DescriptionHelper:2>#Comment:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1685
  def match_token_at_20(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:1>Examples:2>ExamplesTable:0>#TableRow:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1779
  def match_token_at_21(token, context); end

  # GherkinDocument:0>Feature:3>Rule:0>RuleHeader:0>Tags:0>#TagLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1879
  def match_token_at_22(token, context); end

  # GherkinDocument:0>Feature:3>Rule:0>RuleHeader:1>#RuleLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1907
  def match_token_at_23(token, context); end

  # GherkinDocument:0>Feature:3>Rule:0>RuleHeader:2>DescriptionHelper:1>Description:0>#Other:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1977
  def match_token_at_24(token, context); end

  # GherkinDocument:0>Feature:3>Rule:0>RuleHeader:2>DescriptionHelper:2>#Comment:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2049
  def match_token_at_25(token, context); end

  # GherkinDocument:0>Feature:3>Rule:1>Background:0>#BackgroundLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2114
  def match_token_at_26(token, context); end

  # GherkinDocument:0>Feature:3>Rule:1>Background:1>DescriptionHelper:1>Description:0>#Other:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2183
  def match_token_at_27(token, context); end

  # GherkinDocument:0>Feature:3>Rule:1>Background:1>DescriptionHelper:2>#Comment:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2254
  def match_token_at_28(token, context); end

  # GherkinDocument:0>Feature:3>Rule:1>Background:2>Step:0>#StepLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2318
  def match_token_at_29(token, context); end

  # GherkinDocument:0>Feature:0>FeatureHeader:2>#FeatureLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#426
  def match_token_at_3(token, context); end

  # GherkinDocument:0>Feature:3>Rule:1>Background:2>Step:1>StepArg:0>__alt0:0>DataTable:0>#TableRow:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2398
  def match_token_at_30(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:0>Tags:0>#TagLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2478
  def match_token_at_31(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:0>#ScenarioLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2507
  def match_token_at_32(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:1>DescriptionHelper:1>Description:0>#Other:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2595
  def match_token_at_33(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:1>DescriptionHelper:2>#Comment:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2687
  def match_token_at_34(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:2>Step:0>#StepLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2770
  def match_token_at_35(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:2>Step:1>StepArg:0>__alt0:0>DataTable:0>#TableRow:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2871
  def match_token_at_36(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:0>Tags:0>#TagLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2974
  def match_token_at_37(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:1>Examples:0>#ExamplesLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#3003
  def match_token_at_38(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:1>Examples:1>DescriptionHelper:1>Description:0>#Other:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#3105
  def match_token_at_39(token, context); end

  # GherkinDocument:0>Feature:0>FeatureHeader:3>DescriptionHelper:1>Description:0>#Other:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#493
  def match_token_at_4(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:1>Examples:1>DescriptionHelper:2>#Comment:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#3211
  def match_token_at_40(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:1>Examples:2>ExamplesTable:0>#TableRow:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#3308
  def match_token_at_41(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:2>Step:1>StepArg:0>__alt0:1>DocString:0>#DocStringSeparator:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#3411
  def match_token_at_43(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:2>Step:1>StepArg:0>__alt0:1>DocString:2>#DocStringSeparator:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#3430
  def match_token_at_44(token, context); end

  # GherkinDocument:0>Feature:3>Rule:1>Background:2>Step:1>StepArg:0>__alt0:1>DocString:0>#DocStringSeparator:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#3529
  def match_token_at_45(token, context); end

  # GherkinDocument:0>Feature:3>Rule:1>Background:2>Step:1>StepArg:0>__alt0:1>DocString:2>#DocStringSeparator:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#3548
  def match_token_at_46(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:2>Step:1>StepArg:0>__alt0:1>DocString:0>#DocStringSeparator:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#3624
  def match_token_at_47(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:2>Step:1>StepArg:0>__alt0:1>DocString:2>#DocStringSeparator:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#3643
  def match_token_at_48(token, context); end

  # GherkinDocument:0>Feature:1>Background:2>Step:1>StepArg:0>__alt0:1>DocString:0>#DocStringSeparator:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#3739
  def match_token_at_49(token, context); end

  # GherkinDocument:0>Feature:0>FeatureHeader:3>DescriptionHelper:2>#Comment:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#562
  def match_token_at_5(token, context); end

  # GherkinDocument:0>Feature:1>Background:2>Step:1>StepArg:0>__alt0:1>DocString:2>#DocStringSeparator:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#3758
  def match_token_at_50(token, context); end

  # GherkinDocument:0>Feature:1>Background:0>#BackgroundLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#624
  def match_token_at_6(token, context); end

  # GherkinDocument:0>Feature:1>Background:1>DescriptionHelper:1>Description:0>#Other:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#690
  def match_token_at_7(token, context); end

  # GherkinDocument:0>Feature:1>Background:1>DescriptionHelper:2>#Comment:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#758
  def match_token_at_8(token, context); end

  # GherkinDocument:0>Feature:1>Background:2>Step:0>#StepLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#819
  def match_token_at_9(token, context); end

  # @raise [CompositeParserException]
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#63
  def parse(token_scanner, token_matcher = T.unsafe(nil)); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#117
  def read_token(context); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#101
  def start_rule(context, rule_type); end

  # Returns the value of attribute stop_at_first_error.
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#57
  def stop_at_first_error; end

  # Sets the attribute stop_at_first_error
  #
  # @param value the value to set the attribute stop_at_first_error to.
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#57
  def stop_at_first_error=(_arg0); end

  private

  # source://cucumber-gherkin//lib/gherkin/parser.rb#3879
  def handle_ast_error(context, &action); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#3883
  def handle_external_error(context, default_value, &action); end
end

# source://cucumber-gherkin//lib/gherkin/parser.rb#45
class Gherkin::ParserContext
  # @return [ParserContext] a new instance of ParserContext
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#48
  def initialize(token_scanner, token_matcher, token_queue, errors); end

  # Returns the value of attribute errors.
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#46
  def errors; end

  # Returns the value of attribute token_matcher.
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#46
  def token_matcher; end

  # Returns the value of attribute token_queue.
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#46
  def token_queue; end

  # Returns the value of attribute token_scanner.
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#46
  def token_scanner; end
end

# source://cucumber-gherkin//lib/gherkin/errors.rb#2
class Gherkin::ParserError < ::StandardError; end

# source://cucumber-gherkin//lib/gherkin/errors.rb#6
class Gherkin::ParserException < ::Gherkin::ParserError
  # @return [ParserException] a new instance of ParserException
  #
  # source://cucumber-gherkin//lib/gherkin/errors.rb#9
  def initialize(message, location); end

  # Returns the value of attribute location.
  #
  # source://cucumber-gherkin//lib/gherkin/errors.rb#7
  def location; end
end

# source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#2
module Gherkin::Pickles; end

# source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#3
class Gherkin::Pickles::Compiler
  # @return [Compiler] a new instance of Compiler
  #
  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#4
  def initialize(id_generator); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#8
  def compile(gherkin_document, source); end

  private

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#22
  def compile_feature(pickles, language, tags, feature, source); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#40
  def compile_rule(pickles, language, feature_tags, feature_background_steps, rule, source); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#58
  def compile_scenario(inherited_tags, background_steps, scenario, language, pickles, source); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#79
  def compile_scenario_outline(inherited_tags, background_steps, scenario, language, pickles, source); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#110
  def interpolate(name, variable_cells, value_cells); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#154
  def pickle_data_table(data_table, variable_cells, value_cells); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#168
  def pickle_doc_string(doc_string, variable_cells, value_cells); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#124
  def pickle_step(step); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#128
  def pickle_step_props(step, variable_cells, values_row); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#118
  def pickle_steps(steps); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#182
  def pickle_tag(tag); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#178
  def pickle_tags(tags); end
end

# source://cucumber-gherkin//lib/gherkin/query.rb#2
class Gherkin::Query
  # @return [Query] a new instance of Query
  #
  # source://cucumber-gherkin//lib/gherkin/query.rb#3
  def initialize; end

  # @raise [AstNodeNotLocatedException]
  #
  # source://cucumber-gherkin//lib/gherkin/query.rb#11
  def location(ast_node_id); end

  # source://cucumber-gherkin//lib/gherkin/query.rb#7
  def update(message); end

  private

  # source://cucumber-gherkin//lib/gherkin/query.rb#61
  def store_node_location(node); end

  # source://cucumber-gherkin//lib/gherkin/query.rb#57
  def store_nodes_location(nodes); end

  # source://cucumber-gherkin//lib/gherkin/query.rb#39
  def update_background(background); end

  # source://cucumber-gherkin//lib/gherkin/query.rb#18
  def update_feature(feature); end

  # source://cucumber-gherkin//lib/gherkin/query.rb#29
  def update_rule(rule); end

  # source://cucumber-gherkin//lib/gherkin/query.rb#43
  def update_scenario(scenario); end

  # source://cucumber-gherkin//lib/gherkin/query.rb#53
  def update_steps(steps); end
end

# source://cucumber-gherkin//lib/gherkin/parser.rb#9
Gherkin::RULE_TYPE = T.let(T.unsafe(nil), Array)

# source://cucumber-gherkin//lib/gherkin/stream/parser_message_stream.rb#7
module Gherkin::Stream; end

# source://cucumber-gherkin//lib/gherkin/stream/parser_message_stream.rb#8
class Gherkin::Stream::ParserMessageStream
  # @return [ParserMessageStream] a new instance of ParserMessageStream
  #
  # source://cucumber-gherkin//lib/gherkin/stream/parser_message_stream.rb#9
  def initialize(paths, sources, options); end

  # source://cucumber-gherkin//lib/gherkin/stream/parser_message_stream.rb#19
  def messages; end

  private

  # source://cucumber-gherkin//lib/gherkin/stream/parser_message_stream.rb#84
  def build_gherkin_document(source); end

  # source://cucumber-gherkin//lib/gherkin/stream/parser_message_stream.rb#68
  def sources; end

  # source://cucumber-gherkin//lib/gherkin/stream/parser_message_stream.rb#52
  def yield_parse_errors(y, errors, uri); end
end

# source://cucumber-gherkin//lib/gherkin/token.rb#2
class Gherkin::Token < ::Struct
  # source://cucumber-gherkin//lib/gherkin/token.rb#10
  def detach; end

  # @return [Boolean]
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#6
  def eof?; end

  # Returns the value of attribute matched_gherkin_dialect.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#3
  def matched_gherkin_dialect; end

  # Sets the attribute matched_gherkin_dialect
  #
  # @param value the value to set the attribute matched_gherkin_dialect to.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#3
  def matched_gherkin_dialect=(_arg0); end

  # Returns the value of attribute matched_indent.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#3
  def matched_indent; end

  # Sets the attribute matched_indent
  #
  # @param value the value to set the attribute matched_indent to.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#3
  def matched_indent=(_arg0); end

  # Returns the value of attribute matched_items.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#3
  def matched_items; end

  # Sets the attribute matched_items
  #
  # @param value the value to set the attribute matched_items to.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#3
  def matched_items=(_arg0); end

  # Returns the value of attribute matched_keyword.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#3
  def matched_keyword; end

  # Sets the attribute matched_keyword
  #
  # @param value the value to set the attribute matched_keyword to.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#3
  def matched_keyword=(_arg0); end

  # Returns the value of attribute matched_text.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#3
  def matched_text; end

  # Sets the attribute matched_text
  #
  # @param value the value to set the attribute matched_text to.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#3
  def matched_text=(_arg0); end

  # Returns the value of attribute matched_type.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#3
  def matched_type; end

  # Sets the attribute matched_type
  #
  # @param value the value to set the attribute matched_type to.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#3
  def matched_type=(_arg0); end

  # source://cucumber-gherkin//lib/gherkin/token.rb#14
  def token_value; end
end

# source://cucumber-gherkin//lib/gherkin/token_matcher.rb#5
class Gherkin::TokenMatcher
  # @return [TokenMatcher] a new instance of TokenMatcher
  #
  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#8
  def initialize(dialect_name = T.unsafe(nil)); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#90
  def _match_DocStringSeparator(token, separator, is_open); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#40
  def match_BackgroundLine(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#61
  def match_Comment(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#79
  def match_DocStringSeparator(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#107
  def match_EOF(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#55
  def match_Empty(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#44
  def match_ExamplesLine(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#27
  def match_FeatureLine(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#68
  def match_Language(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#113
  def match_Other(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#31
  def match_RuleLine(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#35
  def match_ScenarioLine(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#119
  def match_StepLine(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#48
  def match_TableRow(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#20
  def match_TagLine(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#14
  def reset; end

  private

  # @raise [NoSuchLanguageException]
  #
  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#137
  def change_dialect(dialect_name, location); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#145
  def match_title_line(token, token_type, keywords); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#155
  def set_token_matched(token, matched_type, text = T.unsafe(nil), keyword = T.unsafe(nil), indent = T.unsafe(nil), items = T.unsafe(nil)); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#165
  def unescape_docstring(text); end
end

# source://cucumber-gherkin//lib/gherkin/token_matcher.rb#6
Gherkin::TokenMatcher::LANGUAGE_PATTERN = T.let(T.unsafe(nil), Regexp)

# The scanner reads a gherkin doc (typically read from a .feature file) and
# creates a token for line. The tokens are passed to the parser, which outputs
# an AST (Abstract Syntax Tree).
#
# If the scanner sees a # language header, it will reconfigure itself dynamically
# to look for Gherkin keywords for the associated language. The keywords are defined
# in gherkin-languages.json.
#
# source://cucumber-gherkin//lib/gherkin/token_scanner.rb#13
class Gherkin::TokenScanner
  # @return [TokenScanner] a new instance of TokenScanner
  #
  # source://cucumber-gherkin//lib/gherkin/token_scanner.rb#14
  def initialize(source_or_io); end

  # source://cucumber-gherkin//lib/gherkin/token_scanner.rb#27
  def read; end
end

# source://cucumber-gherkin//lib/gherkin/errors.rb#41
class Gherkin::UnexpectedEOFException < ::Gherkin::ParserException
  # @return [UnexpectedEOFException] a new instance of UnexpectedEOFException
  #
  # source://cucumber-gherkin//lib/gherkin/errors.rb#42
  def initialize(received_token, expected_token_types, state_comment); end
end

# source://cucumber-gherkin//lib/gherkin/errors.rb#32
class Gherkin::UnexpectedTokenException < ::Gherkin::ParserException
  # @return [UnexpectedTokenException] a new instance of UnexpectedTokenException
  #
  # source://cucumber-gherkin//lib/gherkin/errors.rb#33
  def initialize(received_token, expected_token_types, state_comment); end
end
