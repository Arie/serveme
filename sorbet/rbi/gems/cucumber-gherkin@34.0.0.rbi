# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `cucumber-gherkin` gem.
# Please instead update this file by running `bin/tapioca gem cucumber-gherkin`.


# source://cucumber-gherkin//lib/gherkin/ast_node.rb#3
module Gherkin
  class << self
    # source://cucumber-gherkin//lib/gherkin.rb#32
    def encode_source_message(uri, data); end

    # source://cucumber-gherkin//lib/gherkin.rb#12
    def from_paths(paths, options = T.unsafe(nil)); end

    # source://cucumber-gherkin//lib/gherkin.rb#28
    def from_source(uri, data, options = T.unsafe(nil)); end

    # source://cucumber-gherkin//lib/gherkin.rb#20
    def from_sources(sources, options = T.unsafe(nil)); end
  end
end

# source://cucumber-gherkin//lib/gherkin/ast_builder.rb#7
class Gherkin::AstBuilder
  # @return [AstBuilder] a new instance of AstBuilder
  #
  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#8
  def initialize(id_generator); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#27
  def build(token); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#44
  def current_node; end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#22
  def end_rule(_rule_type); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#87
  def ensure_cell_count(rows); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#96
  def get_cells(table_row_token); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#105
  def get_description(node); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#48
  def get_location(token, column); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#40
  def get_result; end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#109
  def get_steps(node); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#76
  def get_table_rows(node); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#56
  def get_tags(node); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#13
  def reset; end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#18
  def start_rule(rule_type); end

  # source://cucumber-gherkin//lib/gherkin/ast_builder.rb#113
  def transform_node(node); end
end

# source://cucumber-gherkin//lib/gherkin/errors.rb#23
class Gherkin::AstBuilderException < ::Gherkin::ParserException; end

# source://cucumber-gherkin//lib/gherkin/ast_node.rb#4
class Gherkin::AstNode
  # @return [AstNode] a new instance of AstNode
  #
  # source://cucumber-gherkin//lib/gherkin/ast_node.rb#7
  def initialize(rule_type); end

  # source://cucumber-gherkin//lib/gherkin/ast_node.rb#12
  def add(rule_type, obj); end

  # source://cucumber-gherkin//lib/gherkin/ast_node.rb#20
  def get_items(rule_type); end

  # source://cucumber-gherkin//lib/gherkin/ast_node.rb#16
  def get_single(rule_type); end

  # source://cucumber-gherkin//lib/gherkin/ast_node.rb#24
  def get_token(token_type); end

  # source://cucumber-gherkin//lib/gherkin/ast_node.rb#28
  def get_tokens(token_type); end

  # Returns the value of attribute rule_type.
  #
  # source://cucumber-gherkin//lib/gherkin/ast_node.rb#5
  def rule_type; end
end

# source://cucumber-gherkin//lib/gherkin/errors.rb#5
class Gherkin::AstNodeNotLocatedException < ::StandardError; end

# source://cucumber-gherkin//lib/gherkin/errors.rb#25
class Gherkin::CompositeParserException < ::Gherkin::ParserError
  # @return [CompositeParserException] a new instance of CompositeParserException
  #
  # source://cucumber-gherkin//lib/gherkin/errors.rb#28
  def initialize(errors); end

  # Returns the value of attribute errors.
  #
  # source://cucumber-gherkin//lib/gherkin/errors.rb#26
  def errors; end
end

# source://cucumber-gherkin//lib/gherkin.rb#6
Gherkin::DEFAULT_OPTIONS = T.let(T.unsafe(nil), Hash)

# source://cucumber-gherkin//lib/gherkin/dialect.rb#8
Gherkin::DIALECTS = T.let(T.unsafe(nil), Hash)

# source://cucumber-gherkin//lib/gherkin/dialect.rb#7
Gherkin::DIALECT_FILE_PATH = T.let(T.unsafe(nil), String)

# source://cucumber-gherkin//lib/gherkin/dialect.rb#10
class Gherkin::Dialect
  # @return [Dialect] a new instance of Dialect
  #
  # source://cucumber-gherkin//lib/gherkin/dialect.rb#18
  def initialize(spec); end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#58
  def and_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#42
  def background_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#62
  def but_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#38
  def examples_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#22
  def feature_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#46
  def given_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#26
  def rule_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#30
  def scenario_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#34
  def scenario_outline_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#54
  def then_keywords; end

  # source://cucumber-gherkin//lib/gherkin/dialect.rb#50
  def when_keywords; end

  class << self
    # source://cucumber-gherkin//lib/gherkin/dialect.rb#11
    def for(name); end
  end
end

# source://cucumber-gherkin//lib/gherkin/errors.rb#6
class Gherkin::DoubleIterationException < ::StandardError; end

# source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#4
class Gherkin::GherkinLine
  # @return [GherkinLine] a new instance of GherkinLine
  #
  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#7
  def initialize(line_text, line_number); end

  # @return [Boolean]
  #
  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#26
  def empty?; end

  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#30
  def get_line_text(indent_to_remove); end

  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#22
  def get_rest_trimmed(length); end

  # Returns the value of attribute indent.
  #
  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#5
  def indent; end

  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#54
  def split_table_cells(row); end

  # @return [Boolean]
  #
  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#14
  def start_with?(prefix); end

  # @return [Boolean]
  #
  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#18
  def start_with_title_keyword?(keyword); end

  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#39
  def table_cells; end

  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#87
  def tags; end

  # Returns the value of attribute trimmed_line_text.
  #
  # source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#5
  def trimmed_line_text; end
end

# source://cucumber-gherkin//lib/gherkin/gherkin_line.rb#108
class Gherkin::GherkinLine::Span < ::Struct; end

# source://cucumber-gherkin//lib/gherkin/errors.rb#17
class Gherkin::NoSuchLanguageException < ::Gherkin::ParserException
  # @return [NoSuchLanguageException] a new instance of NoSuchLanguageException
  #
  # source://cucumber-gherkin//lib/gherkin/errors.rb#18
  def initialize(language, location); end
end

# source://cucumber-gherkin//lib/gherkin/parser.rb#57
class Gherkin::Parser
  # @return [Parser] a new instance of Parser
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#60
  def initialize(ast_builder = T.unsafe(nil)); end

  # @raise [CompositeParserException]
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#97
  def add_error(context, error); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#91
  def build(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#108
  def end_rule(context, rule_type); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#114
  def get_result; end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#3210
  def lookahead0(context, current_token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#3233
  def lookahead1(context, current_token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#164
  def match_BackgroundLine(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#136
  def match_Comment(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#192
  def match_DocStringSeparator(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#123
  def match_EOF(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#129
  def match_Empty(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#178
  def match_ExamplesLine(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#150
  def match_FeatureLine(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#206
  def match_Language(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#213
  def match_Other(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#157
  def match_RuleLine(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#171
  def match_ScenarioLine(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#185
  def match_StepLine(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#199
  def match_TableRow(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#143
  def match_TagLine(context, token); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#220
  def match_token(state, token, context); end

  # Start
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#313
  def match_token_at_state0(token, context); end

  # GherkinDocument:0>Feature:0>FeatureHeader:0>#Language:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#355
  def match_token_at_state1(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:0>#ScenarioLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#864
  def match_token_at_state10(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:1>DescriptionHelper:1>Description:0>__alt1:0>#Other:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#950
  def match_token_at_state11(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:2>Step:0>#StepLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1038
  def match_token_at_state12(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:2>Step:1>StepArg:0>__alt0:0>DataTable:0>#TableRow:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1136
  def match_token_at_state13(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:0>Tags:0>#TagLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1236
  def match_token_at_state14(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:1>Examples:0>#ExamplesLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1265
  def match_token_at_state15(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:1>Examples:1>DescriptionHelper:1>Description:0>__alt1:0>#Other:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1365
  def match_token_at_state16(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:1>Examples:2>ExamplesTable:0>#TableRow:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1467
  def match_token_at_state17(token, context); end

  # GherkinDocument:0>Feature:3>Rule:0>RuleHeader:0>Tags:0>#TagLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1567
  def match_token_at_state18(token, context); end

  # GherkinDocument:0>Feature:3>Rule:0>RuleHeader:1>#RuleLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1595
  def match_token_at_state19(token, context); end

  # GherkinDocument:0>Feature:0>FeatureHeader:1>Tags:0>#TagLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#383
  def match_token_at_state2(token, context); end

  # GherkinDocument:0>Feature:3>Rule:0>RuleHeader:2>DescriptionHelper:1>Description:0>__alt1:0>#Other:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1666
  def match_token_at_state20(token, context); end

  # GherkinDocument:0>Feature:3>Rule:1>Background:0>#BackgroundLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1737
  def match_token_at_state21(token, context); end

  # GherkinDocument:0>Feature:3>Rule:1>Background:1>DescriptionHelper:1>Description:0>__alt1:0>#Other:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1807
  def match_token_at_state22(token, context); end

  # GherkinDocument:0>Feature:3>Rule:1>Background:2>Step:0>#StepLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1877
  def match_token_at_state23(token, context); end

  # GherkinDocument:0>Feature:3>Rule:1>Background:2>Step:1>StepArg:0>__alt0:0>DataTable:0>#TableRow:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#1957
  def match_token_at_state24(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:0>Tags:0>#TagLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2037
  def match_token_at_state25(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:0>#ScenarioLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2066
  def match_token_at_state26(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:1>DescriptionHelper:1>Description:0>__alt1:0>#Other:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2155
  def match_token_at_state27(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:2>Step:0>#StepLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2246
  def match_token_at_state28(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:2>Step:1>StepArg:0>__alt0:0>DataTable:0>#TableRow:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2347
  def match_token_at_state29(token, context); end

  # GherkinDocument:0>Feature:0>FeatureHeader:2>#FeatureLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#411
  def match_token_at_state3(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:0>Tags:0>#TagLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2450
  def match_token_at_state30(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:1>Examples:0>#ExamplesLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2479
  def match_token_at_state31(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:1>Examples:1>DescriptionHelper:1>Description:0>__alt1:0>#Other:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2582
  def match_token_at_state32(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:3>ExamplesDefinition:1>Examples:2>ExamplesTable:0>#TableRow:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2687
  def match_token_at_state33(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:2>Step:1>StepArg:0>__alt0:1>DocString:0>#DocStringSeparator:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2790
  def match_token_at_state35(token, context); end

  # GherkinDocument:0>Feature:3>Rule:2>ScenarioDefinition:1>Scenario:2>Step:1>StepArg:0>__alt0:1>DocString:2>#DocStringSeparator:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2809
  def match_token_at_state36(token, context); end

  # GherkinDocument:0>Feature:3>Rule:1>Background:2>Step:1>StepArg:0>__alt0:1>DocString:0>#DocStringSeparator:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2908
  def match_token_at_state37(token, context); end

  # GherkinDocument:0>Feature:3>Rule:1>Background:2>Step:1>StepArg:0>__alt0:1>DocString:2>#DocStringSeparator:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#2927
  def match_token_at_state38(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:2>Step:1>StepArg:0>__alt0:1>DocString:0>#DocStringSeparator:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#3003
  def match_token_at_state39(token, context); end

  # GherkinDocument:0>Feature:0>FeatureHeader:3>DescriptionHelper:1>Description:0>__alt1:0>#Other:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#479
  def match_token_at_state4(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:1>Scenario:2>Step:1>StepArg:0>__alt0:1>DocString:2>#DocStringSeparator:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#3022
  def match_token_at_state40(token, context); end

  # GherkinDocument:0>Feature:1>Background:2>Step:1>StepArg:0>__alt0:1>DocString:0>#DocStringSeparator:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#3118
  def match_token_at_state41(token, context); end

  # GherkinDocument:0>Feature:1>Background:2>Step:1>StepArg:0>__alt0:1>DocString:2>#DocStringSeparator:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#3137
  def match_token_at_state42(token, context); end

  # GherkinDocument:0>Feature:1>Background:0>#BackgroundLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#547
  def match_token_at_state5(token, context); end

  # GherkinDocument:0>Feature:1>Background:1>DescriptionHelper:1>Description:0>__alt1:0>#Other:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#614
  def match_token_at_state6(token, context); end

  # GherkinDocument:0>Feature:1>Background:2>Step:0>#StepLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#681
  def match_token_at_state7(token, context); end

  # GherkinDocument:0>Feature:1>Background:2>Step:1>StepArg:0>__alt0:0>DataTable:0>#TableRow:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#758
  def match_token_at_state8(token, context); end

  # GherkinDocument:0>Feature:2>ScenarioDefinition:0>Tags:0>#TagLine:0
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#835
  def match_token_at_state9(token, context); end

  # @raise [CompositeParserException]
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#64
  def parse(token_scanner, token_matcher = T.unsafe(nil)); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#118
  def read_token(context); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#102
  def start_rule(context, rule_type); end

  # Returns the value of attribute stop_at_first_error.
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#58
  def stop_at_first_error; end

  # Sets the attribute stop_at_first_error
  #
  # @param value the value to set the attribute stop_at_first_error to.
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#58
  def stop_at_first_error=(_arg0); end

  private

  # source://cucumber-gherkin//lib/gherkin/parser.rb#3258
  def handle_ast_error(context, &_arg1); end

  # source://cucumber-gherkin//lib/gherkin/parser.rb#3262
  def handle_external_error(context, default_value, &action); end
end

# source://cucumber-gherkin//lib/gherkin/parser.rb#46
class Gherkin::ParserContext
  # @return [ParserContext] a new instance of ParserContext
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#49
  def initialize(token_scanner, token_matcher, token_queue, errors); end

  # Returns the value of attribute errors.
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#47
  def errors; end

  # Returns the value of attribute token_matcher.
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#47
  def token_matcher; end

  # Returns the value of attribute token_queue.
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#47
  def token_queue; end

  # Returns the value of attribute token_scanner.
  #
  # source://cucumber-gherkin//lib/gherkin/parser.rb#47
  def token_scanner; end
end

# source://cucumber-gherkin//lib/gherkin/errors.rb#4
class Gherkin::ParserError < ::StandardError; end

# source://cucumber-gherkin//lib/gherkin/errors.rb#8
class Gherkin::ParserException < ::Gherkin::ParserError
  # @return [ParserException] a new instance of ParserException
  #
  # source://cucumber-gherkin//lib/gherkin/errors.rb#11
  def initialize(message, location); end

  # Returns the value of attribute location.
  #
  # source://cucumber-gherkin//lib/gherkin/errors.rb#9
  def location; end
end

# source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#6
module Gherkin::Pickles; end

# source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#7
class Gherkin::Pickles::Compiler
  # @return [Compiler] a new instance of Compiler
  #
  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#8
  def initialize(id_generator); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#12
  def compile(gherkin_document, source); end

  private

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#27
  def compile_feature(pickles, language, tags, feature, source); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#45
  def compile_rule(pickles, language, feature_tags, feature_background_steps, rule, source); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#63
  def compile_scenario(inherited_tags, background_steps, scenario, language, pickles, source); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#92
  def compile_scenario_outline(inherited_tags, background_steps, scenario, language, pickles, source); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#141
  def interpolate(name, variable_cells, value_cells); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#174
  def pickle_data_table(data_table, variable_cells, value_cells); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#188
  def pickle_doc_string(doc_string, variable_cells, value_cells); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#149
  def pickle_step_props(step, variable_cells, values_row, keyword_type); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#200
  def pickle_tag(tag); end

  # source://cucumber-gherkin//lib/gherkin/pickles/compiler.rb#196
  def pickle_tags(tags); end
end

# source://cucumber-gherkin//lib/gherkin/query.rb#4
class Gherkin::Query
  # @return [Query] a new instance of Query
  #
  # source://cucumber-gherkin//lib/gherkin/query.rb#5
  def initialize; end

  # @raise [AstNodeNotLocatedException]
  #
  # source://cucumber-gherkin//lib/gherkin/query.rb#21
  def location(ast_node_id); end

  # @raise [AstNodeNotLocatedException]
  #
  # source://cucumber-gherkin//lib/gherkin/query.rb#15
  def scenario_parent_locations(scenario_node_id); end

  # source://cucumber-gherkin//lib/gherkin/query.rb#11
  def update(message); end

  private

  # source://cucumber-gherkin//lib/gherkin/query.rb#81
  def store_node_location(node); end

  # source://cucumber-gherkin//lib/gherkin/query.rb#77
  def store_nodes_location(nodes); end

  # source://cucumber-gherkin//lib/gherkin/query.rb#51
  def update_background(parent, background); end

  # source://cucumber-gherkin//lib/gherkin/query.rb#29
  def update_feature(feature); end

  # source://cucumber-gherkin//lib/gherkin/query.rb#41
  def update_rule(feature, rule); end

  # source://cucumber-gherkin//lib/gherkin/query.rb#56
  def update_scenario(feature, rule, scenario); end

  # source://cucumber-gherkin//lib/gherkin/query.rb#73
  def update_steps(steps); end
end

# source://cucumber-gherkin//lib/gherkin/parser.rb#10
Gherkin::RULE_TYPE = T.let(T.unsafe(nil), Array)

# source://cucumber-gherkin//lib/gherkin/stream/parser_message_stream.rb#9
module Gherkin::Stream; end

# source://cucumber-gherkin//lib/gherkin/stream/parser_message_stream.rb#10
class Gherkin::Stream::ParserMessageStream
  # @return [ParserMessageStream] a new instance of ParserMessageStream
  #
  # source://cucumber-gherkin//lib/gherkin/stream/parser_message_stream.rb#11
  def initialize(paths, sources, options); end

  # source://cucumber-gherkin//lib/gherkin/stream/parser_message_stream.rb#21
  def messages; end

  private

  # source://cucumber-gherkin//lib/gherkin/stream/parser_message_stream.rb#87
  def build_gherkin_document(source); end

  # source://cucumber-gherkin//lib/gherkin/stream/parser_message_stream.rb#71
  def sources; end

  # source://cucumber-gherkin//lib/gherkin/stream/parser_message_stream.rb#55
  def yield_parse_errors(yielder, errors, uri); end
end

# source://cucumber-gherkin//lib/gherkin/token.rb#4
class Gherkin::Token < ::Struct
  # source://cucumber-gherkin//lib/gherkin/token.rb#12
  def detach; end

  # @return [Boolean]
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#8
  def eof?; end

  # Returns the value of attribute matched_gherkin_dialect.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#5
  def matched_gherkin_dialect; end

  # Sets the attribute matched_gherkin_dialect
  #
  # @param value the value to set the attribute matched_gherkin_dialect to.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#5
  def matched_gherkin_dialect=(_arg0); end

  # Returns the value of attribute matched_indent.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#5
  def matched_indent; end

  # Sets the attribute matched_indent
  #
  # @param value the value to set the attribute matched_indent to.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#5
  def matched_indent=(_arg0); end

  # Returns the value of attribute matched_items.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#5
  def matched_items; end

  # Sets the attribute matched_items
  #
  # @param value the value to set the attribute matched_items to.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#5
  def matched_items=(_arg0); end

  # Returns the value of attribute matched_keyword.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#5
  def matched_keyword; end

  # Sets the attribute matched_keyword
  #
  # @param value the value to set the attribute matched_keyword to.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#5
  def matched_keyword=(_arg0); end

  # Returns the value of attribute matched_keyword_type.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#5
  def matched_keyword_type; end

  # Sets the attribute matched_keyword_type
  #
  # @param value the value to set the attribute matched_keyword_type to.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#5
  def matched_keyword_type=(_arg0); end

  # Returns the value of attribute matched_text.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#5
  def matched_text; end

  # Sets the attribute matched_text
  #
  # @param value the value to set the attribute matched_text to.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#5
  def matched_text=(_arg0); end

  # Returns the value of attribute matched_type.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#5
  def matched_type; end

  # Sets the attribute matched_type
  #
  # @param value the value to set the attribute matched_type to.
  #
  # source://cucumber-gherkin//lib/gherkin/token.rb#5
  def matched_type=(_arg0); end

  # source://cucumber-gherkin//lib/gherkin/token.rb#16
  def token_value; end
end

# source://cucumber-gherkin//lib/gherkin/token_matcher.rb#8
class Gherkin::TokenMatcher
  # @return [TokenMatcher] a new instance of TokenMatcher
  #
  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#11
  def initialize(dialect_name = T.unsafe(nil)); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#95
  def _match_DocStringSeparator(token, separator, is_open); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#43
  def match_BackgroundLine(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#65
  def match_Comment(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#84
  def match_DocStringSeparator(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#112
  def match_EOF(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#58
  def match_Empty(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#47
  def match_ExamplesLine(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#30
  def match_FeatureLine(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#73
  def match_Language(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#119
  def match_Other(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#34
  def match_RuleLine(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#38
  def match_ScenarioLine(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#125
  def match_StepLine(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#51
  def match_TableRow(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#23
  def match_TagLine(token); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#17
  def reset; end

  private

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#142
  def add_keyword_type_mappings(keywords, type); end

  # @raise [NoSuchLanguageException]
  #
  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#149
  def change_dialect(dialect_name, location); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#172
  def match_title_line(token, token_type, keywords); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#182
  def set_token_matched(token, matched_type, text = T.unsafe(nil), keyword = T.unsafe(nil), indent = T.unsafe(nil), keyword_type = T.unsafe(nil), items = T.unsafe(nil)); end

  # source://cucumber-gherkin//lib/gherkin/token_matcher.rb#193
  def unescape_docstring(text); end
end

# source://cucumber-gherkin//lib/gherkin/token_matcher.rb#9
Gherkin::TokenMatcher::LANGUAGE_PATTERN = T.let(T.unsafe(nil), Regexp)

# The scanner reads a gherkin doc (typically read from a .feature file) and
# creates a token for line. The tokens are passed to the parser, which outputs
# an AST (Abstract Syntax Tree).
#
# If the scanner sees a # language header, it will reconfigure itself dynamically
# to look for Gherkin keywords for the associated language. The keywords are defined
# in gherkin-languages.json.
#
# source://cucumber-gherkin//lib/gherkin/token_scanner.rb#15
class Gherkin::TokenScanner
  # @return [TokenScanner] a new instance of TokenScanner
  #
  # source://cucumber-gherkin//lib/gherkin/token_scanner.rb#16
  def initialize(source_or_io); end

  # source://cucumber-gherkin//lib/gherkin/token_scanner.rb#29
  def read; end
end

# source://cucumber-gherkin//lib/gherkin/errors.rb#43
class Gherkin::UnexpectedEOFException < ::Gherkin::ParserException
  # @return [UnexpectedEOFException] a new instance of UnexpectedEOFException
  #
  # source://cucumber-gherkin//lib/gherkin/errors.rb#44
  def initialize(received_token, expected_token_types, _state_comment); end
end

# source://cucumber-gherkin//lib/gherkin/errors.rb#34
class Gherkin::UnexpectedTokenException < ::Gherkin::ParserException
  # @return [UnexpectedTokenException] a new instance of UnexpectedTokenException
  #
  # source://cucumber-gherkin//lib/gherkin/errors.rb#35
  def initialize(received_token, expected_token_types, _state_comment); end
end
