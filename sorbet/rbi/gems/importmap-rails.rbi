# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/importmap-rails/all/importmap-rails.rbi
#
# importmap-rails-2.0.1

module Importmap
end
class Importmap::Reloader
  def config; end
  def execute(*, **, &); end
  def execute_if_updated(*, **, &); end
  def import_map_paths; end
  def reload!; end
  def updated?(*, **, &); end
  def updater; end
end
class Importmap::Map
  def absolute_root_of(path); end
  def cache_as(name); end
  def cache_sweeper(watches: nil); end
  def clear_cache; end
  def digest(resolver:); end
  def directories; end
  def draw(path = nil, &block); end
  def expand_directories_into(paths); end
  def expanded_packages_and_directories; end
  def expanded_preloading_packages_and_directories; end
  def find_javascript_files_in_tree(path); end
  def initialize; end
  def module_name_from(filename, mapping); end
  def module_path_from(filename, mapping); end
  def packages; end
  def pin(name, to: nil, preload: nil); end
  def pin_all_from(dir, under: nil, to: nil, preload: nil); end
  def preloaded_module_paths(resolver:, cache_key: nil); end
  def rescuable_asset_error?(error); end
  def resolve_asset_paths(paths, resolver:); end
  def to_json(resolver:, cache_key: nil); end
end
class Importmap::Map::InvalidFile < StandardError
end
class Importmap::Map::MappedDir < Struct
  def dir; end
  def dir=(_); end
  def path; end
  def path=(_); end
  def preload; end
  def preload=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def under; end
  def under=(_); end
end
class Importmap::Map::MappedFile < Struct
  def name; end
  def name=(_); end
  def path; end
  def path=(_); end
  def preload; end
  def preload=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
end
class Rails::Application < Rails::Engine
  def importmap; end
  def importmap=(arg0); end
end
class Importmap::Engine < Rails::Engine
end
module Importmap::ImportmapTagsHelper
  def javascript_import_module_tag(*module_names); end
  def javascript_importmap_module_preload_tags(importmap = nil); end
  def javascript_importmap_tags(entry_point = nil, importmap: nil); end
  def javascript_inline_importmap_tag(importmap_json = nil); end
  def javascript_module_preload_tag(*paths); end
end
