# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/maxmind-db/all/maxmind-db.rbi
#
# maxmind-db-1.2.0

module MaxMind
end
class MaxMind::DB
  def at_metadata?(index); end
  def close; end
  def find_address_in_tree(ip_address, ip_version); end
  def find_metadata_start; end
  def get(ip_address); end
  def get_with_prefix_length(ip_address); end
  def initialize(database, options = nil); end
  def metadata; end
  def read_node(node_number, index); end
  def resolve_data_pointer(pointer); end
  def start_node(length); end
end
class MaxMind::DB::InvalidDatabaseError < RuntimeError
end
class MaxMind::DB::Decoder
  def decode(offset); end
  def decode_array(size, offset); end
  def decode_boolean(size, offset); end
  def decode_bytes(size, offset); end
  def decode_double(size, offset); end
  def decode_float(size, offset); end
  def decode_int(type_code, type_size, size, offset); end
  def decode_int32(size, offset); end
  def decode_map(size, offset); end
  def decode_pointer(size, offset); end
  def decode_uint128(size, offset); end
  def decode_uint16(size, offset); end
  def decode_uint32(size, offset); end
  def decode_uint64(size, offset); end
  def decode_utf8_string(size, offset); end
  def initialize(io, pointer_base = nil, pointer_test = nil); end
  def read_extended(offset); end
  def size_from_ctrl_byte(ctrl_byte, offset, type_num); end
  def verify_size(expected, actual); end
end
class MaxMind::DB::FileReader
  def close; end
  def initialize(filename); end
  def read(offset, size); end
  def size; end
end
class MaxMind::DB::MemoryReader
  def close; end
  def initialize(filename, options = nil); end
  def inspect; end
  def read(offset, size); end
  def size; end
end
class MaxMind::DB::Metadata
  def binary_format_major_version; end
  def binary_format_minor_version; end
  def build_epoch; end
  def database_type; end
  def description; end
  def initialize(map); end
  def ip_version; end
  def languages; end
  def node_byte_size; end
  def node_count; end
  def record_size; end
  def search_tree_size; end
end
