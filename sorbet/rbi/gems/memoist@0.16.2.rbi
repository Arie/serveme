# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `memoist` gem.
# Please instead update this file by running `bin/tapioca gem memoist`.


# source://memoist//lib/memoist/version.rb#3
module Memoist
  # source://memoist//lib/memoist.rb#104
  def all_memoized_structs; end

  # source://memoist//lib/memoist.rb#120
  def clear_structs; end

  # source://memoist//lib/memoist.rb#124
  def memoize(*method_names); end

  class << self
    # source://memoist//lib/memoist.rb#40
    def escape_punctuation(string); end

    # @private
    #
    # source://memoist//lib/memoist.rb#6
    def extended(extender); end

    # source://memoist//lib/memoist.rb#61
    def extract_reload!(method, args); end

    # source://memoist//lib/memoist.rb#53
    def memoist_eval(klass, *args, &block); end

    # source://memoist//lib/memoist.rb#16
    def memoized_ivar_for(method_name, identifier = T.unsafe(nil)); end

    # source://memoist//lib/memoist.rb#24
    def memoized_prefix(identifier = T.unsafe(nil)); end

    # source://memoist//lib/memoist.rb#20
    def unmemoized_method_for(method_name, identifier = T.unsafe(nil)); end

    # source://memoist//lib/memoist.rb#32
    def unmemoized_prefix(identifier = T.unsafe(nil)); end
  end
end

# source://memoist//lib/memoist.rb#68
module Memoist::InstanceMethods
  # source://memoist//lib/memoist.rb#95
  def flush_cache(*method_names); end

  # source://memoist//lib/memoist.rb#69
  def memoize_all; end

  # source://memoist//lib/memoist.rb#77
  def memoized_structs(names); end

  # source://memoist//lib/memoist.rb#85
  def prime_cache(*method_names); end

  # source://memoist//lib/memoist.rb#73
  def unmemoize_all; end
end

# source://memoist//lib/memoist.rb#102
class Memoist::MemoizedMethod < ::Struct
  # Returns the value of attribute arity
  #
  # @return [Object] the current value of arity
  #
  # source://memoist//lib/memoist.rb#102
  def arity; end

  # Sets the attribute arity
  #
  # @param value [Object] the value to set the attribute arity to.
  # @return [Object] the newly set value
  #
  # source://memoist//lib/memoist.rb#102
  def arity=(_); end

  # Returns the value of attribute ivar
  #
  # @return [Object] the current value of ivar
  #
  # source://memoist//lib/memoist.rb#102
  def ivar; end

  # Sets the attribute ivar
  #
  # @param value [Object] the value to set the attribute ivar to.
  # @return [Object] the newly set value
  #
  # source://memoist//lib/memoist.rb#102
  def ivar=(_); end

  # Returns the value of attribute memoized_method
  #
  # @return [Object] the current value of memoized_method
  #
  # source://memoist//lib/memoist.rb#102
  def memoized_method; end

  # Sets the attribute memoized_method
  #
  # @param value [Object] the value to set the attribute memoized_method to.
  # @return [Object] the newly set value
  #
  # source://memoist//lib/memoist.rb#102
  def memoized_method=(_); end

  class << self
    # source://memoist//lib/memoist.rb#102
    def [](*_arg0); end

    # source://memoist//lib/memoist.rb#102
    def inspect; end

    # source://memoist//lib/memoist.rb#102
    def keyword_init?; end

    # source://memoist//lib/memoist.rb#102
    def members; end

    # source://memoist//lib/memoist.rb#102
    def new(*_arg0); end
  end
end

# source://memoist//lib/memoist/version.rb#4
Memoist::VERSION = T.let(T.unsafe(nil), String)
