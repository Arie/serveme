# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/paypal-sdk-rest/all/paypal-sdk-rest.rbi
#
# paypal-sdk-rest-1.7.5

module PayPal
end
module PayPal::SDK
  def self.configure(options = nil, &block); end
  def self.load(*args); end
  def self.logger; end
  def self.logger=(log); end
end
module PayPal::SDK::Core
end
module PayPal::SDK::Core::API
end
module PayPal::SDK::Core::API::DataTypes
end
module PayPal::SDK::Core::API::DataTypes::SimpleTypes
end
class PayPal::SDK::Core::API::DataTypes::SimpleTypes::String < String
  def self.new(string = nil); end
  def to_yaml_type; end
end
class PayPal::SDK::Core::API::DataTypes::SimpleTypes::Integer < Integer
  def self.new(number); end
end
class PayPal::SDK::Core::API::DataTypes::SimpleTypes::Float < Float
  def self.new(float); end
end
class PayPal::SDK::Core::API::DataTypes::SimpleTypes::Boolean
  def self.new(boolean); end
end
class PayPal::SDK::Core::API::DataTypes::SimpleTypes::Date < Date
  def self.new(date); end
end
class PayPal::SDK::Core::API::DataTypes::SimpleTypes::DateTime < DateTime
  def self.new(date_time); end
end
module PayPal::SDK::Core::Logging
  def log_event(message, &block); end
  def logger; end
  def self.logger; end
  def self.logger=(logger); end
end
class PayPal::SDK::Core::API::DataTypes::Base
  def convert_array(array, klass); end
  def convert_object(object, klass); end
  def hash_key(key, options = nil); end
  def initialize(options = nil, &block); end
  def member_names; end
  def members; end
  def merge!(options, &block); end
  def self.add_attribute(name, options = nil); end
  def self.add_member(member_name, klass, options = nil); end
  def self.array_of(key, klass, options = nil); end
  def self.define_alias_methods(member_name, options); end
  def self.members; end
  def self.object_of(key, klass, options = nil); end
  def self.snakecase(string); end
  def set(key, value); end
  def skip_value?(value); end
  def to_hash(options = nil); end
  def value_to_hash(value, options = nil); end
  include PayPal::SDK::Core::API::DataTypes::SimpleTypes
  include PayPal::SDK::Core::Logging
end
module PayPal::SDK::REST
  def self.included(klass); end
  def self.new(*args); end
  include PayPal::SDK::Core::Exceptions
  include PayPal::SDK::REST::DataTypes
end
module PayPal::SDK::REST::SetAPI
  def api=(*args); end
  def auth=(token); end
  def client_id=(client_id); end
  def client_secret=(client_secret); end
  def config=(*args); end
  def set_api(*args); end
  def set_config(*args); end
  def token=(token); end
end
module PayPal::SDK::REST::RequestDataType
  def api; end
  def error=(hash); end
  def self.api; end
  def self.included(klass); end
end
module PayPal::SDK::REST::GetAPI
  def api; end
  def parent_api; end
end
module PayPal::SDK::Core::Util
end
class PayPal::SDK::Core::Util::OrderedHash < Hash
  def to_yaml_type; end
end
module PayPal::SDK::REST::DataTypes
end
class PayPal::SDK::REST::DataTypes::Base < PayPal::SDK::Core::API::DataTypes::Base
  def error; end
  def error=(arg0); end
  def header; end
  def header=(arg0); end
  def http_header; end
  def merge!(values); end
  def raise_error!; end
  def request_id; end
  def request_id=(arg0); end
  def self.load_members; end
  def self.raise_on_api_error(*methods); end
  def success?; end
end
class PayPal::SDK::REST::DataTypes::Base::Number < PayPal::SDK::Core::API::DataTypes::SimpleTypes::Float
end
class PayPal::SDK::REST::DataTypes::Payment < PayPal::SDK::REST::DataTypes::Base
  def approval_url(immediate = nil); end
  def billing_agreement_tokens(&block); end
  def billing_agreement_tokens=(value); end
  def cart(&block); end
  def cart=(value); end
  def create!(*arg); end
  def create; end
  def create_time(&block); end
  def create_time=(value); end
  def credit_financing_offered(&block); end
  def credit_financing_offered=(value); end
  def execute!(*arg); end
  def execute(payment_execution); end
  def experience_profile_id(&block); end
  def experience_profile_id=(value); end
  def failed_transactions(&block); end
  def failed_transactions=(value); end
  def failure_reason(&block); end
  def failure_reason=(value); end
  def id(&block); end
  def id=(value); end
  def intent(&block); end
  def intent=(value); end
  def links(&block); end
  def links=(value); end
  def note_to_payer(&block); end
  def note_to_payer=(value); end
  def payee(&block); end
  def payee=(value); end
  def payer(&block); end
  def payer=(value); end
  def payment_instruction(&block); end
  def payment_instruction=(value); end
  def potential_payer_info(&block); end
  def potential_payer_info=(value); end
  def redirect_urls(&block); end
  def redirect_urls=(value); end
  def self.all(options = nil); end
  def self.find(resource_id); end
  def self.load_members; end
  def state(&block); end
  def state=(value); end
  def token; end
  def transactions(&block); end
  def transactions=(value); end
  def update!(*arg); end
  def update(patch_requests); end
  def update_time(&block); end
  def update_time=(value); end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::PotentialPayerInfo < PayPal::SDK::REST::DataTypes::Base
  def billing_address(&block); end
  def billing_address=(value); end
  def email(&block); end
  def email=(value); end
  def external_remember_me_id(&block); end
  def external_remember_me_id=(value); end
  def self.load_members; end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::ProcessorResponse < PayPal::SDK::REST::DataTypes::Base
  def advice_code(&block); end
  def advice_code=(value); end
  def avs_code(&block); end
  def avs_code=(value); end
  def cvv_code(&block); end
  def cvv_code=(value); end
  def eci_submitted(&block); end
  def eci_submitted=(value); end
  def response_code(&block); end
  def response_code=(value); end
  def self.load_members; end
  def vpas(&block); end
  def vpas=(value); end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::AlternatePayment < PayPal::SDK::REST::DataTypes::Base
  def alternate_payment_account_id(&block); end
  def alternate_payment_account_id=(value); end
  def alternate_payment_provider_id(&block); end
  def alternate_payment_provider_id=(value); end
  def external_customer_id(&block); end
  def external_customer_id=(value); end
  def self.load_members; end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::Billing < PayPal::SDK::REST::DataTypes::Base
  def billing_agreement_id(&block); end
  def billing_agreement_id=(value); end
  def selected_installment_option(&block); end
  def selected_installment_option=(value); end
  def self.load_members; end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::BillingAgreementToken < PayPal::SDK::REST::DataTypes::Base
  def self.load_members; end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::CountryCode < PayPal::SDK::REST::DataTypes::Base
  def country_code(&block); end
  def country_code=(value); end
  def self.load_members; end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::CreditFinancingOffered < PayPal::SDK::REST::DataTypes::Base
  def cart_amount_immutable(&block); end
  def cart_amount_immutable=(value); end
  def monthly_payment(&block); end
  def monthly_payment=(value); end
  def payer_acceptance(&block); end
  def payer_acceptance=(value); end
  def self.load_members; end
  def term(&block); end
  def term=(value); end
  def total_cost(&block); end
  def total_cost=(value); end
  def total_interest(&block); end
  def total_interest=(value); end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::ExternalFunding < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def code(&block); end
  def code=(value); end
  def display_text(&block); end
  def display_text=(value); end
  def funding_account_id(&block); end
  def funding_account_id=(value); end
  def funding_instruction(&block); end
  def funding_instruction=(value); end
  def reference_id(&block); end
  def reference_id=(value); end
  def self.load_members; end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::PrivateLabelCard < PayPal::SDK::REST::DataTypes::Base
  def card_number(&block); end
  def card_number=(value); end
  def id(&block); end
  def id=(value); end
  def image_key(&block); end
  def image_key=(value); end
  def issuer_id(&block); end
  def issuer_id=(value); end
  def issuer_name(&block); end
  def issuer_name=(value); end
  def self.load_members; end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::FuturePayment < PayPal::SDK::REST::DataTypes::Payment
  def create!(*arg); end
  def create(correlation_id = nil); end
  def self.exch_token(auth_code); end
end
class PayPal::SDK::REST::DataTypes::Payer < PayPal::SDK::REST::DataTypes::Base
  def account_age(&block); end
  def account_age=(value); end
  def account_type(&block); end
  def account_type=(value); end
  def billing(&block); end
  def billing=(value); end
  def external_selected_funding_instrument_type(&block); end
  def external_selected_funding_instrument_type=(value); end
  def funding_instruments(&block); end
  def funding_instruments=(value); end
  def funding_option(&block); end
  def funding_option=(value); end
  def funding_option_id(&block); end
  def funding_option_id=(value); end
  def payer_info(&block); end
  def payer_info=(value); end
  def payment_method(&block); end
  def payment_method=(value); end
  def related_funding_option(&block); end
  def related_funding_option=(value); end
  def self.load_members; end
  def status(&block); end
  def status=(value); end
end
class PayPal::SDK::REST::DataTypes::FundingInstrument < PayPal::SDK::REST::DataTypes::Base
  def credit_card(&block); end
  def credit_card=(value); end
  def credit_card_token(&block); end
  def credit_card_token=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::CreditCard < PayPal::SDK::REST::DataTypes::Base
  def billing_address(&block); end
  def billing_address=(value); end
  def create!(*arg); end
  def create; end
  def create_time(&block); end
  def create_time=(value); end
  def cvv2(&block); end
  def cvv2=(value); end
  def delete!(*arg); end
  def delete; end
  def expire_month(&block); end
  def expire_month=(value); end
  def expire_year(&block); end
  def expire_year=(value); end
  def external_customer_id(&block); end
  def external_customer_id=(value); end
  def first_name(&block); end
  def first_name=(value); end
  def id(&block); end
  def id=(value); end
  def last_name(&block); end
  def last_name=(value); end
  def links(&block); end
  def links=(value); end
  def number(&block); end
  def number=(value); end
  def self.find(resource_id); end
  def self.load_members; end
  def state(&block); end
  def state=(value); end
  def type(&block); end
  def type=(value); end
  def update!(*arg); end
  def update(patch_requests); end
  def update_time(&block); end
  def update_time=(value); end
  def valid_until(&block); end
  def valid_until=(value); end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::BaseAddress < PayPal::SDK::REST::DataTypes::Base
  def city(&block); end
  def city=(value); end
  def country_code(&block); end
  def country_code=(value); end
  def line1(&block); end
  def line1=(value); end
  def line2(&block); end
  def line2=(value); end
  def normalization_status(&block); end
  def normalization_status=(value); end
  def postal_code(&block); end
  def postal_code=(value); end
  def self.load_members; end
  def state(&block); end
  def state=(value); end
  def status(&block); end
  def status=(value); end
  def type(&block); end
  def type=(value); end
end
class PayPal::SDK::REST::DataTypes::Address < PayPal::SDK::REST::DataTypes::BaseAddress
  def phone(&block); end
  def phone=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::InvoiceAddress < PayPal::SDK::REST::DataTypes::BaseAddress
  def phone(&block); end
  def phone=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::OneOf < PayPal::SDK::REST::DataTypes::Base
  def phone(&block); end
  def phone=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::CreditCardToken < PayPal::SDK::REST::DataTypes::Base
  def credit_card_id(&block); end
  def credit_card_id=(value); end
  def expire_month(&block); end
  def expire_month=(value); end
  def expire_year(&block); end
  def expire_year=(value); end
  def last4(&block); end
  def last4=(value); end
  def payer_id(&block); end
  def payer_id=(value); end
  def self.load_members; end
  def type(&block); end
  def type=(value); end
end
class PayPal::SDK::REST::DataTypes::PaymentCard < PayPal::SDK::REST::DataTypes::Base
  def billing_address(&block); end
  def billing_address=(value); end
  def billing_country(&block); end
  def billing_country=(value); end
  def card_product_class(&block); end
  def card_product_class=(value); end
  def cvv2(&block); end
  def cvv2=(value); end
  def expire_month(&block); end
  def expire_month=(value); end
  def expire_year(&block); end
  def expire_year=(value); end
  def external_customer_id(&block); end
  def external_customer_id=(value); end
  def first_name(&block); end
  def first_name=(value); end
  def id(&block); end
  def id=(value); end
  def issue_number(&block); end
  def issue_number=(value); end
  def last_name(&block); end
  def last_name=(value); end
  def number(&block); end
  def number=(value); end
  def self.load_members; end
  def start_month(&block); end
  def start_month=(value); end
  def start_year(&block); end
  def start_year=(value); end
  def status(&block); end
  def status=(value); end
  def type(&block); end
  def type=(value); end
  def valid_until(&block); end
  def valid_until=(value); end
end
class PayPal::SDK::REST::DataTypes::BankAccount < PayPal::SDK::REST::DataTypes::Base
  def account_name(&block); end
  def account_name=(value); end
  def account_number(&block); end
  def account_number=(value); end
  def account_number_type(&block); end
  def account_number_type=(value); end
  def account_type(&block); end
  def account_type=(value); end
  def auth_capture_timestamp(&block); end
  def auth_capture_timestamp=(value); end
  def auth_type(&block); end
  def auth_type=(value); end
  def bank_name(&block); end
  def bank_name=(value); end
  def billing_address(&block); end
  def billing_address=(value); end
  def birth_date(&block); end
  def birth_date=(value); end
  def check_type(&block); end
  def check_type=(value); end
  def confirmation_status(&block); end
  def confirmation_status=(value); end
  def country_code(&block); end
  def country_code=(value); end
  def create!(*arg); end
  def create; end
  def create_time(&block); end
  def create_time=(value); end
  def delete!(*arg); end
  def delete; end
  def external_customer_id(&block); end
  def external_customer_id=(value); end
  def first_name(&block); end
  def first_name=(value); end
  def id(&block); end
  def id=(value); end
  def last_name(&block); end
  def last_name=(value); end
  def merchant_id(&block); end
  def merchant_id=(value); end
  def payer_id(&block); end
  def payer_id=(value); end
  def routing_number(&block); end
  def routing_number=(value); end
  def self.find(resource_id); end
  def self.load_members; end
  def state(&block); end
  def state=(value); end
  def update!(*arg); end
  def update(patch_request); end
  def update_time(&block); end
  def update_time=(value); end
  def valid_until(&block); end
  def valid_until=(value); end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::ExtendedBankAccount < PayPal::SDK::REST::DataTypes::BankAccount
  def mandate_reference_number(&block); end
  def mandate_reference_number=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::BankToken < PayPal::SDK::REST::DataTypes::Base
  def bank_id(&block); end
  def bank_id=(value); end
  def external_customer_id(&block); end
  def external_customer_id=(value); end
  def mandate_reference_number(&block); end
  def mandate_reference_number=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::Credit < PayPal::SDK::REST::DataTypes::Base
  def id(&block); end
  def id=(value); end
  def self.load_members; end
  def type(&block); end
  def type=(value); end
end
class PayPal::SDK::REST::DataTypes::Incentive < PayPal::SDK::REST::DataTypes::Base
  def code(&block); end
  def code=(value); end
  def description(&block); end
  def description=(value); end
  def expiry_date(&block); end
  def expiry_date=(value); end
  def id(&block); end
  def id=(value); end
  def logo_image_url(&block); end
  def logo_image_url=(value); end
  def minimum_purchase_amount(&block); end
  def minimum_purchase_amount=(value); end
  def name(&block); end
  def name=(value); end
  def self.load_members; end
  def terms(&block); end
  def terms=(value); end
  def type(&block); end
  def type=(value); end
end
class PayPal::SDK::REST::DataTypes::Currency < PayPal::SDK::REST::DataTypes::Base
  def currency(&block); end
  def currency=(value); end
  def self.load_members; end
  def value(&block); end
  def value=(value); end
end
class PayPal::SDK::REST::DataTypes::CarrierAccountToken < PayPal::SDK::REST::DataTypes::Base
  def carrier_account_id(&block); end
  def carrier_account_id=(value); end
  def external_customer_id(&block); end
  def external_customer_id=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::FundingOption < PayPal::SDK::REST::DataTypes::Base
  def backup_funding_instrument(&block); end
  def backup_funding_instrument=(value); end
  def currency_conversion(&block); end
  def currency_conversion=(value); end
  def funding_sources(&block); end
  def funding_sources=(value); end
  def id(&block); end
  def id=(value); end
  def installment_info(&block); end
  def installment_info=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::FundingSource < PayPal::SDK::REST::DataTypes::Base
  def additional_text(&block); end
  def additional_text=(value); end
  def amount(&block); end
  def amount=(value); end
  def extends(&block); end
  def extends=(value); end
  def funding_detail(&block); end
  def funding_detail=(value); end
  def funding_instrument_type(&block); end
  def funding_instrument_type=(value); end
  def funding_mode(&block); end
  def funding_mode=(value); end
  def legal_text(&block); end
  def legal_text=(value); end
  def links(&block); end
  def links=(value); end
  def negative_balance_amount(&block); end
  def negative_balance_amount=(value); end
  def self.load_members; end
  def soft_descriptor(&block); end
  def soft_descriptor=(value); end
  def terms(&block); end
  def terms=(value); end
end
class PayPal::SDK::REST::DataTypes::FundingDetail < PayPal::SDK::REST::DataTypes::Base
  def clearing_time(&block); end
  def clearing_time=(value); end
  def payment_debit_date(&block); end
  def payment_debit_date=(value); end
  def payment_hold_date(&block); end
  def payment_hold_date=(value); end
  def processing_type(&block); end
  def processing_type=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::CurrencyConversion < PayPal::SDK::REST::DataTypes::Base
  def conversion_date(&block); end
  def conversion_date=(value); end
  def conversion_type(&block); end
  def conversion_type=(value); end
  def conversion_type_changeable(&block); end
  def conversion_type_changeable=(value); end
  def from_amount(&block); end
  def from_amount=(value); end
  def from_currency(&block); end
  def from_currency=(value); end
  def self.load_members; end
  def to_amount(&block); end
  def to_amount=(value); end
  def to_currency(&block); end
  def to_currency=(value); end
  def web_url(&block); end
  def web_url=(value); end
end
class PayPal::SDK::REST::DataTypes::InstallmentInfo < PayPal::SDK::REST::DataTypes::Base
  def installment_id(&block); end
  def installment_id=(value); end
  def installment_options(&block); end
  def installment_options=(value); end
  def issuer(&block); end
  def issuer=(value); end
  def network(&block); end
  def network=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::InstallmentOption < PayPal::SDK::REST::DataTypes::Base
  def discount_amount(&block); end
  def discount_amount=(value); end
  def discount_percentage(&block); end
  def discount_percentage=(value); end
  def monthly_payment(&block); end
  def monthly_payment=(value); end
  def self.load_members; end
  def term(&block); end
  def term=(value); end
end
class PayPal::SDK::REST::DataTypes::Percentage < PayPal::SDK::REST::DataTypes::Base
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::PayerInfo < PayPal::SDK::REST::DataTypes::Base
  def billing_address(&block); end
  def billing_address=(value); end
  def birth_date(&block); end
  def birth_date=(value); end
  def buyer_account_number(&block); end
  def buyer_account_number=(value); end
  def country_code(&block); end
  def country_code=(value); end
  def email(&block); end
  def email=(value); end
  def external_remember_me_id(&block); end
  def external_remember_me_id=(value); end
  def first_name(&block); end
  def first_name=(value); end
  def last_name(&block); end
  def last_name=(value); end
  def middle_name(&block); end
  def middle_name=(value); end
  def payer_id(&block); end
  def payer_id=(value); end
  def phone(&block); end
  def phone=(value); end
  def phone_type(&block); end
  def phone_type=(value); end
  def salutation(&block); end
  def salutation=(value); end
  def self.load_members; end
  def shipping_address(&block); end
  def shipping_address=(value); end
  def suffix(&block); end
  def suffix=(value); end
  def tax_id(&block); end
  def tax_id=(value); end
  def tax_id_type(&block); end
  def tax_id_type=(value); end
end
class PayPal::SDK::REST::DataTypes::ShippingAddress < PayPal::SDK::REST::DataTypes::Base
  def city(&block); end
  def city=(value); end
  def country_code(&block); end
  def country_code=(value); end
  def id(&block); end
  def id=(value); end
  def line1(&block); end
  def line1=(value); end
  def line2(&block); end
  def line2=(value); end
  def normalization_status(&block); end
  def normalization_status=(value); end
  def phone(&block); end
  def phone=(value); end
  def postal_code(&block); end
  def postal_code=(value); end
  def recipient_name(&block); end
  def recipient_name=(value); end
  def self.load_members; end
  def state(&block); end
  def state=(value); end
end
class PayPal::SDK::REST::DataTypes::AllOf < PayPal::SDK::REST::DataTypes::Base
  def related_resources(&block); end
  def related_resources=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::Transaction < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def custom(&block); end
  def custom=(value); end
  def description(&block); end
  def description=(value); end
  def invoice_number(&block); end
  def invoice_number=(value); end
  def item_list(&block); end
  def item_list=(value); end
  def notify_url(&block); end
  def notify_url=(value); end
  def payee(&block); end
  def payee=(value); end
  def payment_options(&block); end
  def payment_options=(value); end
  def purchase_unit_reference_id(&block); end
  def purchase_unit_reference_id=(value); end
  def related_resources(&block); end
  def related_resources=(value); end
  def self.load_members; end
  def soft_descriptor(&block); end
  def soft_descriptor=(value); end
  def transactions(&block); end
  def transactions=(value); end
end
class PayPal::SDK::REST::DataTypes::CartBase < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def custom(&block); end
  def custom=(value); end
  def description(&block); end
  def description=(value); end
  def invoice_number(&block); end
  def invoice_number=(value); end
  def item_list(&block); end
  def item_list=(value); end
  def note_to_payee(&block); end
  def note_to_payee=(value); end
  def notify_url(&block); end
  def notify_url=(value); end
  def order_url(&block); end
  def order_url=(value); end
  def payee(&block); end
  def payee=(value); end
  def payment_options(&block); end
  def payment_options=(value); end
  def reference_id(&block); end
  def reference_id=(value); end
  def self.load_members; end
  def soft_descriptor(&block); end
  def soft_descriptor=(value); end
end
class PayPal::SDK::REST::DataTypes::Amount < PayPal::SDK::REST::DataTypes::Base
  def currency(&block); end
  def currency=(value); end
  def details(&block); end
  def details=(value); end
  def self.load_members; end
  def total(&block); end
  def total=(value); end
end
class PayPal::SDK::REST::DataTypes::Details < PayPal::SDK::REST::DataTypes::Base
  def fee(&block); end
  def fee=(value); end
  def gift_wrap(&block); end
  def gift_wrap=(value); end
  def handling_fee(&block); end
  def handling_fee=(value); end
  def insurance(&block); end
  def insurance=(value); end
  def self.load_members; end
  def shipping(&block); end
  def shipping=(value); end
  def shipping_discount(&block); end
  def shipping_discount=(value); end
  def subtotal(&block); end
  def subtotal=(value); end
  def tax(&block); end
  def tax=(value); end
end
class PayPal::SDK::REST::DataTypes::Payee < PayPal::SDK::REST::DataTypes::Base
  def email(&block); end
  def email=(value); end
  def merchant_id(&block); end
  def merchant_id=(value); end
  def phone(&block); end
  def phone=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::Phone < PayPal::SDK::REST::DataTypes::Base
  def country_code(&block); end
  def country_code=(value); end
  def extension(&block); end
  def extension=(value); end
  def national_number(&block); end
  def national_number=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::PaymentOptions < PayPal::SDK::REST::DataTypes::Base
  def allowed_payment_method(&block); end
  def allowed_payment_method=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::Item < PayPal::SDK::REST::DataTypes::Base
  def category(&block); end
  def category=(value); end
  def currency(&block); end
  def currency=(value); end
  def description(&block); end
  def description=(value); end
  def height(&block); end
  def height=(value); end
  def length(&block); end
  def length=(value); end
  def name(&block); end
  def name=(value); end
  def postback_data(&block); end
  def postback_data=(value); end
  def price(&block); end
  def price=(value); end
  def quantity(&block); end
  def quantity=(value); end
  def self.load_members; end
  def sku(&block); end
  def sku=(value); end
  def supplementary_data(&block); end
  def supplementary_data=(value); end
  def tax(&block); end
  def tax=(value); end
  def url(&block); end
  def url=(value); end
  def weight(&block); end
  def weight=(value); end
  def width(&block); end
  def width=(value); end
end
class PayPal::SDK::REST::DataTypes::Measurement < PayPal::SDK::REST::DataTypes::Base
  def self.load_members; end
  def unit(&block); end
  def unit=(value); end
  def value(&block); end
  def value=(value); end
end
class PayPal::SDK::REST::DataTypes::NameValuePair < PayPal::SDK::REST::DataTypes::Base
  def name(&block); end
  def name=(value); end
  def self.load_members; end
  def value(&block); end
  def value=(value); end
end
class PayPal::SDK::REST::DataTypes::ItemList < PayPal::SDK::REST::DataTypes::Base
  def items(&block); end
  def items=(value); end
  def self.load_members; end
  def shipping_address(&block); end
  def shipping_address=(value); end
  def shipping_method(&block); end
  def shipping_method=(value); end
  def shipping_phone_number(&block); end
  def shipping_phone_number=(value); end
end
class PayPal::SDK::REST::DataTypes::RelatedResources < PayPal::SDK::REST::DataTypes::Base
  def authorization(&block); end
  def authorization=(value); end
  def capture(&block); end
  def capture=(value); end
  def order(&block); end
  def order=(value); end
  def refund(&block); end
  def refund=(value); end
  def sale(&block); end
  def sale=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::Sale < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def billing_agreement_id(&block); end
  def billing_agreement_id=(value); end
  def clearing_time(&block); end
  def clearing_time=(value); end
  def create_time(&block); end
  def create_time=(value); end
  def exchange_rate(&block); end
  def exchange_rate=(value); end
  def fmf_details(&block); end
  def fmf_details=(value); end
  def hold_reason(&block); end
  def hold_reason=(value); end
  def id(&block); end
  def id=(value); end
  def links(&block); end
  def links=(value); end
  def parent_payment(&block); end
  def parent_payment=(value); end
  def payment_hold_reasons(&block); end
  def payment_hold_reasons=(value); end
  def payment_hold_status(&block); end
  def payment_hold_status=(value); end
  def payment_mode(&block); end
  def payment_mode=(value); end
  def processor_response(&block); end
  def processor_response=(value); end
  def protection_eligibility(&block); end
  def protection_eligibility=(value); end
  def protection_eligibility_type(&block); end
  def protection_eligibility_type=(value); end
  def purchase_unit_reference_id(&block); end
  def purchase_unit_reference_id=(value); end
  def reason_code(&block); end
  def reason_code=(value); end
  def receipt_id(&block); end
  def receipt_id=(value); end
  def receivable_amount(&block); end
  def receivable_amount=(value); end
  def recipient_fund_status(&block); end
  def recipient_fund_status=(value); end
  def refund(refund); end
  def refund_request(refund_request); end
  def self.find(resource_id); end
  def self.load_members; end
  def state(&block); end
  def state=(value); end
  def transaction_fee(&block); end
  def transaction_fee=(value); end
  def update_time(&block); end
  def update_time=(value); end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::AnyOf < PayPal::SDK::REST::DataTypes::Base
  def refund(&block); end
  def refund=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::Authorization < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def capture!(*arg); end
  def capture(capture); end
  def create_time(&block); end
  def create_time=(value); end
  def fmf_details(&block); end
  def fmf_details=(value); end
  def id(&block); end
  def id=(value); end
  def links(&block); end
  def links=(value); end
  def parent_payment(&block); end
  def parent_payment=(value); end
  def payment_mode(&block); end
  def payment_mode=(value); end
  def protection_eligibility(&block); end
  def protection_eligibility=(value); end
  def protection_eligibility_type(&block); end
  def protection_eligibility_type=(value); end
  def reason_code(&block); end
  def reason_code=(value); end
  def reauthorize!(*arg); end
  def reauthorize; end
  def receipt_id(&block); end
  def receipt_id=(value); end
  def reference_id(&block); end
  def reference_id=(value); end
  def self.find(resource_id); end
  def self.load_members; end
  def state(&block); end
  def state=(value); end
  def update_time(&block); end
  def update_time=(value); end
  def valid_until(&block); end
  def valid_until=(value); end
  def void!(*arg); end
  def void; end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::Order < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def authorize!(*arg); end
  def authorize; end
  def capture!(*arg); end
  def capture(capture); end
  def create_time(&block); end
  def create_time=(value); end
  def fmf_details(&block); end
  def fmf_details=(value); end
  def id(&block); end
  def id=(value); end
  def links(&block); end
  def links=(value); end
  def parent_payment(&block); end
  def parent_payment=(value); end
  def payment_mode(&block); end
  def payment_mode=(value); end
  def pending_reason(&block); end
  def pending_reason=(value); end
  def protection_eligibility(&block); end
  def protection_eligibility=(value); end
  def protection_eligibility_type(&block); end
  def protection_eligibility_type=(value); end
  def purchase_unit_reference_id(&block); end
  def purchase_unit_reference_id=(value); end
  def reason_code(&block); end
  def reason_code=(value); end
  def reference_id(&block); end
  def reference_id=(value); end
  def self.find(resource_id); end
  def self.load_members; end
  def state(&block); end
  def state=(value); end
  def update_time(&block); end
  def update_time=(value); end
  def void!(*arg); end
  def void; end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::Capture < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def create_time(&block); end
  def create_time=(value); end
  def id(&block); end
  def id=(value); end
  def invoice_number(&block); end
  def invoice_number=(value); end
  def is_final_capture(&block); end
  def is_final_capture=(value); end
  def links(&block); end
  def links=(value); end
  def parent_payment(&block); end
  def parent_payment=(value); end
  def reason_code(&block); end
  def reason_code=(value); end
  def refund(refund); end
  def refund_request(refund_request); end
  def self.find(resource_id); end
  def self.load_members; end
  def state(&block); end
  def state=(value); end
  def transaction_fee(&block); end
  def transaction_fee=(value); end
  def update_time(&block); end
  def update_time=(value); end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::Refund < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def capture_id(&block); end
  def capture_id=(value); end
  def create_time(&block); end
  def create_time=(value); end
  def description(&block); end
  def description=(value); end
  def id(&block); end
  def id=(value); end
  def invoice_number(&block); end
  def invoice_number=(value); end
  def links(&block); end
  def links=(value); end
  def parent_payment(&block); end
  def parent_payment=(value); end
  def reason(&block); end
  def reason=(value); end
  def reason_code(&block); end
  def reason_code=(value); end
  def sale_id(&block); end
  def sale_id=(value); end
  def self.find(resource_id); end
  def self.load_members; end
  def state(&block); end
  def state=(value); end
  def update_time(&block); end
  def update_time=(value); end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::RefundRequest < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def description(&block); end
  def description=(value); end
  def invoice_number(&block); end
  def invoice_number=(value); end
  def is_non_platform_transaction(&block); end
  def is_non_platform_transaction=(value); end
  def reason(&block); end
  def reason=(value); end
  def refund_advice(&block); end
  def refund_advice=(value); end
  def refund_source(&block); end
  def refund_source=(value); end
  def refund_type(&block); end
  def refund_type=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::DetailedRefund < PayPal::SDK::REST::DataTypes::Refund
  def custom(&block); end
  def custom=(value); end
  def refund_from_received_amount(&block); end
  def refund_from_received_amount=(value); end
  def refund_from_transaction_fee(&block); end
  def refund_from_transaction_fee=(value); end
  def refund_to_external_funding(&block); end
  def refund_to_external_funding=(value); end
  def refund_to_payer(&block); end
  def refund_to_payer=(value); end
  def self.load_members; end
  def total_refunded_amount(&block); end
  def total_refunded_amount=(value); end
end
class PayPal::SDK::REST::DataTypes::Error < PayPal::SDK::REST::DataTypes::Base
  def code(&block); end
  def code=(value); end
  def debug_id(&block); end
  def debug_id=(value); end
  def details(&block); end
  def details=(value); end
  def information_link(&block); end
  def information_link=(value); end
  def links(&block); end
  def links=(value); end
  def message(&block); end
  def message=(value); end
  def name(&block); end
  def name=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::ErrorDetails < PayPal::SDK::REST::DataTypes::Base
  def code(&block); end
  def code=(value); end
  def field(&block); end
  def field=(value); end
  def issue(&block); end
  def issue=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::FmfDetails < PayPal::SDK::REST::DataTypes::Base
  def description(&block); end
  def description=(value); end
  def filter_id(&block); end
  def filter_id=(value); end
  def filter_type(&block); end
  def filter_type=(value); end
  def name(&block); end
  def name=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::PaymentInstruction < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def instruction_type(&block); end
  def instruction_type=(value); end
  def links(&block); end
  def links=(value); end
  def note(&block); end
  def note=(value); end
  def payment_due_date(&block); end
  def payment_due_date=(value); end
  def recipient_banking_instruction(&block); end
  def recipient_banking_instruction=(value); end
  def reference_number(&block); end
  def reference_number=(value); end
  def self.find(resource_id); end
  def self.load_members; end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::RecipientBankingInstruction < PayPal::SDK::REST::DataTypes::Base
  def account_holder_name(&block); end
  def account_holder_name=(value); end
  def account_number(&block); end
  def account_number=(value); end
  def bank_identifier_code(&block); end
  def bank_identifier_code=(value); end
  def bank_name(&block); end
  def bank_name=(value); end
  def international_bank_account_number(&block); end
  def international_bank_account_number=(value); end
  def routing_number(&block); end
  def routing_number=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::RedirectUrls < PayPal::SDK::REST::DataTypes::Base
  def cancel_url(&block); end
  def cancel_url=(value); end
  def return_url(&block); end
  def return_url=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::Patch < PayPal::SDK::REST::DataTypes::Base
  def from(&block); end
  def from=(value); end
  def op(&block); end
  def op=(value); end
  def path(&block); end
  def path=(value); end
  def self.load_members; end
  def value(&block); end
  def value=(value); end
end
class PayPal::SDK::REST::DataTypes::PatchRequest < PayPal::SDK::REST::DataTypes::Base
  def from(&block); end
  def from=(value); end
  def op(&block); end
  def op=(value); end
  def path(&block); end
  def path=(value); end
  def self.load_members; end
  def value(&block); end
  def value=(value); end
end
class PayPal::SDK::REST::DataTypes::PaymentExecution < PayPal::SDK::REST::DataTypes::Base
  def carrier_account_id(&block); end
  def carrier_account_id=(value); end
  def payer_id(&block); end
  def payer_id=(value); end
  def self.load_members; end
  def transactions(&block); end
  def transactions=(value); end
end
class PayPal::SDK::REST::DataTypes::PaymentHistory < PayPal::SDK::REST::DataTypes::Base
  def count(&block); end
  def count=(value); end
  def next_id(&block); end
  def next_id=(value); end
  def payments(&block); end
  def payments=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::CreditCardList < PayPal::SDK::REST::DataTypes::Base
  def items(&block); end
  def items=(value); end
  def links(&block); end
  def links=(value); end
  def self.list(options = nil); end
  def self.load_members; end
  def total_items(&block); end
  def total_items=(value); end
  def total_pages(&block); end
  def total_pages=(value); end
end
class PayPal::SDK::REST::DataTypes::BankAccountsList < PayPal::SDK::REST::DataTypes::Base
  def bank_accounts(&block); end
  def bank_accounts=(value); end
  def count(&block); end
  def count=(value); end
  def next_id(&block); end
  def next_id=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::InvoiceAmountWrapper < PayPal::SDK::REST::DataTypes::Base
  def paypal(&block); end
  def paypal=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::Invoice < PayPal::SDK::REST::DataTypes::Base
  def additional_data(&block); end
  def additional_data=(value); end
  def allow_partial_payment(&block); end
  def allow_partial_payment=(value); end
  def attachments(&block); end
  def attachments=(value); end
  def billing_info(&block); end
  def billing_info=(value); end
  def cancel!(*arg); end
  def cancel(cancel_notification); end
  def cc_info(&block); end
  def cc_info=(value); end
  def create!(*arg); end
  def create; end
  def custom(&block); end
  def custom=(value); end
  def delete!(*arg); end
  def delete; end
  def discount(&block); end
  def discount=(value); end
  def gratuity(&block); end
  def gratuity=(value); end
  def id(&block); end
  def id=(value); end
  def invoice_date(&block); end
  def invoice_date=(value); end
  def items(&block); end
  def items=(value); end
  def links(&block); end
  def links=(value); end
  def logo_url(&block); end
  def logo_url=(value); end
  def merchant_info(&block); end
  def merchant_info=(value); end
  def merchant_memo(&block); end
  def merchant_memo=(value); end
  def metadata(&block); end
  def metadata=(value); end
  def minimum_amount_due(&block); end
  def minimum_amount_due=(value); end
  def note(&block); end
  def note=(value); end
  def number(&block); end
  def number=(value); end
  def paid_amount(&block); end
  def paid_amount=(value); end
  def payment_term(&block); end
  def payment_term=(value); end
  def payments(&block); end
  def payments=(value); end
  def record_payment!(*arg); end
  def record_payment(payment_detail); end
  def record_refund!(*arg); end
  def record_refund(refund_detail); end
  def reference(&block); end
  def reference=(value); end
  def refunded_amount(&block); end
  def refunded_amount=(value); end
  def refunds(&block); end
  def refunds=(value); end
  def remind!(*arg); end
  def remind(notification); end
  def self.find(resource_id, access_token = nil); end
  def self.get_all(options = nil, access_token = nil); end
  def self.load_members; end
  def self.qr_code(options = nil); end
  def self.search(options, access_token = nil); end
  def send_invoice!(*arg); end
  def send_invoice; end
  def shipping_cost(&block); end
  def shipping_cost=(value); end
  def shipping_info(&block); end
  def shipping_info=(value); end
  def status(&block); end
  def status=(value); end
  def tax_calculated_after_discount(&block); end
  def tax_calculated_after_discount=(value); end
  def tax_inclusive(&block); end
  def tax_inclusive=(value); end
  def template_id(&block); end
  def template_id=(value); end
  def terms(&block); end
  def terms=(value); end
  def total_amount(&block); end
  def total_amount=(value); end
  def update!(*arg); end
  def update; end
  def uri(&block); end
  def uri=(value); end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::Participant < PayPal::SDK::REST::DataTypes::Base
  def additional_info(&block); end
  def additional_info=(value); end
  def address(&block); end
  def address=(value); end
  def business_name(&block); end
  def business_name=(value); end
  def email(&block); end
  def email=(value); end
  def fax(&block); end
  def fax=(value); end
  def first_name(&block); end
  def first_name=(value); end
  def last_name(&block); end
  def last_name=(value); end
  def phone(&block); end
  def phone=(value); end
  def self.load_members; end
  def website(&block); end
  def website=(value); end
end
class PayPal::SDK::REST::DataTypes::Template < PayPal::SDK::REST::DataTypes::Base
  def create; end
  def custom(&block); end
  def custom=(value); end
  def default(&block); end
  def default=(value); end
  def delete; end
  def links(&block); end
  def links=(value); end
  def name(&block); end
  def name=(value); end
  def self.get(template_id, options = nil); end
  def self.load_members; end
  def settings(&block); end
  def settings=(value); end
  def template_data(&block); end
  def template_data=(value); end
  def template_id(&block); end
  def template_id=(value); end
  def unit_of_measure(&block); end
  def unit_of_measure=(value); end
  def update; end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::TemplateData < PayPal::SDK::REST::DataTypes::Base
  def allow_partial_payment(&block); end
  def allow_partial_payment=(value); end
  def attachments(&block); end
  def attachments=(value); end
  def billing_info(&block); end
  def billing_info=(value); end
  def cc_info(&block); end
  def cc_info=(value); end
  def custom(&block); end
  def custom=(value); end
  def discount(&block); end
  def discount=(value); end
  def items(&block); end
  def items=(value); end
  def logo_url(&block); end
  def logo_url=(value); end
  def merchant_info(&block); end
  def merchant_info=(value); end
  def merchant_memo(&block); end
  def merchant_memo=(value); end
  def minimum_amount_due(&block); end
  def minimum_amount_due=(value); end
  def note(&block); end
  def note=(value); end
  def payment_term(&block); end
  def payment_term=(value); end
  def reference(&block); end
  def reference=(value); end
  def self.load_members; end
  def shipping_cost(&block); end
  def shipping_cost=(value); end
  def shipping_info(&block); end
  def shipping_info=(value); end
  def tax_calculated_after_discount(&block); end
  def tax_calculated_after_discount=(value); end
  def tax_inclusive(&block); end
  def tax_inclusive=(value); end
  def terms(&block); end
  def terms=(value); end
  def total_amount(&block); end
  def total_amount=(value); end
end
class PayPal::SDK::REST::DataTypes::TemplateSettings < PayPal::SDK::REST::DataTypes::Base
  def display_preference(&block); end
  def display_preference=(value); end
  def field_name(&block); end
  def field_name=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::TemplateSettingsMetadata < PayPal::SDK::REST::DataTypes::Base
  def hidden(&block); end
  def hidden=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::PaymentSummary < PayPal::SDK::REST::DataTypes::Base
  def other(&block); end
  def other=(value); end
  def paypal(&block); end
  def paypal=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::FileAttachment < PayPal::SDK::REST::DataTypes::Base
  def name(&block); end
  def name=(value); end
  def self.load_members; end
  def url(&block); end
  def url=(value); end
end
class PayPal::SDK::REST::DataTypes::Templates < PayPal::SDK::REST::DataTypes::Base
  def addresses(&block); end
  def addresses=(value); end
  def emails(&block); end
  def emails=(value); end
  def links(&block); end
  def links=(value); end
  def phones(&block); end
  def phones=(value); end
  def self.get_all(options = nil); end
  def self.load_members; end
  def templates(&block); end
  def templates=(value); end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::WebhooksEventType < PayPal::SDK::REST::DataTypes::Base
  def event_types(&block); end
  def event_types=(value); end
  def self.all(options = nil); end
  def self.load_members; end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::EventTypeList < PayPal::SDK::REST::DataTypes::Base
  def event_types(&block); end
  def event_types=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::WebhookList < PayPal::SDK::REST::DataTypes::Base
  def self.load_members; end
  def webhooks(&block); end
  def webhooks=(value); end
end
class PayPal::SDK::REST::DataTypes::EventType < PayPal::SDK::REST::DataTypes::Base
  def description(&block); end
  def description=(value); end
  def name(&block); end
  def name=(value); end
  def self.load_members; end
  def status(&block); end
  def status=(value); end
end
class PayPal::SDK::REST::DataTypes::WebhookEventList < PayPal::SDK::REST::DataTypes::Base
  def count(&block); end
  def count=(value); end
  def events(&block); end
  def events=(value); end
  def links(&block); end
  def links=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::WebhookEvent < PayPal::SDK::REST::DataTypes::Base
  def create_time(&block); end
  def create_time=(value); end
  def event_type(&block); end
  def event_type=(value); end
  def event_version(&block); end
  def event_version=(value); end
  def get_resource; end
  def id(&block); end
  def id=(value); end
  def links(&block); end
  def links=(value); end
  def resend; end
  def resource(&block); end
  def resource=(value); end
  def resource_type(&block); end
  def resource_type=(value); end
  def self.all(options = nil); end
  def self.find(resource_id); end
  def self.get(webhook_event_id); end
  def self.get_cert(cert_url); end
  def self.get_cert_chain; end
  def self.get_expected_sig(transmission_id, timestamp, webhook_id, event_body); end
  def self.get_resource_class(name); end
  def self.load_members; end
  def self.search(page_size, start_time, end_time); end
  def self.verify(transmission_id, timestamp, webhook_id, event_body, cert_url, sig, algo = nil); end
  def self.verify_cert(cert); end
  def self.verify_cert_chain(cert_store, cert); end
  def self.verify_common_name(cert); end
  def self.verify_expiration(cert); end
  def self.verify_signature(transmission_id, timestamp, webhook_id, event_body, cert, actual_sig_encoded, algo); end
  def status(&block); end
  def status=(value); end
  def summary(&block); end
  def summary=(value); end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::Webhook < PayPal::SDK::REST::DataTypes::Base
  def create; end
  def delete!(*arg); end
  def delete; end
  def event_types(&block); end
  def event_types=(value); end
  def id(&block); end
  def id=(value); end
  def links(&block); end
  def links=(value); end
  def self.all(options = nil); end
  def self.get(webhook_id); end
  def self.get_event_types(webhook_id); end
  def self.load_members; end
  def self.simulate_event(webhook_id, url, event_type); end
  def update!(*arg); end
  def update(patch); end
  def url(&block); end
  def url=(value); end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::Payout < PayPal::SDK::REST::DataTypes::Base
  def create(sync_mode = nil); end
  def items(&block); end
  def items=(value); end
  def self.get(payout_batch_id, options = nil); end
  def self.load_members; end
  def sender_batch_header(&block); end
  def sender_batch_header=(value); end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::PayoutItem < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def note(&block); end
  def note=(value); end
  def receiver(&block); end
  def receiver=(value); end
  def recipient_type(&block); end
  def recipient_type=(value); end
  def recipient_wallet(&block); end
  def recipient_wallet=(value); end
  def self.cancel(payout_item_id); end
  def self.get(payout_item_id); end
  def self.load_members; end
  def sender_item_id(&block); end
  def sender_item_id=(value); end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::PayoutItemDetails < PayPal::SDK::REST::DataTypes::Base
  def errors(&block); end
  def errors=(value); end
  def links(&block); end
  def links=(value); end
  def payout_batch_id(&block); end
  def payout_batch_id=(value); end
  def payout_item(&block); end
  def payout_item=(value); end
  def payout_item_fee(&block); end
  def payout_item_fee=(value); end
  def payout_item_id(&block); end
  def payout_item_id=(value); end
  def self.load_members; end
  def sender_batch_id(&block); end
  def sender_batch_id=(value); end
  def time_processed(&block); end
  def time_processed=(value); end
  def transaction_id(&block); end
  def transaction_id=(value); end
  def transaction_status(&block); end
  def transaction_status=(value); end
end
class PayPal::SDK::REST::DataTypes::PayoutBatch < PayPal::SDK::REST::DataTypes::Base
  def batch_header(&block); end
  def batch_header=(value); end
  def items(&block); end
  def items=(value); end
  def links(&block); end
  def links=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::PayoutBatchHeader < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def batch_status(&block); end
  def batch_status=(value); end
  def errors(&block); end
  def errors=(value); end
  def fees(&block); end
  def fees=(value); end
  def payout_batch_id(&block); end
  def payout_batch_id=(value); end
  def self.load_members; end
  def sender_batch_header(&block); end
  def sender_batch_header=(value); end
  def time_completed(&block); end
  def time_completed=(value); end
  def time_created(&block); end
  def time_created=(value); end
end
class PayPal::SDK::REST::DataTypes::PayoutSenderBatchHeader < PayPal::SDK::REST::DataTypes::Base
  def email_subject(&block); end
  def email_subject=(value); end
  def recipient_type(&block); end
  def recipient_type=(value); end
  def self.load_members; end
  def sender_batch_id(&block); end
  def sender_batch_id=(value); end
end
class PayPal::SDK::REST::DataTypes::Invoices < PayPal::SDK::REST::DataTypes::Base
  def invoices(&block); end
  def invoices=(value); end
  def self.load_members; end
  def total_count(&block); end
  def total_count=(value); end
end
class PayPal::SDK::REST::DataTypes::InvoiceItem < PayPal::SDK::REST::DataTypes::Base
  def date(&block); end
  def date=(value); end
  def description(&block); end
  def description=(value); end
  def discount(&block); end
  def discount=(value); end
  def image_url(&block); end
  def image_url=(value); end
  def name(&block); end
  def name=(value); end
  def quantity(&block); end
  def quantity=(value); end
  def self.load_members; end
  def tax(&block); end
  def tax=(value); end
  def unit_of_measure(&block); end
  def unit_of_measure=(value); end
  def unit_price(&block); end
  def unit_price=(value); end
end
class PayPal::SDK::REST::DataTypes::MerchantInfo < PayPal::SDK::REST::DataTypes::Base
  def additional_info(&block); end
  def additional_info=(value); end
  def additional_info_label(&block); end
  def additional_info_label=(value); end
  def address(&block); end
  def address=(value); end
  def business_name(&block); end
  def business_name=(value); end
  def email(&block); end
  def email=(value); end
  def fax(&block); end
  def fax=(value); end
  def first_name(&block); end
  def first_name=(value); end
  def last_name(&block); end
  def last_name=(value); end
  def phone(&block); end
  def phone=(value); end
  def self.load_members; end
  def tax_id(&block); end
  def tax_id=(value); end
  def website(&block); end
  def website=(value); end
end
class PayPal::SDK::REST::DataTypes::BillingInfo < PayPal::SDK::REST::DataTypes::Base
  def additional_info(&block); end
  def additional_info=(value); end
  def address(&block); end
  def address=(value); end
  def business_name(&block); end
  def business_name=(value); end
  def email(&block); end
  def email=(value); end
  def first_name(&block); end
  def first_name=(value); end
  def invoice_address(&block); end
  def invoice_address=(value); end
  def language(&block); end
  def language=(value); end
  def last_name(&block); end
  def last_name=(value); end
  def notification_channel(&block); end
  def notification_channel=(value); end
  def phone(&block); end
  def phone=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::ShippingInfo < PayPal::SDK::REST::DataTypes::Base
  def address(&block); end
  def address=(value); end
  def business_name(&block); end
  def business_name=(value); end
  def email(&block); end
  def email=(value); end
  def first_name(&block); end
  def first_name=(value); end
  def invoice_address(&block); end
  def invoice_address=(value); end
  def last_name(&block); end
  def last_name=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::InvoicingNotification < PayPal::SDK::REST::DataTypes::Base
  def cc_emails(&block); end
  def cc_emails=(value); end
  def note(&block); end
  def note=(value); end
  def self.load_members; end
  def send_to_merchant(&block); end
  def send_to_merchant=(value); end
  def subject(&block); end
  def subject=(value); end
end
class PayPal::SDK::REST::DataTypes::InvoicingMetaData < PayPal::SDK::REST::DataTypes::Base
  def cancelled_by(&block); end
  def cancelled_by=(value); end
  def cancelled_date(&block); end
  def cancelled_date=(value); end
  def created_by(&block); end
  def created_by=(value); end
  def created_date(&block); end
  def created_date=(value); end
  def first_sent_date(&block); end
  def first_sent_date=(value); end
  def last_sent_by(&block); end
  def last_sent_by=(value); end
  def last_sent_date(&block); end
  def last_sent_date=(value); end
  def last_updated_by(&block); end
  def last_updated_by=(value); end
  def last_updated_date(&block); end
  def last_updated_date=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::InvoicingPaymentDetail < PayPal::SDK::REST::DataTypes::Base
  def date(&block); end
  def date=(value); end
  def method(&block); end
  def method=(value); end
  def note(&block); end
  def note=(value); end
  def self.load_members; end
  def transaction_id(&block); end
  def transaction_id=(value); end
  def transaction_type(&block); end
  def transaction_type=(value); end
  def type(&block); end
  def type=(value); end
end
class PayPal::SDK::REST::DataTypes::InvoicingRefundDetail < PayPal::SDK::REST::DataTypes::Base
  def date(&block); end
  def date=(value); end
  def note(&block); end
  def note=(value); end
  def self.load_members; end
  def type(&block); end
  def type=(value); end
end
class PayPal::SDK::REST::DataTypes::InvoicingSearch < PayPal::SDK::REST::DataTypes::Base
  def archived(&block); end
  def archived=(value); end
  def email(&block); end
  def email=(value); end
  def end_creation_date(&block); end
  def end_creation_date=(value); end
  def end_due_date(&block); end
  def end_due_date=(value); end
  def end_invoice_date(&block); end
  def end_invoice_date=(value); end
  def end_payment_date(&block); end
  def end_payment_date=(value); end
  def lower_total_amount(&block); end
  def lower_total_amount=(value); end
  def number(&block); end
  def number=(value); end
  def page(&block); end
  def page=(value); end
  def page_size(&block); end
  def page_size=(value); end
  def recipient_business_name(&block); end
  def recipient_business_name=(value); end
  def recipient_first_name(&block); end
  def recipient_first_name=(value); end
  def recipient_last_name(&block); end
  def recipient_last_name=(value); end
  def self.load_members; end
  def start_creation_date(&block); end
  def start_creation_date=(value); end
  def start_due_date(&block); end
  def start_due_date=(value); end
  def start_invoice_date(&block); end
  def start_invoice_date=(value); end
  def start_payment_date(&block); end
  def start_payment_date=(value); end
  def status(&block); end
  def status=(value); end
  def total_count_required(&block); end
  def total_count_required=(value); end
  def upper_total_amount(&block); end
  def upper_total_amount=(value); end
end
class PayPal::SDK::REST::DataTypes::PaymentTerm < PayPal::SDK::REST::DataTypes::Base
  def due_date(&block); end
  def due_date=(value); end
  def self.load_members; end
  def term_type(&block); end
  def term_type=(value); end
end
class PayPal::SDK::REST::DataTypes::Cost < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def percent(&block); end
  def percent=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::ShippingCost < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def self.load_members; end
  def tax(&block); end
  def tax=(value); end
end
class PayPal::SDK::REST::DataTypes::Tax < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def id(&block); end
  def id=(value); end
  def name(&block); end
  def name=(value); end
  def percent(&block); end
  def percent=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::CustomAmount < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def label(&block); end
  def label=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::PaymentDetail < PayPal::SDK::REST::DataTypes::Base
  def date(&block); end
  def date=(value); end
  def method(&block); end
  def method=(value); end
  def note(&block); end
  def note=(value); end
  def self.load_members; end
  def transaction_id(&block); end
  def transaction_id=(value); end
  def transaction_type(&block); end
  def transaction_type=(value); end
  def type(&block); end
  def type=(value); end
end
class PayPal::SDK::REST::DataTypes::RefundDetail < PayPal::SDK::REST::DataTypes::Base
  def date(&block); end
  def date=(value); end
  def note(&block); end
  def note=(value); end
  def self.load_members; end
  def type(&block); end
  def type=(value); end
end
class PayPal::SDK::REST::DataTypes::Metadata < PayPal::SDK::REST::DataTypes::Base
  def cancelled_by(&block); end
  def cancelled_by=(value); end
  def cancelled_date(&block); end
  def cancelled_date=(value); end
  def created_by(&block); end
  def created_by=(value); end
  def created_date(&block); end
  def created_date=(value); end
  def first_sent_date(&block); end
  def first_sent_date=(value); end
  def last_sent_by(&block); end
  def last_sent_by=(value); end
  def last_sent_date(&block); end
  def last_sent_date=(value); end
  def last_updated_by(&block); end
  def last_updated_by=(value); end
  def last_updated_date(&block); end
  def last_updated_date=(value); end
  def payer_view_url(&block); end
  def payer_view_url=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::Notification < PayPal::SDK::REST::DataTypes::Base
  def note(&block); end
  def note=(value); end
  def self.load_members; end
  def send_to_merchant(&block); end
  def send_to_merchant=(value); end
  def subject(&block); end
  def subject=(value); end
end
class PayPal::SDK::REST::DataTypes::Search < PayPal::SDK::REST::DataTypes::Base
  def email(&block); end
  def email=(value); end
  def end_creation_date(&block); end
  def end_creation_date=(value); end
  def end_due_date(&block); end
  def end_due_date=(value); end
  def end_invoice_date(&block); end
  def end_invoice_date=(value); end
  def end_payment_date(&block); end
  def end_payment_date=(value); end
  def lower_total_amount(&block); end
  def lower_total_amount=(value); end
  def number(&block); end
  def number=(value); end
  def page(&block); end
  def page=(value); end
  def page_size(&block); end
  def page_size=(value); end
  def recipient_business_name(&block); end
  def recipient_business_name=(value); end
  def recipient_first_name(&block); end
  def recipient_first_name=(value); end
  def recipient_last_name(&block); end
  def recipient_last_name=(value); end
  def self.load_members; end
  def start_creation_date(&block); end
  def start_creation_date=(value); end
  def start_due_date(&block); end
  def start_due_date=(value); end
  def start_invoice_date(&block); end
  def start_invoice_date=(value); end
  def start_payment_date(&block); end
  def start_payment_date=(value); end
  def status(&block); end
  def status=(value); end
  def total_count_required(&block); end
  def total_count_required=(value); end
  def upper_total_amount(&block); end
  def upper_total_amount=(value); end
end
class PayPal::SDK::REST::DataTypes::CancelNotification < PayPal::SDK::REST::DataTypes::Base
  def note(&block); end
  def note=(value); end
  def self.load_members; end
  def send_to_merchant(&block); end
  def send_to_merchant=(value); end
  def send_to_payer(&block); end
  def send_to_payer=(value); end
  def subject(&block); end
  def subject=(value); end
end
class PayPal::SDK::REST::DataTypes::Plan < PayPal::SDK::REST::DataTypes::Base
  def create!(*arg); end
  def create; end
  def create_time(&block); end
  def create_time=(value); end
  def description(&block); end
  def description=(value); end
  def id(&block); end
  def id=(value); end
  def links(&block); end
  def links=(value); end
  def merchant_preferences(&block); end
  def merchant_preferences=(value); end
  def name(&block); end
  def name=(value); end
  def payment_definitions(&block); end
  def payment_definitions=(value); end
  def self.all(options = nil); end
  def self.find(resource_id); end
  def self.load_members; end
  def state(&block); end
  def state=(value); end
  def terms(&block); end
  def terms=(value); end
  def type(&block); end
  def type=(value); end
  def update!(*arg); end
  def update(patch); end
  def update_time(&block); end
  def update_time=(value); end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::PaymentDefinition < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def charge_models(&block); end
  def charge_models=(value); end
  def cycles(&block); end
  def cycles=(value); end
  def frequency(&block); end
  def frequency=(value); end
  def frequency_interval(&block); end
  def frequency_interval=(value); end
  def id(&block); end
  def id=(value); end
  def name(&block); end
  def name=(value); end
  def self.load_members; end
  def type(&block); end
  def type=(value); end
end
class PayPal::SDK::REST::DataTypes::ChargeModels < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def id(&block); end
  def id=(value); end
  def self.load_members; end
  def type(&block); end
  def type=(value); end
end
class PayPal::SDK::REST::DataTypes::Terms < PayPal::SDK::REST::DataTypes::Base
  def amount_range(&block); end
  def amount_range=(value); end
  def buyer_editable(&block); end
  def buyer_editable=(value); end
  def id(&block); end
  def id=(value); end
  def max_billing_amount(&block); end
  def max_billing_amount=(value); end
  def occurrences(&block); end
  def occurrences=(value); end
  def self.load_members; end
  def type(&block); end
  def type=(value); end
end
class PayPal::SDK::REST::DataTypes::MerchantPreferences < PayPal::SDK::REST::DataTypes::Base
  def accepted_payment_type(&block); end
  def accepted_payment_type=(value); end
  def auto_bill_amount(&block); end
  def auto_bill_amount=(value); end
  def cancel_url(&block); end
  def cancel_url=(value); end
  def char_set(&block); end
  def char_set=(value); end
  def id(&block); end
  def id=(value); end
  def initial_fail_amount_action(&block); end
  def initial_fail_amount_action=(value); end
  def max_fail_attempts(&block); end
  def max_fail_attempts=(value); end
  def notify_url(&block); end
  def notify_url=(value); end
  def return_url(&block); end
  def return_url=(value); end
  def self.load_members; end
  def setup_fee(&block); end
  def setup_fee=(value); end
end
class PayPal::SDK::REST::DataTypes::Links < PayPal::SDK::REST::DataTypes::Base
  def encType(&block); end
  def encType=(value); end
  def enc_type(&block); end
  def enc_type=(value); end
  def href(&block); end
  def href=(value); end
  def method(&block); end
  def method=(value); end
  def rel(&block); end
  def rel=(value); end
  def schema(&block); end
  def schema=(value); end
  def self.load_members; end
  def targetSchema(&block); end
  def targetSchema=(value); end
  def target_schema(&block); end
  def target_schema=(value); end
end
class PayPal::SDK::REST::DataTypes::Schema < PayPal::SDK::REST::DataTypes::Base
  def additionalItems(&block); end
  def additionalItems=(value); end
  def additionalProperties(&block); end
  def additionalProperties=(value); end
  def additional_items(&block); end
  def additional_items=(value); end
  def additional_properties(&block); end
  def additional_properties=(value); end
  def dependencies(&block); end
  def dependencies=(value); end
  def description(&block); end
  def description=(value); end
  def disallow(&block); end
  def disallow=(value); end
  def divisibleBy(&block); end
  def divisibleBy=(value); end
  def divisible_by(&block); end
  def divisible_by=(value); end
  def enum(&block); end
  def enum=(value); end
  def exclusiveMaximum(&block); end
  def exclusiveMaximum=(value); end
  def exclusiveMinimum(&block); end
  def exclusiveMinimum=(value); end
  def exclusive_maximum(&block); end
  def exclusive_maximum=(value); end
  def exclusive_minimum(&block); end
  def exclusive_minimum=(value); end
  def extends(&block); end
  def extends=(value); end
  def format(&block); end
  def format=(value); end
  def id(&block); end
  def id=(value); end
  def items(&block); end
  def items=(value); end
  def maxItems(&block); end
  def maxItems=(value); end
  def maxLength(&block); end
  def maxLength=(value); end
  def max_items(&block); end
  def max_items=(value); end
  def max_length(&block); end
  def max_length=(value); end
  def maximum(&block); end
  def maximum=(value); end
  def minItems(&block); end
  def minItems=(value); end
  def minLength(&block); end
  def minLength=(value); end
  def min_items(&block); end
  def min_items=(value); end
  def min_length(&block); end
  def min_length=(value); end
  def minimum(&block); end
  def minimum=(value); end
  def pattern(&block); end
  def pattern=(value); end
  def patternProperties(&block); end
  def patternProperties=(value); end
  def pattern_properties(&block); end
  def pattern_properties=(value); end
  def properties(&block); end
  def properties=(value); end
  def required(&block); end
  def required=(value); end
  def self.load_members; end
  def title(&block); end
  def title=(value); end
  def type(&block); end
  def type=(value); end
  def uniqueItems(&block); end
  def uniqueItems=(value); end
  def unique_items(&block); end
  def unique_items=(value); end
end
class PayPal::SDK::REST::DataTypes::HyperSchema < PayPal::SDK::REST::DataTypes::Schema
  def contentEncoding(&block); end
  def contentEncoding=(value); end
  def content_encoding(&block); end
  def content_encoding=(value); end
  def fragmentResolution(&block); end
  def fragmentResolution=(value); end
  def fragment_resolution(&block); end
  def fragment_resolution=(value); end
  def links(&block); end
  def links=(value); end
  def mediaType(&block); end
  def mediaType=(value); end
  def media_type(&block); end
  def media_type=(value); end
  def pathStart(&block); end
  def pathStart=(value); end
  def path_start(&block); end
  def path_start=(value); end
  def readonly(&block); end
  def readonly=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::PlanList < PayPal::SDK::REST::DataTypes::Base
  def links(&block); end
  def links=(value); end
  def plans(&block); end
  def plans=(value); end
  def self.load_members; end
  def total_items(&block); end
  def total_items=(value); end
  def total_pages(&block); end
  def total_pages=(value); end
end
class PayPal::SDK::REST::DataTypes::Agreement < PayPal::SDK::REST::DataTypes::Base
  def agreement_details(&block); end
  def agreement_details=(value); end
  def bill_balance!(*arg); end
  def bill_balance(agreement_state_descriptor); end
  def cancel!(*arg); end
  def cancel(agreement_state_descriptor); end
  def create!(*arg); end
  def create; end
  def create_time(&block); end
  def create_time=(value); end
  def description(&block); end
  def description=(value); end
  def execute!(*arg); end
  def execute; end
  def get_token(links); end
  def id(&block); end
  def id=(value); end
  def links(&block); end
  def links=(value); end
  def name(&block); end
  def name=(value); end
  def override_charge_models(&block); end
  def override_charge_models=(value); end
  def override_merchant_preferences(&block); end
  def override_merchant_preferences=(value); end
  def payer(&block); end
  def payer=(value); end
  def plan(&block); end
  def plan=(value); end
  def re_activate!(*arg); end
  def re_activate(agreement_state_descriptor); end
  def self.find(resource_id); end
  def self.load_members; end
  def self.transactions(agreement_id, start_date, end_date, options = nil); end
  def set_balance!(*arg); end
  def set_balance(currency); end
  def shipping_address(&block); end
  def shipping_address=(value); end
  def start_date(&block); end
  def start_date=(value); end
  def state(&block); end
  def state=(value); end
  def suspend!(*arg); end
  def suspend(agreement_state_descriptor); end
  def token(&block); end
  def token=(value); end
  def update!(*arg); end
  def update(patch); end
  def update_time(&block); end
  def update_time=(value); end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::AgreementDetails < PayPal::SDK::REST::DataTypes::Base
  def cycles_completed(&block); end
  def cycles_completed=(value); end
  def cycles_remaining(&block); end
  def cycles_remaining=(value); end
  def failed_payment_count(&block); end
  def failed_payment_count=(value); end
  def final_payment_date(&block); end
  def final_payment_date=(value); end
  def last_payment_amount(&block); end
  def last_payment_amount=(value); end
  def last_payment_date(&block); end
  def last_payment_date=(value); end
  def next_billing_date(&block); end
  def next_billing_date=(value); end
  def outstanding_balance(&block); end
  def outstanding_balance=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::OverrideChargeModel < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def charge_id(&block); end
  def charge_id=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::AgreementStateDescriptor < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def note(&block); end
  def note=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::AgreementTransactions < PayPal::SDK::REST::DataTypes::Base
  def agreement_transaction_list(&block); end
  def agreement_transaction_list=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::AgreementTransaction < PayPal::SDK::REST::DataTypes::Base
  def amount(&block); end
  def amount=(value); end
  def fee_amount(&block); end
  def fee_amount=(value); end
  def net_amount(&block); end
  def net_amount=(value); end
  def payer_email(&block); end
  def payer_email=(value); end
  def payer_name(&block); end
  def payer_name=(value); end
  def self.load_members; end
  def status(&block); end
  def status=(value); end
  def time_stamp(&block); end
  def time_stamp=(value); end
  def time_zone(&block); end
  def time_zone=(value); end
  def transaction_id(&block); end
  def transaction_id=(value); end
  def transaction_type(&block); end
  def transaction_type=(value); end
end
class PayPal::SDK::REST::DataTypes::WebProfile < PayPal::SDK::REST::DataTypes::Base
  def create; end
  def delete!(*arg); end
  def delete; end
  def flow_config(&block); end
  def flow_config=(value); end
  def id(&block); end
  def id=(value); end
  def input_fields(&block); end
  def input_fields=(value); end
  def name(&block); end
  def name=(value); end
  def partial_update!(*arg); end
  def partial_update(patch_request); end
  def presentation(&block); end
  def presentation=(value); end
  def self.find(resource_id); end
  def self.get_list(options = nil); end
  def self.load_members; end
  def temporary(&block); end
  def temporary=(value); end
  def update!(*arg); end
  def update; end
  extend PayPal::SDK::REST::GetAPI
  extend PayPal::SDK::REST::SetAPI
  include PayPal::SDK::REST::RequestDataType
  include PayPal::SDK::REST::SetAPI
end
class PayPal::SDK::REST::DataTypes::FlowConfig < PayPal::SDK::REST::DataTypes::Base
  def bank_txn_pending_url(&block); end
  def bank_txn_pending_url=(value); end
  def landing_page_type(&block); end
  def landing_page_type=(value); end
  def return_uri_http_method(&block); end
  def return_uri_http_method=(value); end
  def self.load_members; end
  def user_action(&block); end
  def user_action=(value); end
end
class PayPal::SDK::REST::DataTypes::InputFields < PayPal::SDK::REST::DataTypes::Base
  def address_override(&block); end
  def address_override=(value); end
  def allow_note(&block); end
  def allow_note=(value); end
  def no_shipping(&block); end
  def no_shipping=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::Presentation < PayPal::SDK::REST::DataTypes::Base
  def brand_name(&block); end
  def brand_name=(value); end
  def locale_code(&block); end
  def locale_code=(value); end
  def logo_image(&block); end
  def logo_image=(value); end
  def note_to_seller_label(&block); end
  def note_to_seller_label=(value); end
  def return_url_label(&block); end
  def return_url_label=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::WebProfileList < PayPal::SDK::REST::DataTypes::Base
  def flow_config(&block); end
  def flow_config=(value); end
  def id(&block); end
  def id=(value); end
  def input_fields(&block); end
  def input_fields=(value); end
  def name(&block); end
  def name=(value); end
  def presentation(&block); end
  def presentation=(value); end
  def self.load_members; end
  def temporary(&block); end
  def temporary=(value); end
end
class PayPal::SDK::REST::DataTypes::Dispute < PayPal::SDK::REST::DataTypes::Base
  def buyer_response_due_date(&block); end
  def buyer_response_due_date=(value); end
  def create_time(&block); end
  def create_time=(value); end
  def dispute_amount(&block); end
  def dispute_amount=(value); end
  def dispute_channel(&block); end
  def dispute_channel=(value); end
  def dispute_id(&block); end
  def dispute_id=(value); end
  def dispute_life_cycle_stage(&block); end
  def dispute_life_cycle_stage=(value); end
  def dispute_outcome(&block); end
  def dispute_outcome=(value); end
  def disputed_transactions(&block); end
  def disputed_transactions=(value); end
  def external_reason_code(&block); end
  def external_reason_code=(value); end
  def links(&block); end
  def links=(value); end
  def messages(&block); end
  def messages=(value); end
  def offer(&block); end
  def offer=(value); end
  def reason(&block); end
  def reason=(value); end
  def self.load_members; end
  def seller_response_due_date(&block); end
  def seller_response_due_date=(value); end
  def status(&block); end
  def status=(value); end
  def update_time(&block); end
  def update_time=(value); end
end
class PayPal::SDK::REST::DataTypes::TransactionInfo < PayPal::SDK::REST::DataTypes::Base
  def buyer(&block); end
  def buyer=(value); end
  def buyer_transaction_id(&block); end
  def buyer_transaction_id=(value); end
  def create_time(&block); end
  def create_time=(value); end
  def custom(&block); end
  def custom=(value); end
  def gross_amount(&block); end
  def gross_amount=(value); end
  def invoice_number(&block); end
  def invoice_number=(value); end
  def items(&block); end
  def items=(value); end
  def self.load_members; end
  def seller(&block); end
  def seller=(value); end
  def seller_transaction_id(&block); end
  def seller_transaction_id=(value); end
  def transaction_status(&block); end
  def transaction_status=(value); end
end
class PayPal::SDK::REST::DataTypes::Buyer < PayPal::SDK::REST::DataTypes::Base
  def email(&block); end
  def email=(value); end
  def name(&block); end
  def name=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::Seller < PayPal::SDK::REST::DataTypes::Base
  def email(&block); end
  def email=(value); end
  def merchant_id(&block); end
  def merchant_id=(value); end
  def name(&block); end
  def name=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::ItemInfo < PayPal::SDK::REST::DataTypes::Base
  def dispute_amount(&block); end
  def dispute_amount=(value); end
  def item_id(&block); end
  def item_id=(value); end
  def notes(&block); end
  def notes=(value); end
  def partner_transaction_id(&block); end
  def partner_transaction_id=(value); end
  def reason(&block); end
  def reason=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::Money < PayPal::SDK::REST::DataTypes::Base
  def currency_code(&block); end
  def currency_code=(value); end
  def self.load_members; end
  def value(&block); end
  def value=(value); end
end
class PayPal::SDK::REST::DataTypes::DisputeOutcome < PayPal::SDK::REST::DataTypes::Base
  def amount_refunded(&block); end
  def amount_refunded=(value); end
  def outcome_code(&block); end
  def outcome_code=(value); end
  def self.load_members; end
end
class PayPal::SDK::REST::DataTypes::Messages < PayPal::SDK::REST::DataTypes::Base
  def content(&block); end
  def content=(value); end
  def posted_by(&block); end
  def posted_by=(value); end
  def self.load_members; end
  def time_posted(&block); end
  def time_posted=(value); end
end
class PayPal::SDK::REST::DataTypes::Offer < PayPal::SDK::REST::DataTypes::Base
  def buyer_requested_amount(&block); end
  def buyer_requested_amount=(value); end
  def offer_type(&block); end
  def offer_type=(value); end
  def self.load_members; end
  def seller_offered_amount(&block); end
  def seller_offered_amount=(value); end
end
module PayPal::SDK::Core::Exceptions
end
class PayPal::SDK::Core::Exceptions::ConnectionError < StandardError
  def initialize(response, message = nil); end
  def response; end
  def to_s; end
end
class PayPal::SDK::Core::Exceptions::TimeoutError < PayPal::SDK::Core::Exceptions::ConnectionError
  def initialize(message); end
  def to_s; end
end
class PayPal::SDK::Core::Exceptions::SSLError < PayPal::SDK::Core::Exceptions::ConnectionError
  def initialize(message); end
  def to_s; end
end
class PayPal::SDK::Core::Exceptions::Redirection < PayPal::SDK::Core::Exceptions::ConnectionError
  def to_s; end
end
class PayPal::SDK::Core::Exceptions::MissingParam < ArgumentError
end
class PayPal::SDK::Core::Exceptions::MissingConfig < StandardError
end
class PayPal::SDK::Core::Exceptions::ClientError < PayPal::SDK::Core::Exceptions::ConnectionError
end
class PayPal::SDK::Core::Exceptions::BadRequest < PayPal::SDK::Core::Exceptions::ClientError
end
class PayPal::SDK::Core::Exceptions::UnauthorizedAccess < PayPal::SDK::Core::Exceptions::ClientError
end
class PayPal::SDK::Core::Exceptions::ForbiddenAccess < PayPal::SDK::Core::Exceptions::ClientError
end
class PayPal::SDK::Core::Exceptions::ResourceNotFound < PayPal::SDK::Core::Exceptions::ClientError
end
class PayPal::SDK::Core::Exceptions::ResourceConflict < PayPal::SDK::Core::Exceptions::ClientError
end
class PayPal::SDK::Core::Exceptions::ResourceGone < PayPal::SDK::Core::Exceptions::ClientError
end
class PayPal::SDK::Core::Exceptions::ResourceInvalid < PayPal::SDK::Core::Exceptions::ClientError
end
class PayPal::SDK::Core::Exceptions::ServerError < PayPal::SDK::Core::Exceptions::ConnectionError
end
class PayPal::SDK::Core::Exceptions::MethodNotAllowed < PayPal::SDK::Core::Exceptions::ClientError
  def allowed_methods; end
end
class PayPal::SDK::Core::Exceptions::UnsuccessfulApiCall < RuntimeError
  def api_error; end
  def initialize(api_error); end
end
module PayPal::SDK::REST::ClassMethods
  def method_missing(name, *args); end
end
module PayPal::SDK::Core::Configuration
  def config; end
  def config=(env, override_configurations = nil); end
  def set_config(env, override_configurations = nil); end
end
class PayPal::SDK::Core::Config
  def app_id; end
  def app_id=(arg0); end
  def ca_file=(ca_file); end
  def cert_path; end
  def cert_path=(arg0); end
  def client_id; end
  def client_id=(arg0); end
  def client_secret; end
  def client_secret=(arg0); end
  def dev_central_url=(dev_central_url); end
  def device_ipaddress; end
  def device_ipaddress=(arg0); end
  def end_point; end
  def end_point=(arg0); end
  def endpoint; end
  def endpoint=(arg0); end
  def http_proxy; end
  def http_proxy=(arg0); end
  def http_timeout; end
  def http_timeout=(arg0); end
  def http_verify_mode=(verify_mode); end
  def initialize(options); end
  def ipn_end_point; end
  def ipn_end_point=(arg0); end
  def ipn_endpoint; end
  def ipn_endpoint=(arg0); end
  def logfile=(filename); end
  def merchant_end_point; end
  def merchant_end_point=(arg0); end
  def merchant_endpoint; end
  def merchant_endpoint=(arg0); end
  def merge!(options); end
  def mode; end
  def mode=(arg0); end
  def openid_client_id; end
  def openid_client_id=(arg0); end
  def openid_client_secret; end
  def openid_client_secret=(arg0); end
  def openid_endpoint; end
  def openid_endpoint=(arg0); end
  def openid_redirect_uri; end
  def openid_redirect_uri=(arg0); end
  def password; end
  def password=(arg0); end
  def platform_end_point; end
  def platform_end_point=(arg0); end
  def platform_endpoint; end
  def platform_endpoint=(arg0); end
  def redirect_url=(redirect_url); end
  def required!(*names); end
  def rest_end_point; end
  def rest_end_point=(arg0); end
  def rest_endpoint; end
  def rest_endpoint=(arg0); end
  def rest_token_end_point; end
  def rest_token_end_point=(arg0); end
  def rest_token_endpoint; end
  def rest_token_endpoint=(arg0); end
  def sandbox_email_address; end
  def sandbox_email_address=(arg0); end
  def self.config(env = nil, override_configuration = nil); end
  def self.configurations; end
  def self.configurations=(configs); end
  def self.configure(options = nil, &block); end
  def self.default_config(env = nil); end
  def self.default_environment; end
  def self.default_environment=(env); end
  def self.load(file_name, default_env = nil); end
  def self.logger; end
  def self.logger=(logger); end
  def self.read_configurations(file_name = nil); end
  def self.set_config(options = nil, &block); end
  def signature; end
  def signature=(arg0); end
  def ssl_options; end
  def ssl_options=(options); end
  def subject; end
  def subject=(arg0); end
  def token; end
  def token=(arg0); end
  def token_secret; end
  def token_secret=(arg0); end
  def username; end
  def username=(arg0); end
  def verbose_logging; end
  def verbose_logging=(arg0); end
  include PayPal::SDK::Core::Exceptions
  include PayPal::SDK::Core::Logging
end
