# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `paypal-sdk-rest` gem.
# Please instead update this file by running `bin/tapioca gem paypal-sdk-rest`.


# source://paypal-sdk-rest//lib/paypal-sdk-core.rb#1
module PayPal; end

# source://paypal-sdk-rest//lib/paypal-sdk-core.rb#2
module PayPal::SDK
  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk-core.rb#21
    def configure(options = T.unsafe(nil), &block); end

    # source://paypal-sdk-rest//lib/paypal-sdk-core.rb#25
    def load(*args); end

    # source://paypal-sdk-rest//lib/paypal-sdk-core.rb#29
    def logger; end

    # source://paypal-sdk-rest//lib/paypal-sdk-core.rb#33
    def logger=(log); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk-core.rb#3
module PayPal::SDK::Core; end

# source://paypal-sdk-rest//lib/paypal-sdk/core/api.rb#4
module PayPal::SDK::Core::API; end

# API class provide default functionality for accessing the API web services.
# == Example
#   api      = API::Base.new("AdaptivePayments")
#   response = api.request("GetPaymentOptions", "")
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#10
class PayPal::SDK::Core::API::Base
  include ::PayPal::SDK::Core::Configuration
  include ::PayPal::SDK::Core::Logging
  include ::PayPal::SDK::Core::Authentication
  include ::PayPal::SDK::Core::Exceptions
  include ::PayPal::SDK::Core::Util::HTTPHelper

  # Initialize API object
  # === Argument
  # * <tt>service_name</tt> -- (Optional) Service name
  # * <tt>environment</tt>  -- (Optional) Configuration environment to load
  # * <tt>options</tt> -- (Optional) Override configuration.
  # === Example
  #  new("AdaptivePayments")
  #  new("AdaptivePayments", :development)
  #  new(:wsdl_service)       # It load wsdl_service configuration
  #
  # @return [Base] a new instance of Base
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#28
  def initialize(service_name = T.unsafe(nil), environment = T.unsafe(nil), options = T.unsafe(nil)); end

  # Generate HTTP request for given action and parameters
  # === Arguments
  # * <tt>http_method</tt> -- HTTP method(get/put/post/delete/patch)
  # * <tt>action</tt> -- Action to perform
  # * <tt>params</tt> -- (Optional) Parameters for the action
  # * <tt>initheader</tt> -- (Optional) HTTP header
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#80
  def api_call(payload); end

  # Get configured API mode( sandbox or live)
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#56
  def api_mode; end

  # Default Http header
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#70
  def default_http_header; end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#117
  def delete(action, params = T.unsafe(nil), header = T.unsafe(nil)); end

  # Format Error object. It will be override by child class.
  # == Arguments
  # * <tt>exception</tt> -- Exception object.
  # * <tt>message</tt> -- Readable error message.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#149
  def format_error(exception, message); end

  # Format Request data. It will be override by child class
  # == Arguments
  # * <tt>action</tt> -- Request action
  # * <tt>params</tt> -- Request parameters
  # == Return
  # * <tt>path</tt>   -- Formated request uri object
  # * <tt>params</tt> -- Formated request Parameters
  # * <tt>header</tt> -- HTTP Header
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#130
  def format_request(payload); end

  # Format Response object. It will be override by child class
  # == Argument
  # * <tt>action</tt> -- Request action
  # * <tt>response</tt> -- HTTP response object
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#140
  def format_response(payload); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#102
  def get(action, params = T.unsafe(nil), header = T.unsafe(nil)); end

  # Returns the value of attribute http.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#45
  def http; end

  # Sets the attribute http
  #
  # @param value the value to set the attribute http to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#14
  def http=(_arg0); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#107
  def patch(action, params = T.unsafe(nil), header = T.unsafe(nil)); end

  # Generate HTTP request for given action and parameters
  # === Arguments
  # * <tt>action</tt> -- Action to perform
  # * <tt>params</tt> -- (Optional) Parameters for the action
  # * <tt>initheader</tt> -- (Optional) HTTP header
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#96
  def post(action, params = T.unsafe(nil), header = T.unsafe(nil), query = T.unsafe(nil)); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#112
  def put(action, params = T.unsafe(nil), header = T.unsafe(nil)); end

  # Generate HTTP request for given action and parameters
  # === Arguments
  # * <tt>action</tt> -- Action to perform
  # * <tt>params</tt> -- (Optional) Parameters for the action
  # * <tt>initheader</tt> -- (Optional) HTTP header
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#96
  def request(action, params = T.unsafe(nil), header = T.unsafe(nil), query = T.unsafe(nil)); end

  # Get service end point
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#65
  def service_endpoint; end

  # Returns the value of attribute service_name.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#14
  def service_name; end

  # Sets the attribute service_name
  #
  # @param value the value to set the attribute service_name to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#14
  def service_name=(_arg0); end

  # Override set_config method to create http connection on changing the configuration.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#50
  def set_config(*args); end

  # Returns the value of attribute uri.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#36
  def uri; end

  # Sets the attribute uri
  #
  # @param value the value to set the attribute uri to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#14
  def uri=(_arg0); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#154
    def sdk_library_details; end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#163
    def user_agent; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#17
PayPal::SDK::Core::API::Base::API_MODES = T.let(T.unsafe(nil), Array)

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/base.rb#16
PayPal::SDK::Core::API::Base::DEFAULT_API_MODE = T.let(T.unsafe(nil), Symbol)

# source://paypal-sdk-rest//lib/paypal-sdk/core/api.rb#11
module PayPal::SDK::Core::API::DataTypes; end

# Create Array with block.
# === Example
#   ary = ArrayWithBlock.new{|val| val.to_i }
#   ary.push("123") # [ 123 ]
#   ary.merge!(["1", "3"])  # [ 123, 1, 3 ]
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/array_with_block.rb#9
class PayPal::SDK::Core::API::DataTypes::ArrayWithBlock < ::Array
  # @return [ArrayWithBlock] a new instance of ArrayWithBlock
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/array_with_block.rb#10
  def initialize(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/array_with_block.rb#15
  def [](key); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/array_with_block.rb#19
  def []=(key, value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/array_with_block.rb#27
  def merge!(array); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/array_with_block.rb#23
  def push(value); end
end

# Create attributes and restrict the object type.
# == Example
#   class ConvertCurrencyRequest < Core::API::DataTypes::Base
#     object_of :baseAmountList,        CurrencyList
#     object_of :convertToCurrencyList, CurrencyCodeList
#     object_of :countryCode,           String
#     object_of :conversionType,        String
#   end
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#16
class PayPal::SDK::Core::API::DataTypes::Base
  include ::PayPal::SDK::Core::API::DataTypes::SimpleTypes
  include ::PayPal::SDK::Core::Logging

  # Initialize options.
  #
  # @return [Base] a new instance of Base
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#113
  def initialize(options = T.unsafe(nil), &block); end

  # Create array of objects.
  # === Example
  # covert_array([{ :amount => "55", :code => "USD"}], CurrencyType)
  # covert_array({ "0" => { :amount => "55", :code => "USD"} }, CurrencyType)
  # covert_array({ :amount => "55", :code => "USD"}, CurrencyType)
  # # @return
  # # [ <CurrencyType#object @amount="55" @code="USD" > ]
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#152
  def convert_array(array, klass); end

  # Create object based on given data.
  # === Example
  # covert_object({ :amount => "55", :code => "USD"}, CurrencyType )
  # # @return
  # # <CurrencyType#object @amount="55" @code="USD" >
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#163
  def convert_object(object, klass); end

  # Generate Hash key for given member name based on configuration
  # === Example
  # hash_key(:amount) # @return :"ebl:amount"
  # hash_key(:type)   # @return :"@type"
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#197
  def hash_key(key, options = T.unsafe(nil)); end

  # Get configured member names
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#173
  def member_names; end

  # Alias instance method for the class method.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#168
  def members; end

  # Merge values
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#118
  def merge!(options, &block); end

  # Set value for given member
  # === Arguments
  # * <tt>key</tt> -- member name
  # * <tt>value</tt> -- value for member
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#136
  def set(key, value); end

  # Skip nil, empty array and empty hash.
  #
  # @return [Boolean]
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#189
  def skip_value?(value); end

  # Create Hash based configured members
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#178
  def to_hash(options = T.unsafe(nil)); end

  # Covert the object to hash based on class.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#210
  def value_to_hash(value, options = T.unsafe(nil)); end

  class << self
    # Add attribute
    # === Arguments
    # * <tt>name</tt>  -- attribute name
    # * <tt>options</tt> -- options
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#30
    def add_attribute(name, options = T.unsafe(nil)); end

    # Add Field to class variable hash and generate methods
    # === Example
    #   add_member(:errorMessage, String)  # Generate Code
    #   # attr_reader   :errorMessage
    #   # alias_method  :error_message,  :errorMessage
    #   # alias_method  :error_message=, :errorMessage=
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#50
    def add_member(member_name, klass, options = T.unsafe(nil)); end

    # define method for given member and the class name
    # === Example
    #   array_of(:errorMessage, ErrorMessage) # It Generate below code
    #   # def errorMessage=(array)
    #   #   @errorMessage = array.map{|options| ErrorMessage.new(options) }
    #   # end
    #   # add_member :errorMessage, ErrorMessage
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#98
    def array_of(key, klass, options = T.unsafe(nil)); end

    # Define alias methods for getter and setter
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#69
    def define_alias_methods(member_name, options); end

    # Fields list for the DataTye
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#35
    def members; end

    # define method for given member and the class name
    # === Example
    #   object_of(:errorMessage, ErrorMessage) # Generate Code
    #   # def errorMessage=(options)
    #   #   @errorMessage = ErrorMessage.new(options)
    #   # end
    #   # add_member :errorMessage, ErrorMessage
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#87
    def object_of(key, klass, options = T.unsafe(nil)); end

    # Generate snakecase string.
    # === Example
    # snakecase("errorMessage")
    # # error_message
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#106
    def snakecase(string); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#19
PayPal::SDK::Core::API::DataTypes::Base::ContentKey = T.let(T.unsafe(nil), Symbol)

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#18
PayPal::SDK::Core::API::DataTypes::Base::HashOptions = T.let(T.unsafe(nil), Hash)

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/enum.rb#5
class PayPal::SDK::Core::API::DataTypes::Enum < ::PayPal::SDK::Core::API::DataTypes::SimpleTypes::String
  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/enum.rb#7
    def options; end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/enum.rb#11
    def options=(options); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/simple_types.rb#7
module PayPal::SDK::Core::API::DataTypes::SimpleTypes; end

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/simple_types.rb#30
class PayPal::SDK::Core::API::DataTypes::SimpleTypes::Boolean
  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/simple_types.rb#31
    def new(boolean); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/simple_types.rb#36
class PayPal::SDK::Core::API::DataTypes::SimpleTypes::Date < ::Date
  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/simple_types.rb#37
    def new(date); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/simple_types.rb#42
class PayPal::SDK::Core::API::DataTypes::SimpleTypes::DateTime < ::DateTime
  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/simple_types.rb#43
    def new(date_time); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/simple_types.rb#24
class PayPal::SDK::Core::API::DataTypes::SimpleTypes::Float < ::Float
  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/simple_types.rb#25
    def new(float); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/simple_types.rb#18
class PayPal::SDK::Core::API::DataTypes::SimpleTypes::Integer < ::Integer
  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/simple_types.rb#19
    def new(number); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/simple_types.rb#8
class PayPal::SDK::Core::API::DataTypes::SimpleTypes::String < ::String
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/simple_types.rb#13
  def to_yaml_type; end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/simple_types.rb#9
    def new(string = T.unsafe(nil)); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/ipn.rb#5
module PayPal::SDK::Core::API::IPN
  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/ipn.rb#57
    def request(*args); end

    # @return [Boolean]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/api/ipn.rb#53
    def valid?(*args); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/ipn.rb#7
PayPal::SDK::Core::API::IPN::END_POINTS = T.let(T.unsafe(nil), Hash)

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/ipn.rb#12
PayPal::SDK::Core::API::IPN::INVALID = T.let(T.unsafe(nil), String)

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/ipn.rb#14
class PayPal::SDK::Core::API::IPN::Message
  include ::PayPal::SDK::Core::Configuration
  include ::PayPal::SDK::Core::Logging
  include ::PayPal::SDK::Core::Authentication
  include ::PayPal::SDK::Core::Exceptions
  include ::PayPal::SDK::Core::Util::HTTPHelper

  # @return [Message] a new instance of Message
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/ipn.rb#19
  def initialize(message, env = T.unsafe(nil), options = T.unsafe(nil)); end

  # Default IPN end point
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/ipn.rb#30
  def default_ipn_endpoint; end

  # Fetch end point
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/ipn.rb#25
  def ipn_endpoint; end

  # Returns the value of attribute message.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/ipn.rb#17
  def message; end

  # Sets the attribute message
  #
  # @param value the value to set the attribute message to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/ipn.rb#17
  def message=(_arg0); end

  # Request IPN service for validating the content
  # === Return
  # return http response object
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/ipn.rb#38
  def request; end

  # Validate the given content
  # === Return
  # return true or false
  #
  # @return [Boolean]
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/ipn.rb#47
  def valid?; end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/ipn.rb#11
PayPal::SDK::Core::API::IPN::VERIFIED = T.let(T.unsafe(nil), String)

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#5
class PayPal::SDK::Core::API::REST < ::PayPal::SDK::Core::API::Base
  # Override the API call to handle Token Expire
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#92
  def api_call(payload); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#155
  def flat_hash(h); end

  # Format request payload
  # === Argument
  # * payload( uri, action, params, header)
  # === Generate
  # * payload( uri, body, header )
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#121
  def format_request(payload); end

  # Format response payload
  # === Argument
  # * payload( response )
  # === Generate
  # * payload( data )
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#139
  def format_response(payload); end

  # Validate HTTP response
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#109
  def handle_response(response); end

  # Log PayPal-Request-Id header
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#168
  def log_http_call(payload); end

  # Get REST service end point
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#21
  def service_endpoint; end

  # Clear cached values.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#31
  def set_config(*args); end

  # Get access token
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#68
  def token(auth_code = T.unsafe(nil), headers = T.unsafe(nil)); end

  # token setter
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#78
  def token=(new_token); end

  # Token endpoint
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#26
  def token_endpoint; end

  # Generate Oauth token or Get cached
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#48
  def token_hash(auth_code = T.unsafe(nil), headers = T.unsafe(nil)); end

  # Sets the attribute token_hash
  #
  # @param value the value to set the attribute token_hash to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#65
  def token_hash=(_arg0); end

  # Get access token type
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#73
  def token_type(headers = T.unsafe(nil)); end

  # URI object token endpoint
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#38
  def token_uri; end

  # Check token expired or not
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#83
  def validate_token_hash; end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#10
PayPal::SDK::Core::API::REST::DEFAULT_HTTP_HEADER = T.let(T.unsafe(nil), Hash)

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#14
PayPal::SDK::Core::API::REST::DEFAULT_REST_END_POINTS = T.let(T.unsafe(nil), Hash)

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#6
PayPal::SDK::Core::API::REST::NVP_AUTH_HEADER = T.let(T.unsafe(nil), Hash)

# source://paypal-sdk-rest//lib/paypal-sdk/core/api/rest.rb#18
PayPal::SDK::Core::API::REST::TOKEN_REQUEST_PARAMS = T.let(T.unsafe(nil), String)

# Contains methods to format credentials for HTTP protocol.
# == Example
#  include Authentication
#  credential(url)
#  base_credential
#  third_party_credential(url)
#
#  add_certificate(http)
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/authentication.rb#12
module PayPal::SDK::Core::Authentication
  include ::PayPal::SDK::Core::Configuration

  # Configure ssl certificate to HTTP object
  # === Argument
  # * <tt>http</tt> -- Net::HTTP object
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/authentication.rb#56
  def add_certificate(http); end

  # Get base credential
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/authentication.rb#24
  def base_credential; end

  # Get base credential type
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/authentication.rb#34
  def base_credential_type; end

  # Get credential object
  # === Argument
  # * <tt>url</tt> -- API request url
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/authentication.rb#19
  def credential(url); end

  # Clear cached variables on changing the configuration.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/authentication.rb#48
  def set_config(*args); end

  # Get third party credential
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/authentication.rb#39
  def third_party_credential(url); end
end

# Config class is used to hold the configurations.
# == Examples
#   # To load configurations from file
#   Config.load('config/paypal.yml', 'development')
#
#   # Get configuration
#   Config.config   # load default configuration
#   Config.config(:development) # load development configuration
#   Config.config(:development, :app_id => "XYZ") # Override configuration
#
#   # Read configuration attributes
#   config = Config.config
#   config.username
#   config.endpoint
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#66
class PayPal::SDK::Core::Config
  include ::PayPal::SDK::Core::Logging
  include ::PayPal::SDK::Core::Exceptions

  # Create Config object
  # === Options(Hash)
  # * <tt>username</tt>   -- Username
  # * <tt>password</tt>   -- Password
  # * <tt>signature</tt> (Optional if certificate present) -- Signature
  # * <tt>app_id</tt>     -- Application ID
  # * <tt>cert_path</tt> (Optional if signature present)  -- Certificate file path
  #
  # @return [Config] a new instance of Config
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#100
  def initialize(options); end

  # Returns the value of attribute app_id.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def app_id; end

  # Sets the attribute app_id
  #
  # @param value the value to set the attribute app_id to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def app_id=(_arg0); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#125
  def ca_file=(ca_file); end

  # Returns the value of attribute cert_path.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def cert_path; end

  # Sets the attribute cert_path
  #
  # @param value the value to set the attribute cert_path to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def cert_path=(_arg0); end

  # Returns the value of attribute client_id.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def client_id; end

  # Sets the attribute client_id
  #
  # @param value the value to set the attribute client_id to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def client_id=(_arg0); end

  # Returns the value of attribute client_secret.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def client_secret; end

  # Sets the attribute client_secret
  #
  # @param value the value to set the attribute client_secret to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def client_secret=(_arg0); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#112
  def dev_central_url=(dev_central_url); end

  # Returns the value of attribute device_ipaddress.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def device_ipaddress; end

  # Sets the attribute device_ipaddress
  #
  # @param value the value to set the attribute device_ipaddress to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def device_ipaddress=(_arg0); end

  # Returns the value of attribute endpoint.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def end_point; end

  # Sets the attribute endpoint
  #
  # @param value the value to set the attribute endpoint to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def end_point=(_arg0); end

  # Returns the value of attribute endpoint.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def endpoint; end

  # Sets the attribute endpoint
  #
  # @param value the value to set the attribute endpoint to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def endpoint=(_arg0); end

  # Returns the value of attribute http_proxy.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def http_proxy; end

  # Sets the attribute http_proxy
  #
  # @param value the value to set the attribute http_proxy to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def http_proxy=(_arg0); end

  # Returns the value of attribute http_timeout.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def http_timeout; end

  # Sets the attribute http_timeout
  #
  # @param value the value to set the attribute http_timeout to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def http_timeout=(_arg0); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#130
  def http_verify_mode=(verify_mode); end

  # Returns the value of attribute ipn_endpoint.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def ipn_end_point; end

  # Sets the attribute ipn_endpoint
  #
  # @param value the value to set the attribute ipn_endpoint to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def ipn_end_point=(_arg0); end

  # Returns the value of attribute ipn_endpoint.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def ipn_endpoint; end

  # Sets the attribute ipn_endpoint
  #
  # @param value the value to set the attribute ipn_endpoint to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def ipn_endpoint=(_arg0); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#104
  def logfile=(filename); end

  # Returns the value of attribute merchant_endpoint.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def merchant_end_point; end

  # Sets the attribute merchant_endpoint
  #
  # @param value the value to set the attribute merchant_endpoint to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def merchant_end_point=(_arg0); end

  # Returns the value of attribute merchant_endpoint.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def merchant_endpoint; end

  # Sets the attribute merchant_endpoint
  #
  # @param value the value to set the attribute merchant_endpoint to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def merchant_endpoint=(_arg0); end

  # Override configurations
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#136
  def merge!(options); end

  # Returns the value of attribute mode.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def mode; end

  # Sets the attribute mode
  #
  # @param value the value to set the attribute mode to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def mode=(_arg0); end

  # Returns the value of attribute openid_client_id.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def openid_client_id; end

  # Sets the attribute openid_client_id
  #
  # @param value the value to set the attribute openid_client_id to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def openid_client_id=(_arg0); end

  # Returns the value of attribute openid_client_secret.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def openid_client_secret; end

  # Sets the attribute openid_client_secret
  #
  # @param value the value to set the attribute openid_client_secret to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def openid_client_secret=(_arg0); end

  # Returns the value of attribute openid_endpoint.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def openid_endpoint; end

  # Sets the attribute openid_endpoint
  #
  # @param value the value to set the attribute openid_endpoint to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def openid_endpoint=(_arg0); end

  # Returns the value of attribute openid_redirect_uri.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def openid_redirect_uri; end

  # Sets the attribute openid_redirect_uri
  #
  # @param value the value to set the attribute openid_redirect_uri to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def openid_redirect_uri=(_arg0); end

  # Returns the value of attribute password.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def password; end

  # Sets the attribute password
  #
  # @param value the value to set the attribute password to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def password=(_arg0); end

  # Returns the value of attribute platform_endpoint.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def platform_end_point; end

  # Sets the attribute platform_endpoint
  #
  # @param value the value to set the attribute platform_endpoint to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def platform_end_point=(_arg0); end

  # Returns the value of attribute platform_endpoint.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def platform_endpoint; end

  # Sets the attribute platform_endpoint
  #
  # @param value the value to set the attribute platform_endpoint to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def platform_endpoint=(_arg0); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#108
  def redirect_url=(redirect_url); end

  # Validate required configuration
  #
  # @raise [MissingConfig]
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#144
  def required!(*names); end

  # Returns the value of attribute rest_endpoint.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def rest_end_point; end

  # Sets the attribute rest_endpoint
  #
  # @param value the value to set the attribute rest_endpoint to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def rest_end_point=(_arg0); end

  # Returns the value of attribute rest_endpoint.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def rest_endpoint; end

  # Sets the attribute rest_endpoint
  #
  # @param value the value to set the attribute rest_endpoint to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def rest_endpoint=(_arg0); end

  # Returns the value of attribute rest_token_endpoint.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def rest_token_end_point; end

  # Sets the attribute rest_token_endpoint
  #
  # @param value the value to set the attribute rest_token_endpoint to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def rest_token_end_point=(_arg0); end

  # Returns the value of attribute rest_token_endpoint.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def rest_token_endpoint; end

  # Sets the attribute rest_token_endpoint
  #
  # @param value the value to set the attribute rest_token_endpoint to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def rest_token_endpoint=(_arg0); end

  # Returns the value of attribute sandbox_email_address.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def sandbox_email_address; end

  # Sets the attribute sandbox_email_address
  #
  # @param value the value to set the attribute sandbox_email_address to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def sandbox_email_address=(_arg0); end

  # Returns the value of attribute signature.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def signature; end

  # Sets the attribute signature
  #
  # @param value the value to set the attribute signature to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def signature=(_arg0); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#116
  def ssl_options; end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#120
  def ssl_options=(options); end

  # Returns the value of attribute subject.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def subject; end

  # Sets the attribute subject
  #
  # @param value the value to set the attribute subject to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def subject=(_arg0); end

  # Returns the value of attribute token.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def token; end

  # Sets the attribute token
  #
  # @param value the value to set the attribute token to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def token=(_arg0); end

  # Returns the value of attribute token_secret.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def token_secret; end

  # Sets the attribute token_secret
  #
  # @param value the value to set the attribute token_secret to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def token_secret=(_arg0); end

  # Returns the value of attribute username.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def username; end

  # Sets the attribute username
  #
  # @param value the value to set the attribute username to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def username=(_arg0); end

  # Returns the value of attribute verbose_logging.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def verbose_logging; end

  # Sets the attribute verbose_logging
  #
  # @param value the value to set the attribute verbose_logging to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#71
  def verbose_logging=(_arg0); end

  class << self
    # Create or Load Config object based on given environment and configurations.
    # === Attributes
    # * <tt>env</tt> (Optional) -- Environment name
    # * <tt>override_configuration</tt> (Optional) -- Override the configuration given in file.
    # === Example
    #   Config.config
    #   Config.config(:development)
    #   Config.config(:development, { :app_id => "XYZ" })
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#195
    def config(env = T.unsafe(nil), override_configuration = T.unsafe(nil)); end

    # Get raw configurations in Hash format.
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#231
    def configurations; end

    # Set configuration
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#236
    def configurations=(configs); end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#176
    def configure(options = T.unsafe(nil), &block); end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#207
    def default_config(env = T.unsafe(nil)); end

    # Get default environment name
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#167
    def default_environment; end

    # Set default environment
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#172
    def default_environment=(env); end

    # Load configurations from file
    # === Arguments
    # * <tt>file_name</tt>             -- Configuration file path
    # * <tt>default_environment</tt> (Optional)    -- default environment configuration to load
    # === Example
    #   Config.load('config/paypal.yml', 'development')
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#159
    def load(file_name, default_env = T.unsafe(nil)); end

    # Get logger
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#222
    def logger; end

    # Set logger
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#217
    def logger=(logger); end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#176
    def set_config(options = T.unsafe(nil), &block); end

    private

    # Read configurations from the given file name
    # === Arguments
    # * <tt>file_name</tt> (Optional) -- Configuration file path
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#245
    def read_configurations(file_name = T.unsafe(nil)); end
  end
end

# Include Configuration module to access configuration from any object
# == Examples
#   # Include in any class
#   include Configuration
#
#   # Access config object and attributes
#   config
#   config.username
#
#   # Change configuration
#   set_config(:development)
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#17
module PayPal::SDK::Core::Configuration
  # To get default Config object.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#20
  def config; end

  # To change the configuration to given environment or configuration
  # === Arguments
  # * <tt>env</tt> -- Environment
  # * <tt>override_configurations</tt> (Optional) -- To override the default configuration.
  # === Examples
  #   obj.set_config(api.config)
  #   obj.set_config(:http_timeout => 30)
  #   obj.set_config(:development)
  #   obj.set_config(:development, :http_timeout => 30)
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#33
  def config=(env, override_configurations = T.unsafe(nil)); end

  # To change the configuration to given environment or configuration
  # === Arguments
  # * <tt>env</tt> -- Environment
  # * <tt>override_configurations</tt> (Optional) -- To override the default configuration.
  # === Examples
  #   obj.set_config(api.config)
  #   obj.set_config(:http_timeout => 30)
  #   obj.set_config(:development)
  #   obj.set_config(:development, :http_timeout => 30)
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/config.rb#33
  def set_config(env, override_configurations = T.unsafe(nil)); end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/credential.rb#4
module PayPal::SDK::Core::Credential; end

# Base credential Class for authentication
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/credential/base.rb#5
class PayPal::SDK::Core::Credential::Base
  # Initialize authentication configurations
  # === Arguments
  #  * <tt>config</tt> -- Configuration object
  #
  # @return [Base] a new instance of Base
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/base.rb#11
  def initialize(config); end

  # Returns the value of attribute app_id.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/base.rb#6
  def app_id; end

  # Sets the attribute app_id
  #
  # @param value the value to set the attribute app_id to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/base.rb#6
  def app_id=(_arg0); end

  # Returns the value of attribute device_ipaddress.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/base.rb#6
  def device_ipaddress; end

  # Sets the attribute device_ipaddress
  #
  # @param value the value to set the attribute device_ipaddress to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/base.rb#6
  def device_ipaddress=(_arg0); end

  # Returns the value of attribute password.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/base.rb#6
  def password; end

  # Sets the attribute password
  #
  # @param value the value to set the attribute password to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/base.rb#6
  def password=(_arg0); end

  # Return credential properties
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/base.rb#20
  def properties; end

  # Returns the value of attribute sandbox_email_address.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/base.rb#6
  def sandbox_email_address; end

  # Sets the attribute sandbox_email_address
  #
  # @param value the value to set the attribute sandbox_email_address to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/base.rb#6
  def sandbox_email_address=(_arg0); end

  # Returns the value of attribute username.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/base.rb#6
  def username; end

  # Sets the attribute username
  #
  # @param value the value to set the attribute username to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/base.rb#6
  def username=(_arg0); end
end

# Certificate class for SSL Certificate authentication
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/credential/certificate.rb#5
class PayPal::SDK::Core::Credential::Certificate < ::PayPal::SDK::Core::Credential::Base
  # @return [Certificate] a new instance of Certificate
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/certificate.rb#9
  def initialize(config); end

  # Return SSL certificate
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/certificate.rb#15
  def cert; end

  # Returns the value of attribute cert_path.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/certificate.rb#7
  def cert_path; end

  # Return SSL certificate key
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/certificate.rb#20
  def key; end

  private

  # Return certificate content from the configured file.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/certificate.rb#26
  def cert_content; end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/credential/signature.rb#3
class PayPal::SDK::Core::Credential::Signature < ::PayPal::SDK::Core::Credential::Base
  # Initialize configuration
  # === Argument
  # * <tt>config</tt> -- Configuration object
  #
  # @return [Signature] a new instance of Signature
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/signature.rb#10
  def initialize(config); end

  # Return properties for authentication
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/signature.rb#16
  def properties; end

  # Returns the value of attribute signature.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/signature.rb#5
  def signature; end

  # Sets the attribute signature
  #
  # @param value the value to set the attribute signature to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/signature.rb#5
  def signature=(_arg0); end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/credential.rb#9
module PayPal::SDK::Core::Credential::ThirdParty; end

# source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/subject.rb#4
class PayPal::SDK::Core::Credential::ThirdParty::Subject
  # Initialize configuration
  # === Arguments
  # * <tt>credential</tt> -- Credential object
  # * <tt>config</tt> -- Configuration object
  #
  # @return [Subject] a new instance of Subject
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/subject.rb#12
  def initialize(credential, config); end

  # Returns the value of attribute credential.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/subject.rb#6
  def credential; end

  # Sets the attribute credential
  #
  # @param value the value to set the attribute credential to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/subject.rb#6
  def credential=(_arg0); end

  # Return properties for authentication.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/subject.rb#18
  def properties; end

  # Returns the value of attribute subject.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/subject.rb#6
  def subject; end

  # Sets the attribute subject
  #
  # @param value the value to set the attribute subject to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/subject.rb#6
  def subject=(_arg0); end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/token.rb#4
class PayPal::SDK::Core::Credential::ThirdParty::Token
  # Initialize Token credentials
  # === Arguments
  # * <tt>credential</tt> -- Credential Object
  # * <tt>config</tt> -- Configuration object
  # * <tt>url</tt> -- Request url
  #
  # @return [Token] a new instance of Token
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/token.rb#13
  def initialize(credential, config, url); end

  # Returns the value of attribute credential.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/token.rb#6
  def credential; end

  # Sets the attribute credential
  #
  # @param value the value to set the attribute credential to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/token.rb#6
  def credential=(_arg0); end

  # Return credential properties for authentication.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/token.rb#23
  def properties; end

  # Returns the value of attribute token.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/token.rb#6
  def token; end

  # Sets the attribute token
  #
  # @param value the value to set the attribute token to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/token.rb#6
  def token=(_arg0); end

  # Returns the value of attribute token_secret.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/token.rb#6
  def token_secret; end

  # Sets the attribute token_secret
  #
  # @param value the value to set the attribute token_secret to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/token.rb#6
  def token_secret=(_arg0); end

  # Returns the value of attribute url.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/token.rb#6
  def url; end

  # Sets the attribute url
  #
  # @param value the value to set the attribute url to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/token.rb#6
  def url=(_arg0); end

  private

  # Return OAuth authentication string.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/token.rb#31
  def oauth_authentication; end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/credential/third_party/token.rb#20
PayPal::SDK::Core::Credential::ThirdParty::Token::RemoveProperties = T.let(T.unsafe(nil), Array)

# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#5
module PayPal::SDK::Core::Exceptions; end

# 400 Bad Request
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#64
class PayPal::SDK::Core::Exceptions::BadRequest < ::PayPal::SDK::Core::Exceptions::ClientError; end

# 4xx Client Error
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#60
class PayPal::SDK::Core::Exceptions::ClientError < ::PayPal::SDK::Core::Exceptions::ConnectionError; end

# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#6
class PayPal::SDK::Core::Exceptions::ConnectionError < ::StandardError
  # @return [ConnectionError] a new instance of ConnectionError
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#9
  def initialize(response, message = T.unsafe(nil)); end

  # Returns the value of attribute response.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#7
  def response; end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#14
  def to_s; end
end

# 403 Forbidden
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#72
class PayPal::SDK::Core::Exceptions::ForbiddenAccess < ::PayPal::SDK::Core::Exceptions::ClientError; end

# 405 Method Not Allowed
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#96
class PayPal::SDK::Core::Exceptions::MethodNotAllowed < ::PayPal::SDK::Core::Exceptions::ClientError
  # source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#97
  def allowed_methods; end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#56
class PayPal::SDK::Core::Exceptions::MissingConfig < ::StandardError; end

# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#53
class PayPal::SDK::Core::Exceptions::MissingParam < ::ArgumentError; end

# 3xx Redirection
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#47
class PayPal::SDK::Core::Exceptions::Redirection < ::PayPal::SDK::Core::Exceptions::ConnectionError
  # source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#48
  def to_s; end
end

# 409 Conflict
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#80
class PayPal::SDK::Core::Exceptions::ResourceConflict < ::PayPal::SDK::Core::Exceptions::ClientError; end

# 410 Gone
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#84
class PayPal::SDK::Core::Exceptions::ResourceGone < ::PayPal::SDK::Core::Exceptions::ClientError; end

# 422 Unprocessable Entity
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#88
class PayPal::SDK::Core::Exceptions::ResourceInvalid < ::PayPal::SDK::Core::Exceptions::ClientError; end

# 404 Not Found
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#76
class PayPal::SDK::Core::Exceptions::ResourceNotFound < ::PayPal::SDK::Core::Exceptions::ClientError; end

# Raised when a OpenSSL::SSL::SSLError occurs.
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#39
class PayPal::SDK::Core::Exceptions::SSLError < ::PayPal::SDK::Core::Exceptions::ConnectionError
  # @return [SSLError] a new instance of SSLError
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#40
  def initialize(message); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#43
  def to_s; end
end

# 5xx Server Error
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#92
class PayPal::SDK::Core::Exceptions::ServerError < ::PayPal::SDK::Core::Exceptions::ConnectionError; end

# Raised when a Timeout::Error occurs.
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#31
class PayPal::SDK::Core::Exceptions::TimeoutError < ::PayPal::SDK::Core::Exceptions::ConnectionError
  # @return [TimeoutError] a new instance of TimeoutError
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#32
  def initialize(message); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#35
  def to_s; end
end

# 401 Unauthorized
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#68
class PayPal::SDK::Core::Exceptions::UnauthorizedAccess < ::PayPal::SDK::Core::Exceptions::ClientError; end

# API error: returned as 200 + "error" key in response.
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#103
class PayPal::SDK::Core::Exceptions::UnsuccessfulApiCall < ::RuntimeError
  # @return [UnsuccessfulApiCall] a new instance of UnsuccessfulApiCall
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#106
  def initialize(api_error); end

  # Returns the value of attribute api_error.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/exceptions.rb#104
  def api_error; end
end

# Include Logging module to provide logger functionality.
# == Configure logger
#   Logging.logger = Logger.new(STDERR)
#
# == Example
#   include Logger
#   logger.info "Debug message"
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/logging.rb#12
module PayPal::SDK::Core::Logging
  # source://paypal-sdk-rest//lib/paypal-sdk/core/logging.rb#19
  def log_event(message, &block); end

  # Get logger object
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/logging.rb#15
  def logger; end

  class << self
    # Get or Create configured logger based on the default environment configuration
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/logging.rb#29
    def logger; end

    # Set logger directly and clear the loggers cache.
    # === Attributes
    # * <tt>logger</tt> -- Logger object
    # === Example
    #   Logging.logger = Logger.new(STDERR)
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/logging.rb#38
    def logger=(logger); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#4
module PayPal::SDK::Core::OpenIDConnect
  include ::PayPal::SDK::Core::OpenIDConnect::DataTypes

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#14
    def api; end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#27
    def authorize_url(params = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#18
    def config=(*args); end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#38
    def logout_url(params = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#18
    def set_config(*args); end

    private

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#49
    def url_for_mode(url); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/api.rb#7
class PayPal::SDK::Core::OpenIDConnect::API < ::PayPal::SDK::Core::API::Base
  # @return [API] a new instance of API
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/api.rb#13
  def initialize(environment = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/api.rb#21
  def format_request(payload); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/api.rb#28
  def format_response(payload); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/api.rb#17
  def service_endpoint; end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/api.rb#42
    def user_agent; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/api.rb#9
PayPal::SDK::Core::OpenIDConnect::API::DEFAULT_OPENID_ENDPOINT = T.let(T.unsafe(nil), Hash)

# source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/data_types.rb#5
module PayPal::SDK::Core::OpenIDConnect::DataTypes; end

# source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/data_types.rb#9
class PayPal::SDK::Core::OpenIDConnect::DataTypes::Address < ::PayPal::SDK::Core::OpenIDConnect::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def country(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def country=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def locality(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def locality=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def postal_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def postal_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def region(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def region=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def street_address(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def street_address=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/data_types.rb#10
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/data_types.rb#6
class PayPal::SDK::Core::OpenIDConnect::DataTypes::Base < ::PayPal::SDK::Core::API::DataTypes::Base; end

# source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/data_types.rb#57
class PayPal::SDK::Core::OpenIDConnect::DataTypes::Error < ::PayPal::SDK::Core::OpenIDConnect::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def error(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def error=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def error_description(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def error_description=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def error_uri(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def error_uri=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/data_types.rb#58
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/data_types.rb#46
class PayPal::SDK::Core::OpenIDConnect::DataTypes::Tokeninfo < ::PayPal::SDK::Core::OpenIDConnect::DataTypes::Base
  include ::PayPal::SDK::Core::OpenIDConnect::RequestDataType
  include ::PayPal::SDK::Core::OpenIDConnect::SetAPI
  extend ::PayPal::SDK::Core::OpenIDConnect::GetAPI
  extend ::PayPal::SDK::Core::OpenIDConnect::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def access_token(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def access_token=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def expires_in(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def expires_in=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id_token(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id_token=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#115
  def logout_url(options = T.unsafe(nil)); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#105
  def refresh(options = T.unsafe(nil)); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def refresh_token(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def refresh_token=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def scope(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def scope=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def token_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def token_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#111
  def userinfo(options = T.unsafe(nil)); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#100
    def authorize_url(options = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#62
    def basic_auth_header(options); end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#68
    def create(options, http_header = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#83
    def create_fp(options, http_header = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#68
    def create_from_authorization_code(options, http_header = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#83
    def create_from_future_payment_auth_code(options, http_header = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#75
    def create_from_refresh_token(options, http_header = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/data_types.rb#47
    def load_members; end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#75
    def refresh(options, http_header = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#83
    def token_hash(options, http_header = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#92
    def with_credentials(options = T.unsafe(nil)); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#58
PayPal::SDK::Core::OpenIDConnect::DataTypes::Tokeninfo::FP_PATH = T.let(T.unsafe(nil), String)

# source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#57
PayPal::SDK::Core::OpenIDConnect::DataTypes::Tokeninfo::PATH = T.let(T.unsafe(nil), String)

# source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/data_types.rb#19
class PayPal::SDK::Core::OpenIDConnect::DataTypes::Userinfo < ::PayPal::SDK::Core::OpenIDConnect::DataTypes::Base
  include ::PayPal::SDK::Core::OpenIDConnect::RequestDataType
  include ::PayPal::SDK::Core::OpenIDConnect::SetAPI
  extend ::PayPal::SDK::Core::OpenIDConnect::GetAPI
  extend ::PayPal::SDK::Core::OpenIDConnect::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def account_creation_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def account_creation_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def account_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def account_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def address(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def address=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def age_range(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def age_range=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def birthday(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def birthday=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def email(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def email=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def email_verified(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def email_verified=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def family_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def family_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def gender(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def gender=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def given_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def given_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def language(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def language=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def locale(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def locale=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def middle_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def middle_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payer_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payer_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def phone_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def phone_number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def picture(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def picture=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def sub(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def sub=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def user_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def user_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def verified(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def verified=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def verified_account(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def verified_account=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def zoneinfo(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def zoneinfo=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#126
    def get(options = T.unsafe(nil), http_header = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#126
    def get_userinfo(options = T.unsafe(nil), http_header = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/data_types.rb#20
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#123
PayPal::SDK::Core::OpenIDConnect::DataTypes::Userinfo::PATH = T.let(T.unsafe(nil), String)

# source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/get_api.rb#4
module PayPal::SDK::Core::OpenIDConnect::GetAPI
  # Get API object
  # === Example
  #   Payment.api
  #   payment.api
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/get_api.rb#9
  def api; end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/get_api.rb#18
  def client_id; end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/get_api.rb#22
  def client_secret; end

  # Parent API object
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/get_api.rb#14
  def parent_api; end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/request_data_type.rb#4
module PayPal::SDK::Core::OpenIDConnect::RequestDataType
  extend ::PayPal::SDK::Core::OpenIDConnect::SetAPI
  include ::PayPal::SDK::Core::OpenIDConnect::SetAPI

  mixes_in_class_methods ::PayPal::SDK::Core::OpenIDConnect::GetAPI
  mixes_in_class_methods ::PayPal::SDK::Core::OpenIDConnect::SetAPI

  # Get a local API object or Class level API object
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/request_data_type.rb#7
  def api; end

  class << self
    # Global API object
    # === Example
    #   RequestDataType.api
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/request_data_type.rb#15
    def api; end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/request_data_type.rb#19
    def client_id; end

    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/request_data_type.rb#23
    def client_secret; end

    # Configure depended module, when RequestDataType is include.
    # === Example
    #   class Payment < DataTypes
    #     include RequestDataType
    #   end
    #   Payment.set_config(..)
    #   payment.set_config(..)
    #   Payment.api
    #   payment.api
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/request_data_type.rb#41
    def included(klass); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/set_api.rb#4
module PayPal::SDK::Core::OpenIDConnect::SetAPI
  # Set new api
  # === Examples
  #   payment.set_config(:development)
  #   payment.set_config(:client_id => "XYZ", :client_secret => "SECRET")
  #   payment.set_config
  #   payment.api = API.new(:development)
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/set_api.rb#11
  def api=(*args); end

  # Override client id
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/set_api.rb#25
  def client_id=(client_id); end

  # Override client secret
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/set_api.rb#30
  def client_secret=(client_secret); end

  # Set new api
  # === Examples
  #   payment.set_config(:development)
  #   payment.set_config(:client_id => "XYZ", :client_secret => "SECRET")
  #   payment.set_config
  #   payment.api = API.new(:development)
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/set_api.rb#11
  def config=(*args); end

  # Set new api
  # === Examples
  #   payment.set_config(:development)
  #   payment.set_config(:client_id => "XYZ", :client_secret => "SECRET")
  #   payment.set_config
  #   payment.api = API.new(:development)
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/set_api.rb#11
  def set_api(*args); end

  # Set new api
  # === Examples
  #   payment.set_config(:development)
  #   payment.set_config(:client_id => "XYZ", :client_secret => "SECRET")
  #   payment.set_config
  #   payment.api = API.new(:development)
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect/set_api.rb#11
  def set_config(*args); end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/util.rb#4
module PayPal::SDK::Core::Util; end

# source://paypal-sdk-rest//lib/paypal-sdk/core/util/http_helper.rb#7
module PayPal::SDK::Core::Util::HTTPHelper
  include ::PayPal::SDK::Core::Configuration
  include ::PayPal::SDK::Core::Logging
  include ::PayPal::SDK::Core::Authentication
  include ::PayPal::SDK::Core::Exceptions

  # Apply ssl configuration to http object
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/http_helper.rb#41
  def configure_ssl(http); end

  # Create HTTP connection based on given service name or configured end point
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/http_helper.rb#15
  def create_http_connection(uri); end

  # Default ca file
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/http_helper.rb#36
  def default_ca_file; end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/http_helper.rb#119
  def encode_www_form(hash); end

  # Handles response and error codes from the remote service.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/http_helper.rb#128
  def handle_response(response); end

  # Make Http call
  # * payload - Hash(:http, :method, :uri, :body, :header)
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/http_helper.rb#65
  def http_call(payload); end

  # Log Http call
  # * payload - Hash(:http, :method, :uri, :body, :header)
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/http_helper.rb#83
  def log_http_call(payload); end

  # Generate header based on given header keys and properties
  # === Arguments
  # * <tt>header_keys</tt> -- List of Header keys for the properties
  # * <tt>properties</tt>  -- properties
  # === Return
  #  Hash with header as key property as value
  # === Example
  # map_header_value( { :username => "X-PAYPAL-USERNAME"}, { :username => "guest" })
  # # Return: { "X-PAYPAL-USERNAME" => "guest" }
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/http_helper.rb#110
  def map_header_value(header_keys, properties); end

  # New raw HTTP object
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/http_helper.rb#26
  def new_http(uri); end

  # Join url
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/http_helper.rb#59
  def url_join(path, action); end

  private

  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/http_helper.rb#161
  def response_details_log_level(response); end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#8
class PayPal::SDK::Core::Util::OauthSignature
  # @return [OauthSignature] a new instance of OauthSignature
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#11
  def initialize(username, password, token, token_secret, url, timestamp = T.unsafe(nil)); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#20
  def authorization_string; end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#35
  def base_string; end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#25
  def oauth_signature; end

  # Returns the value of attribute password.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#9
  def password; end

  # Sets the attribute password
  #
  # @param value the value to set the attribute password to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#9
  def password=(_arg0); end

  # The PayPalURLEncoder java class percent encodes everything other than 'a-zA-Z0-9 _'.
  # Then it converts ' ' to '+'.
  # Ruby's CGI.encode takes care of the ' ' and '*' to satisfy PayPal
  # (but beware, URI.encode percent encodes spaces, and does nothing with '*').
  # Finally, CGI.encode does not encode '.-', which we need to do here.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#58
  def paypal_encode(str); end

  # Returns the value of attribute timestamp.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#9
  def timestamp; end

  # Sets the attribute timestamp
  #
  # @param value the value to set the attribute timestamp to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#9
  def timestamp=(_arg0); end

  # Returns the value of attribute token.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#9
  def token; end

  # Sets the attribute token
  #
  # @param value the value to set the attribute token to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#9
  def token=(_arg0); end

  # Returns the value of attribute token_secret.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#9
  def token_secret; end

  # Sets the attribute token_secret
  #
  # @param value the value to set the attribute token_secret to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#9
  def token_secret=(_arg0); end

  # Returns the value of attribute url.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#9
  def url; end

  # Sets the attribute url
  #
  # @param value the value to set the attribute url to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#9
  def url=(_arg0); end

  # Returns the value of attribute username.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#9
  def username; end

  # Sets the attribute username
  #
  # @param value the value to set the attribute username to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/oauth_signature.rb#9
  def username=(_arg0); end
end

# source://paypal-sdk-rest//lib/paypal-sdk/core/util/ordered_hash.rb#3
class PayPal::SDK::Core::Util::OrderedHash < ::Hash
  # source://paypal-sdk-rest//lib/paypal-sdk/core/util/ordered_hash.rb#5
  def to_yaml_type; end
end

# Alias for the Core::OpenIDConnect constant
#
# source://paypal-sdk-rest//lib/paypal-sdk/core/openid_connect.rb#139
PayPal::SDK::OpenIDConnect = PayPal::SDK::Core::OpenIDConnect

# source://paypal-sdk-rest//lib/paypal-sdk/rest.rb#5
module PayPal::SDK::REST
  include ::PayPal::SDK::REST::DataTypes
  include ::PayPal::SDK::Core::Exceptions
  extend ::PayPal::SDK::REST::ClassMethods

  mixes_in_class_methods ::PayPal::SDK::REST::ClassMethods

  class << self
    # @private
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest.rb#30
    def included(klass); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest.rb#24
    def new(*args); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/api.rb#7
class PayPal::SDK::REST::API < ::PayPal::SDK::Core::API::REST
  # include Services
  #
  # @return [API] a new instance of API
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/api.rb#10
  def initialize(environment = T.unsafe(nil), options = T.unsafe(nil)); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/api.rb#15
    def user_agent; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest.rb#17
module PayPal::SDK::REST::ClassMethods
  # source://paypal-sdk-rest//lib/paypal-sdk/rest.rb#18
  def method_missing(name, *args); end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#10
module PayPal::SDK::REST::DataTypes; end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#382
class PayPal::SDK::REST::DataTypes::Address < ::PayPal::SDK::REST::DataTypes::BaseAddress
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def phone(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def phone=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#383
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2235
class PayPal::SDK::REST::DataTypes::Agreement < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def agreement_details(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def agreement_details=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2311
  def bill_balance(agreement_state_descriptor); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def bill_balance!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2303
  def cancel(agreement_state_descriptor); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def cancel!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2256
  def create; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def create!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def create_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def create_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def description(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def description=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2264
  def execute; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def execute!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2338
  def get_token(links); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def override_charge_models(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def override_charge_models=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def override_merchant_preferences(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def override_merchant_preferences=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payer(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payer=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def plan(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def plan=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2295
  def re_activate(agreement_state_descriptor); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def re_activate!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2319
  def set_balance(currency); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def set_balance!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def shipping_address(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def shipping_address=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def start_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def start_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def state(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def state=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2287
  def suspend(agreement_state_descriptor); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def suspend!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def token(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def token=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2279
  def update(patch); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def update!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def update_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def update_time=(value); end

  class << self
    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2272
    def find(resource_id); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2236
    def load_members; end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2331
    def transactions(agreement_id, start_date, end_date, options = T.unsafe(nil)); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2349
class PayPal::SDK::REST::DataTypes::AgreementDetails < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def cycles_completed(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def cycles_completed=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def cycles_remaining(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def cycles_remaining=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def failed_payment_count(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def failed_payment_count=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def final_payment_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def final_payment_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_payment_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_payment_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_payment_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_payment_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def next_billing_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def next_billing_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def outstanding_balance(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def outstanding_balance=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2350
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2369
class PayPal::SDK::REST::DataTypes::AgreementStateDescriptor < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def note(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def note=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2370
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2382
class PayPal::SDK::REST::DataTypes::AgreementTransaction < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def fee_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def fee_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def net_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def net_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payer_email(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payer_email=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payer_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payer_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def status=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def time_stamp(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def time_stamp=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def time_zone(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def time_zone=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def transaction_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def transaction_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def transaction_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def transaction_type=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2383
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2376
class PayPal::SDK::REST::DataTypes::AgreementTransactions < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def agreement_transaction_list(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def agreement_transaction_list=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2377
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#653
class PayPal::SDK::REST::DataTypes::AllOf < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def related_resources(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def related_resources=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#654
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#160
class PayPal::SDK::REST::DataTypes::AlternatePayment < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def alternate_payment_account_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def alternate_payment_account_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def alternate_payment_provider_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def alternate_payment_provider_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def external_customer_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def external_customer_id=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#161
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#693
class PayPal::SDK::REST::DataTypes::Amount < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def currency(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def currency=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def details(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def details=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def total(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def total=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#694
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#843
class PayPal::SDK::REST::DataTypes::AnyOf < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def refund(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def refund=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#844
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#849
class PayPal::SDK::REST::DataTypes::Authorization < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#878
  def capture(capture); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def capture!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def create_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def create_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def fmf_details(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def fmf_details=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def parent_payment(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def parent_payment=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payment_mode(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payment_mode=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def protection_eligibility(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def protection_eligibility=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def protection_eligibility_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def protection_eligibility_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def reason_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def reason_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#892
  def reauthorize; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def reauthorize!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def receipt_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def receipt_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def reference_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def reference_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def state(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def state=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def update_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def update_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def valid_until(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def valid_until=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#885
  def void; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def void!(*arg); end

  class << self
    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#871
    def find(resource_id); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#850
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#433
class PayPal::SDK::REST::DataTypes::BankAccount < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def account_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def account_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def account_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def account_number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def account_number_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def account_number_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def account_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def account_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def auth_capture_timestamp(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def auth_capture_timestamp=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def auth_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def auth_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def bank_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def bank_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def billing_address(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def billing_address=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def birth_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def birth_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def check_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def check_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def confirmation_status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def confirmation_status=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def country_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def country_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#462
  def create; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def create!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def create_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def create_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#477
  def delete; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def delete!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def external_customer_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def external_customer_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def first_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def first_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def merchant_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def merchant_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payer_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payer_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def routing_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def routing_number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def state(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def state=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#484
  def update(patch_request); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def update!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def update_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def update_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def valid_until(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def valid_until=(value); end

  class << self
    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#470
    def find(resource_id); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#434
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1169
class PayPal::SDK::REST::DataTypes::BankAccountsList < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def bank_accounts(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def bank_accounts=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def count(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def count=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def next_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def next_id=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1170
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#501
class PayPal::SDK::REST::DataTypes::BankToken < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def bank_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def bank_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def external_customer_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def external_customer_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def mandate_reference_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def mandate_reference_number=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#502
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#11
class PayPal::SDK::REST::DataTypes::Base < ::PayPal::SDK::Core::API::DataTypes::Base
  # Returns the value of attribute error.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#12
  def error; end

  # Sets the attribute error
  #
  # @param value the value to set the attribute error to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#12
  def error=(_arg0); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#15
  def header; end

  # Sets the attribute header
  #
  # @param value the value to set the attribute header to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#13
  def header=(_arg0); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#23
  def http_header; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#31
  def merge!(values); end

  # @raise [Core::Exceptions::UnsuccessfulApiCall]
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#36
  def raise_error!; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#19
  def request_id; end

  # Sets the attribute request_id
  #
  # @param value the value to set the attribute request_id to.
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#13
  def request_id=(_arg0); end

  # @return [Boolean]
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#27
  def success?; end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#40
    def load_members; end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#43
    def raise_on_api_error(*methods); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#51
class PayPal::SDK::REST::DataTypes::Base::Number < ::PayPal::SDK::Core::API::DataTypes::SimpleTypes::Float; end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#368
class PayPal::SDK::REST::DataTypes::BaseAddress < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def city(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def city=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def country_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def country_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def line1(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def line1=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def line2(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def line2=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def normalization_status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def normalization_status=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def postal_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def postal_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def state(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def state=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def status=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def type=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#369
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#170
class PayPal::SDK::REST::DataTypes::Billing < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def billing_agreement_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def billing_agreement_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def selected_installment_option(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def selected_installment_option=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#171
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#179
class PayPal::SDK::REST::DataTypes::BillingAgreementToken < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#180
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1820
class PayPal::SDK::REST::DataTypes::BillingInfo < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def additional_info(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def additional_info=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1840
  def address(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1832
  def address=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def business_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def business_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def email(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def email=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def first_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def first_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1852
  def invoice_address(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1847
  def invoice_address=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def language(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def language=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def notification_channel(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def notification_channel=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def phone(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def phone=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1821
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2536
class PayPal::SDK::REST::DataTypes::Buyer < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def email(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def email=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2537
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2066
class PayPal::SDK::REST::DataTypes::CancelNotification < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def note(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def note=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def send_to_merchant(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def send_to_merchant=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def send_to_payer(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def send_to_payer=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def subject(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def subject=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2067
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#954
class PayPal::SDK::REST::DataTypes::Capture < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def create_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def create_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def invoice_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def invoice_number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def is_final_capture(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def is_final_capture=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def parent_payment(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def parent_payment=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def reason_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def reason_code=(value); end

  # Deprecated - please use refund_request
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#980
  def refund(refund); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#987
  def refund_request(refund_request); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def state(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def state=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def transaction_fee(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def transaction_fee=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def update_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def update_time=(value); end

  class << self
    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#972
    def find(resource_id); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#955
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#537
class PayPal::SDK::REST::DataTypes::CarrierAccountToken < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def carrier_account_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def carrier_account_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def external_customer_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def external_customer_id=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#538
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#676
class PayPal::SDK::REST::DataTypes::CartBase < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def custom(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def custom=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def description(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def description=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def invoice_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def invoice_number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def item_list(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def item_list=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def note_to_payee(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def note_to_payee=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def notify_url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def notify_url=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def order_url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def order_url=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payee(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payee=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payment_options(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payment_options=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def reference_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def reference_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def soft_descriptor(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def soft_descriptor=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#677
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2137
class PayPal::SDK::REST::DataTypes::ChargeModels < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def type=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2138
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1970
class PayPal::SDK::REST::DataTypes::Cost < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def percent(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def percent=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1971
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#186
class PayPal::SDK::REST::DataTypes::CountryCode < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def country_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def country_code=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#187
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#509
class PayPal::SDK::REST::DataTypes::Credit < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def type=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#510
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#310
class PayPal::SDK::REST::DataTypes::CreditCard < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def billing_address(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def billing_address=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#331
  def create; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def create!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def create_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def create_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def cvv2(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def cvv2=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#346
  def delete; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def delete!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def expire_month(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def expire_month=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def expire_year(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def expire_year=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def external_customer_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def external_customer_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def first_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def first_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def state(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def state=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#353
  def update(patch_requests); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def update!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def update_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def update_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def valid_until(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def valid_until=(value); end

  class << self
    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#339
    def find(resource_id); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#311
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1151
class PayPal::SDK::REST::DataTypes::CreditCardList < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def items(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def items=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def total_items(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def total_items=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def total_pages(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def total_pages=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1160
    def list(options = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1152
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#400
class PayPal::SDK::REST::DataTypes::CreditCardToken < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def credit_card_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def credit_card_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def expire_month(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def expire_month=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def expire_year(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def expire_year=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last4(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last4=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payer_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payer_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def type=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#401
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#194
class PayPal::SDK::REST::DataTypes::CreditFinancingOffered < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def cart_amount_immutable(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def cart_amount_immutable=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def monthly_payment(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def monthly_payment=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payer_acceptance(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payer_acceptance=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def term(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def term=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def total_cost(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def total_cost=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def total_interest(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def total_interest=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#195
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#530
class PayPal::SDK::REST::DataTypes::Currency < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def currency(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def currency=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def value(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def value=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#531
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#580
class PayPal::SDK::REST::DataTypes::CurrencyConversion < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def conversion_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def conversion_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def conversion_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def conversion_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def conversion_type_changeable(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def conversion_type_changeable=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def from_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def from_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def from_currency(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def from_currency=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def to_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def to_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def to_currency(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def to_currency=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def web_url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def web_url=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#581
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1993
class PayPal::SDK::REST::DataTypes::CustomAmount < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def label(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def label=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1994
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1036
class PayPal::SDK::REST::DataTypes::DetailedRefund < ::PayPal::SDK::REST::DataTypes::Refund
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def custom(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def custom=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def refund_from_received_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def refund_from_received_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def refund_from_transaction_fee(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def refund_from_transaction_fee=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def refund_to_external_funding(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def refund_to_external_funding=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def refund_to_payer(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def refund_to_payer=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def total_refunded_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def total_refunded_amount=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1037
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#701
class PayPal::SDK::REST::DataTypes::Details < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def fee(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def fee=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def gift_wrap(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def gift_wrap=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def handling_fee(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def handling_fee=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def insurance(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def insurance=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def shipping(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def shipping=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def shipping_discount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def shipping_discount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def subtotal(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def subtotal=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def tax(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def tax=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#702
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2500
class PayPal::SDK::REST::DataTypes::Dispute < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def buyer_response_due_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def buyer_response_due_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def create_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def create_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def dispute_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def dispute_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def dispute_channel(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def dispute_channel=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def dispute_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def dispute_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def dispute_life_cycle_stage(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def dispute_life_cycle_stage=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def dispute_outcome(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def dispute_outcome=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def disputed_transactions(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def disputed_transactions=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def external_reason_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def external_reason_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def messages(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def messages=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def offer(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def offer=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def reason(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def reason=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def seller_response_due_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def seller_response_due_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def status=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def update_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def update_time=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2501
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2568
class PayPal::SDK::REST::DataTypes::DisputeOutcome < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount_refunded(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount_refunded=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def outcome_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def outcome_code=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2569
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1048
class PayPal::SDK::REST::DataTypes::Error < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def debug_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def debug_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def details(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def details=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def information_link(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def information_link=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def message(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def message=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1049
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1060
class PayPal::SDK::REST::DataTypes::ErrorDetails < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def field(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def field=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def issue(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def issue=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1061
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1484
class PayPal::SDK::REST::DataTypes::EventType < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def description(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def description=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def status=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1485
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1472
class PayPal::SDK::REST::DataTypes::EventTypeList < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def event_types(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def event_types=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1473
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#495
class PayPal::SDK::REST::DataTypes::ExtendedBankAccount < ::PayPal::SDK::REST::DataTypes::BankAccount
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def mandate_reference_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def mandate_reference_number=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#496
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#207
class PayPal::SDK::REST::DataTypes::ExternalFunding < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def display_text(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def display_text=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def funding_account_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def funding_account_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def funding_instruction(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def funding_instruction=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def reference_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def reference_id=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#208
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1429
class PayPal::SDK::REST::DataTypes::FileAttachment < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def url=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1431
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2462
class PayPal::SDK::REST::DataTypes::FlowConfig < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def bank_txn_pending_url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def bank_txn_pending_url=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def landing_page_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def landing_page_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def return_uri_http_method(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def return_uri_http_method=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def user_action(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def user_action=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2463
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1068
class PayPal::SDK::REST::DataTypes::FmfDetails < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def description(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def description=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def filter_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def filter_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def filter_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def filter_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1069
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#571
class PayPal::SDK::REST::DataTypes::FundingDetail < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def clearing_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def clearing_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payment_debit_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payment_debit_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payment_hold_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payment_hold_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def processing_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def processing_type=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#572
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#303
class PayPal::SDK::REST::DataTypes::FundingInstrument < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def credit_card(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def credit_card=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def credit_card_token(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def credit_card_token=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#304
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#544
class PayPal::SDK::REST::DataTypes::FundingOption < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def backup_funding_instrument(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def backup_funding_instrument=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def currency_conversion(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def currency_conversion=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def funding_sources(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def funding_sources=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def installment_info(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def installment_info=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#545
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#554
class PayPal::SDK::REST::DataTypes::FundingSource < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def additional_text(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def additional_text=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def extends(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def extends=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def funding_detail(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def funding_detail=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def funding_instrument_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def funding_instrument_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def funding_mode(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def funding_mode=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def legal_text(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def legal_text=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def negative_balance_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def negative_balance_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def soft_descriptor(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def soft_descriptor=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def terms(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def terms=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#555
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#258
class PayPal::SDK::REST::DataTypes::FuturePayment < ::PayPal::SDK::REST::DataTypes::Payment
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#260
  def create(correlation_id = T.unsafe(nil)); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def create!(*arg); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#276
    def exch_token(auth_code); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2215
class PayPal::SDK::REST::DataTypes::HyperSchema < ::PayPal::SDK::REST::DataTypes::Schema
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def contentEncoding(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def contentEncoding=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def content_encoding(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def content_encoding=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def fragmentResolution(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def fragmentResolution=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def fragment_resolution(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def fragment_resolution=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def mediaType(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def mediaType=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def media_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def media_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def pathStart(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def pathStart=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def path_start(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def path_start=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def readonly(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def readonly=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2216
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#516
class PayPal::SDK::REST::DataTypes::Incentive < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def description(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def description=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def expiry_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def expiry_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def logo_image_url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def logo_image_url=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def minimum_purchase_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def minimum_purchase_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def terms(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def terms=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def type=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#517
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2471
class PayPal::SDK::REST::DataTypes::InputFields < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def address_override(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def address_override=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def allow_note(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def allow_note=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def no_shipping(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def no_shipping=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2472
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#593
class PayPal::SDK::REST::DataTypes::InstallmentInfo < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def installment_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def installment_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def installment_options(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def installment_options=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def issuer(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def issuer=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def network(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def network=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#594
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#602
class PayPal::SDK::REST::DataTypes::InstallmentOption < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def discount_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def discount_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def discount_percentage(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def discount_percentage=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def monthly_payment(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def monthly_payment=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def term(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def term=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#603
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1183
class PayPal::SDK::REST::DataTypes::Invoice < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def additional_data(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def additional_data=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def allow_partial_payment(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def allow_partial_payment=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def attachments(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def attachments=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def billing_info(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def billing_info=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1245
  def cancel(cancel_notification); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def cancel!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def cc_info(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def cc_info=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1223
  def create; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def create!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def custom(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def custom=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1276
  def delete; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def delete!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def discount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def discount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def gratuity(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def gratuity=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def invoice_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def invoice_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def items(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def items=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def logo_url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def logo_url=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def merchant_info(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def merchant_info=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def merchant_memo(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def merchant_memo=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def metadata(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def metadata=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def minimum_amount_due(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def minimum_amount_due=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def note(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def note=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def paid_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def paid_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payment_term(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payment_term=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payments(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payments=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1253
  def record_payment(payment_detail); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def record_payment!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1261
  def record_refund(refund_detail); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def record_refund!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def reference(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def reference=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def refunded_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def refunded_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def refunds(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def refunds=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1237
  def remind(notification); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def remind!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1230
  def send_invoice; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def send_invoice!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def shipping_cost(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def shipping_cost=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def shipping_info(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def shipping_info=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def status=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def tax_calculated_after_discount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def tax_calculated_after_discount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def tax_inclusive(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def tax_inclusive=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def template_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def template_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def terms(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def terms=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def total_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def total_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1269
  def update; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def update!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def uri(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def uri=(value); end

  class << self
    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1295
    def find(resource_id, access_token = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1302
    def get_all(options = T.unsafe(nil), access_token = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1184
    def load_members; end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1308
    def qr_code(options = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1288
    def search(options, access_token = T.unsafe(nil)); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#388
class PayPal::SDK::REST::DataTypes::InvoiceAddress < ::PayPal::SDK::REST::DataTypes::BaseAddress
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def phone(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def phone=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#389
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1177
class PayPal::SDK::REST::DataTypes::InvoiceAmountWrapper < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def paypal(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def paypal=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1178
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1790
class PayPal::SDK::REST::DataTypes::InvoiceItem < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def description(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def description=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def discount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def discount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def image_url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def image_url=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def quantity(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def quantity=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def tax(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def tax=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def unit_of_measure(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def unit_of_measure=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def unit_price(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def unit_price=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1791
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1783
class PayPal::SDK::REST::DataTypes::Invoices < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def invoices(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def invoices=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def total_count(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def total_count=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1784
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1905
class PayPal::SDK::REST::DataTypes::InvoicingMetaData < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def cancelled_by(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def cancelled_by=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def cancelled_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def cancelled_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def created_by(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def created_by=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def created_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def created_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def first_sent_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def first_sent_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_sent_by(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_sent_by=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_sent_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_sent_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_updated_by(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_updated_by=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_updated_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_updated_date=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1906
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1896
class PayPal::SDK::REST::DataTypes::InvoicingNotification < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def cc_emails(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def cc_emails=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def note(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def note=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def send_to_merchant(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def send_to_merchant=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def subject(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def subject=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1897
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1919
class PayPal::SDK::REST::DataTypes::InvoicingPaymentDetail < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def method(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def method=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def note(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def note=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def transaction_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def transaction_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def transaction_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def transaction_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def type=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1920
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1930
class PayPal::SDK::REST::DataTypes::InvoicingRefundDetail < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def note(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def note=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def type=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1931
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1938
class PayPal::SDK::REST::DataTypes::InvoicingSearch < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def archived(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def archived=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def email(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def email=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def end_creation_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def end_creation_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def end_due_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def end_due_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def end_invoice_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def end_invoice_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def end_payment_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def end_payment_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def lower_total_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def lower_total_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def page(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def page=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def page_size(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def page_size=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def recipient_business_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def recipient_business_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def recipient_first_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def recipient_first_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def recipient_last_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def recipient_last_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def start_creation_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def start_creation_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def start_due_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def start_due_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def start_invoice_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def start_invoice_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def start_payment_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def start_payment_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def status=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def total_count_required(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def total_count_required=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def upper_total_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def upper_total_amount=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1939
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#736
class PayPal::SDK::REST::DataTypes::Item < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def category(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def category=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def currency(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def currency=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def description(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def description=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def height(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def height=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def length(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def length=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def postback_data(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def postback_data=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def price(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def price=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def quantity(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def quantity=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def sku(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def sku=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def supplementary_data(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def supplementary_data=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def tax(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def tax=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def url=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def weight(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def weight=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def width(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def width=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#737
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2551
class PayPal::SDK::REST::DataTypes::ItemInfo < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def dispute_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def dispute_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def item_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def item_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def notes(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def notes=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def partner_transaction_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def partner_transaction_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def reason(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def reason=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2552
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#770
class PayPal::SDK::REST::DataTypes::ItemList < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def items(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def items=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def shipping_address(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def shipping_address=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def shipping_method(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def shipping_method=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def shipping_phone_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def shipping_phone_number=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#771
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2171
class PayPal::SDK::REST::DataTypes::Links < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def encType(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def encType=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def enc_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def enc_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def href(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def href=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def method(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def method=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def rel(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def rel=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def schema(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def schema=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def targetSchema(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def targetSchema=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def target_schema(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def target_schema=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2172
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#756
class PayPal::SDK::REST::DataTypes::Measurement < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def unit(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def unit=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def value(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def value=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#757
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1804
class PayPal::SDK::REST::DataTypes::MerchantInfo < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def additional_info(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def additional_info=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def additional_info_label(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def additional_info_label=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def address(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def address=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def business_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def business_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def email(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def email=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def fax(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def fax=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def first_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def first_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def phone(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def phone=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def tax_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def tax_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def website(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def website=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1805
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2156
class PayPal::SDK::REST::DataTypes::MerchantPreferences < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def accepted_payment_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def accepted_payment_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def auto_bill_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def auto_bill_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def cancel_url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def cancel_url=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def char_set(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def char_set=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def initial_fail_amount_action(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def initial_fail_amount_action=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def max_fail_attempts(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def max_fail_attempts=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def notify_url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def notify_url=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def return_url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def return_url=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def setup_fee(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def setup_fee=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2157
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2575
class PayPal::SDK::REST::DataTypes::Messages < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def content(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def content=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def posted_by(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def posted_by=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def time_posted(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def time_posted=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2576
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2019
class PayPal::SDK::REST::DataTypes::Metadata < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def cancelled_by(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def cancelled_by=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def cancelled_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def cancelled_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def created_by(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def created_by=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def created_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def created_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def first_sent_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def first_sent_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_sent_by(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_sent_by=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_sent_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_sent_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_updated_by(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_updated_by=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_updated_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_updated_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payer_view_url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payer_view_url=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2020
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2561
class PayPal::SDK::REST::DataTypes::Money < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def currency_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def currency_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def value(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def value=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2562
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#763
class PayPal::SDK::REST::DataTypes::NameValuePair < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def value(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def value=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#764
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2034
class PayPal::SDK::REST::DataTypes::Notification < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def note(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def note=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def send_to_merchant(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def send_to_merchant=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def subject(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def subject=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2035
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2583
class PayPal::SDK::REST::DataTypes::Offer < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def buyer_requested_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def buyer_requested_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def offer_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def offer_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def seller_offered_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def seller_offered_amount=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2584
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#394
class PayPal::SDK::REST::DataTypes::OneOf < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def phone(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def phone=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#395
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#902
class PayPal::SDK::REST::DataTypes::Order < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#945
  def authorize; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def authorize!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#931
  def capture(capture); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def capture!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def create_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def create_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def fmf_details(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def fmf_details=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def parent_payment(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def parent_payment=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payment_mode(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payment_mode=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def pending_reason(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def pending_reason=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def protection_eligibility(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def protection_eligibility=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def protection_eligibility_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def protection_eligibility_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def purchase_unit_reference_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def purchase_unit_reference_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def reason_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def reason_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def reference_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def reference_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def state(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def state=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def update_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def update_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#938
  def void; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def void!(*arg); end

  class << self
    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#924
    def find(resource_id); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#903
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2362
class PayPal::SDK::REST::DataTypes::OverrideChargeModel < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def charge_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def charge_id=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2363
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1321
class PayPal::SDK::REST::DataTypes::Participant < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def additional_info(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def additional_info=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def address(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def address=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def business_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def business_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def email(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def email=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def fax(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def fax=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def first_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def first_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def phone(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def phone=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def website(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def website=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1322
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1117
class PayPal::SDK::REST::DataTypes::Patch < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def from(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def from=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def op(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def op=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def path(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def path=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def value(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def value=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1118
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1126
class PayPal::SDK::REST::DataTypes::PatchRequest < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def from(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def from=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def op(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def op=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def path(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def path=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def value(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def value=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1127
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#714
class PayPal::SDK::REST::DataTypes::Payee < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def email(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def email=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def merchant_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def merchant_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def phone(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def phone=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#715
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#287
class PayPal::SDK::REST::DataTypes::Payer < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def account_age(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def account_age=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def account_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def account_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def billing(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def billing=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def external_selected_funding_instrument_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def external_selected_funding_instrument_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def funding_instruments(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def funding_instruments=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def funding_option(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def funding_option=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def funding_option_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def funding_option_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payer_info(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payer_info=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payment_method(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payment_method=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def related_funding_option(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def related_funding_option=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def status=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#288
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#616
class PayPal::SDK::REST::DataTypes::PayerInfo < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def billing_address(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def billing_address=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def birth_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def birth_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def buyer_account_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def buyer_account_number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def country_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def country_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def email(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def email=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def external_remember_me_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def external_remember_me_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def first_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def first_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def middle_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def middle_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payer_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payer_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def phone(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def phone=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def phone_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def phone_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def salutation(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def salutation=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def shipping_address(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def shipping_address=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def suffix(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def suffix=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def tax_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def tax_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def tax_id_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def tax_id_type=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#617
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#55
class PayPal::SDK::REST::DataTypes::Payment < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#111
  def approval_url(immediate = T.unsafe(nil)); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def billing_agreement_tokens(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def billing_agreement_tokens=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def cart(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def cart=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#82
  def create; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def create!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def create_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def create_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def credit_financing_offered(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def credit_financing_offered=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#101
  def execute(payment_execution); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def execute!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def experience_profile_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def experience_profile_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def failed_transactions(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def failed_transactions=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def failure_reason(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def failure_reason=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def intent(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def intent=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def note_to_payer(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def note_to_payer=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payee(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payee=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payer(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payer=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payment_instruction(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payment_instruction=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def potential_payer_info(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def potential_payer_info=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def redirect_urls(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def redirect_urls=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def state(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def state=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#117
  def token; end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def transactions(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def transactions=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#89
  def update(patch_requests); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def update!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def update_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def update_time=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#130
    def all(options = T.unsafe(nil)); end

    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#124
    def find(resource_id); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#56
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#411
class PayPal::SDK::REST::DataTypes::PaymentCard < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def billing_address(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def billing_address=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def billing_country(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def billing_country=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def card_product_class(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def card_product_class=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def cvv2(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def cvv2=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def expire_month(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def expire_month=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def expire_year(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def expire_year=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def external_customer_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def external_customer_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def first_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def first_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def issue_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def issue_number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def start_month(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def start_month=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def start_year(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def start_year=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def status=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def valid_until(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def valid_until=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#412
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2124
class PayPal::SDK::REST::DataTypes::PaymentDefinition < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def charge_models(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def charge_models=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def cycles(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def cycles=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def frequency(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def frequency=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def frequency_interval(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def frequency_interval=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def type=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2125
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2000
class PayPal::SDK::REST::DataTypes::PaymentDetail < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def method(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def method=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def note(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def note=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def transaction_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def transaction_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def transaction_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def transaction_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def type=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2001
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1135
class PayPal::SDK::REST::DataTypes::PaymentExecution < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def carrier_account_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def carrier_account_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payer_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payer_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def transactions(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def transactions=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1136
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1143
class PayPal::SDK::REST::DataTypes::PaymentHistory < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def count(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def count=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def next_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def next_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payments(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payments=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1144
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1077
class PayPal::SDK::REST::DataTypes::PaymentInstruction < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def instruction_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def instruction_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def note(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def note=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payment_due_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payment_due_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def recipient_banking_instruction(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def recipient_banking_instruction=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def reference_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def reference_number=(value); end

  class << self
    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1091
    def find(resource_id); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1078
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#730
class PayPal::SDK::REST::DataTypes::PaymentOptions < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def allowed_payment_method(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def allowed_payment_method=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#731
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1423
class PayPal::SDK::REST::DataTypes::PaymentSummary < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def other(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def other=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def paypal(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def paypal=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1424
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1963
class PayPal::SDK::REST::DataTypes::PaymentTerm < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def due_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def due_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def term_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def term_type=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1964
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1684
class PayPal::SDK::REST::DataTypes::Payout < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1693
  def create(sync_mode = T.unsafe(nil)); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def items(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def items=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def sender_batch_header(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def sender_batch_header=(value); end

  class << self
    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1701
    def get(payout_batch_id, options = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1686
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1751
class PayPal::SDK::REST::DataTypes::PayoutBatch < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def batch_header(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def batch_header=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def items(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def items=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1753
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1760
class PayPal::SDK::REST::DataTypes::PayoutBatchHeader < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def batch_status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def batch_status=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def errors(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def errors=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def fees(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def fees=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payout_batch_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payout_batch_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def sender_batch_header(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def sender_batch_header=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def time_completed(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def time_completed=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def time_created(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def time_created=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1762
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1708
class PayPal::SDK::REST::DataTypes::PayoutItem < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def note(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def note=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def receiver(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def receiver=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def recipient_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def recipient_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def recipient_wallet(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def recipient_wallet=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def sender_item_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def sender_item_id=(value); end

  class << self
    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1727
    def cancel(payout_item_id); end

    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1722
    def get(payout_item_id); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1710
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1735
class PayPal::SDK::REST::DataTypes::PayoutItemDetails < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def errors(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def errors=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payout_batch_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payout_batch_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payout_item(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payout_item=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payout_item_fee(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payout_item_fee=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payout_item_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payout_item_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def sender_batch_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def sender_batch_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def time_processed(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def time_processed=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def transaction_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def transaction_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def transaction_status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def transaction_status=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1737
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1774
class PayPal::SDK::REST::DataTypes::PayoutSenderBatchHeader < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def email_subject(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def email_subject=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def recipient_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def recipient_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def sender_batch_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def sender_batch_id=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1776
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#611
class PayPal::SDK::REST::DataTypes::Percentage < ::PayPal::SDK::REST::DataTypes::Base
  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#612
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#722
class PayPal::SDK::REST::DataTypes::Phone < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def country_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def country_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def extension(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def extension=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def national_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def national_number=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#723
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2075
class PayPal::SDK::REST::DataTypes::Plan < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2092
  def create; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def create!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def create_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def create_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def description(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def description=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def merchant_preferences(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def merchant_preferences=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payment_definitions(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payment_definitions=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def state(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def state=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def terms(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def terms=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2099
  def update(patch); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def update!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def update_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def update_time=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2117
    def all(options = T.unsafe(nil)); end

    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2111
    def find(resource_id); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2076
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2226
class PayPal::SDK::REST::DataTypes::PlanList < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def plans(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def plans=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def total_items(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def total_items=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def total_pages(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def total_pages=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2227
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#137
class PayPal::SDK::REST::DataTypes::PotentialPayerInfo < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def billing_address(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def billing_address=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def email(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def email=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def external_remember_me_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def external_remember_me_id=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#221
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2479
class PayPal::SDK::REST::DataTypes::Presentation < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def brand_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def brand_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def locale_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def locale_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def logo_image(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def logo_image=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def note_to_seller_label(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def note_to_seller_label=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def return_url_label(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def return_url_label=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2480
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#230
class PayPal::SDK::REST::DataTypes::PrivateLabelCard < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def card_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def card_number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def image_key(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def image_key=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def issuer_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def issuer_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def issuer_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def issuer_name=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#231
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#147
class PayPal::SDK::REST::DataTypes::ProcessorResponse < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def advice_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def advice_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def avs_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def avs_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def cvv_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def cvv_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def eci_submitted(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def eci_submitted=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def response_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def response_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def vpas(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def vpas=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#243
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1099
class PayPal::SDK::REST::DataTypes::RecipientBankingInstruction < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def account_holder_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def account_holder_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def account_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def account_number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def bank_identifier_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def bank_identifier_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def bank_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def bank_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def international_bank_account_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def international_bank_account_number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def routing_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def routing_number=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1100
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1110
class PayPal::SDK::REST::DataTypes::RedirectUrls < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def cancel_url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def cancel_url=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def return_url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def return_url=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1111
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#995
class PayPal::SDK::REST::DataTypes::Refund < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def capture_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def capture_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def create_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def create_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def description(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def description=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def invoice_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def invoice_number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def parent_payment(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def parent_payment=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def reason(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def reason=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def reason_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def reason_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def sale_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def sale_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def state(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def state=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def update_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def update_time=(value); end

  class << self
    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1015
    def find(resource_id); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#996
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2011
class PayPal::SDK::REST::DataTypes::RefundDetail < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def note(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def note=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def type=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2012
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1023
class PayPal::SDK::REST::DataTypes::RefundRequest < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def description(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def description=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def invoice_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def invoice_number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def is_non_platform_transaction(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def is_non_platform_transaction=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def reason(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def reason=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def refund_advice(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def refund_advice=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def refund_source(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def refund_source=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def refund_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def refund_type=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1024
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#779
class PayPal::SDK::REST::DataTypes::RelatedResources < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def authorization(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def authorization=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def capture(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def capture=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def order(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def order=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def refund(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def refund=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def sale(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def sale=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#780
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#789
class PayPal::SDK::REST::DataTypes::Sale < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def billing_agreement_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def billing_agreement_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def clearing_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def clearing_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def create_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def create_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def exchange_rate(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def exchange_rate=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def fmf_details(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def fmf_details=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def hold_reason(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def hold_reason=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def parent_payment(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def parent_payment=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payment_hold_reasons(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payment_hold_reasons=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payment_hold_status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payment_hold_status=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payment_mode(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payment_mode=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def processor_response(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def processor_response=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def protection_eligibility(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def protection_eligibility=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def protection_eligibility_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def protection_eligibility_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def purchase_unit_reference_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def purchase_unit_reference_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def reason_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def reason_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def receipt_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def receipt_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def receivable_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def receivable_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def recipient_fund_status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def recipient_fund_status=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#827
  def refund(refund); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#834
  def refund_request(refund_request); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def state(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def state=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def transaction_fee(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def transaction_fee=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def update_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def update_time=(value); end

  class << self
    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#820
    def find(resource_id); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#790
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2182
class PayPal::SDK::REST::DataTypes::Schema < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def additionalItems(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def additionalItems=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def additionalProperties(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def additionalProperties=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def additional_items(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def additional_items=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def additional_properties(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def additional_properties=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def dependencies(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def dependencies=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def description(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def description=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def disallow(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def disallow=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def divisibleBy(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def divisibleBy=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def divisible_by(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def divisible_by=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def enum(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def enum=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def exclusiveMaximum(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def exclusiveMaximum=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def exclusiveMinimum(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def exclusiveMinimum=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def exclusive_maximum(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def exclusive_maximum=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def exclusive_minimum(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def exclusive_minimum=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def extends(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def extends=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def format(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def format=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def items(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def items=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def maxItems(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def maxItems=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def maxLength(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def maxLength=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def max_items(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def max_items=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def max_length(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def max_length=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def maximum(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def maximum=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def minItems(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def minItems=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def minLength(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def minLength=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def min_items(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def min_items=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def min_length(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def min_length=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def minimum(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def minimum=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def pattern(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def pattern=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def patternProperties(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def patternProperties=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def pattern_properties(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def pattern_properties=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def properties(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def properties=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def required(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def required=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def title(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def title=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def uniqueItems(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def uniqueItems=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def unique_items(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def unique_items=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2183
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2042
class PayPal::SDK::REST::DataTypes::Search < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def email(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def email=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def end_creation_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def end_creation_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def end_due_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def end_due_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def end_invoice_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def end_invoice_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def end_payment_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def end_payment_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def lower_total_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def lower_total_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def page(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def page=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def page_size(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def page_size=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def recipient_business_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def recipient_business_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def recipient_first_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def recipient_first_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def recipient_last_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def recipient_last_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def start_creation_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def start_creation_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def start_due_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def start_due_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def start_invoice_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def start_invoice_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def start_payment_date(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def start_payment_date=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def status=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def total_count_required(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def total_count_required=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def upper_total_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def upper_total_amount=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2043
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2543
class PayPal::SDK::REST::DataTypes::Seller < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def email(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def email=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def merchant_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def merchant_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2544
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#638
class PayPal::SDK::REST::DataTypes::ShippingAddress < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def city(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def city=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def country_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def country_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def line1(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def line1=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def line2(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def line2=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def normalization_status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def normalization_status=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def phone(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def phone=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def postal_code(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def postal_code=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def recipient_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def recipient_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def state(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def state=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#639
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1977
class PayPal::SDK::REST::DataTypes::ShippingCost < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def tax(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def tax=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1978
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1860
class PayPal::SDK::REST::DataTypes::ShippingInfo < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1876
  def address(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1868
  def address=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def business_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def business_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def email(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def email=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def first_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def first_name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1888
  def invoice_address(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1883
  def invoice_address=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def last_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def last_name=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1861
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1984
class PayPal::SDK::REST::DataTypes::Tax < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def percent(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def percent=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1985
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1335
class PayPal::SDK::REST::DataTypes::Template < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1364
  def create; end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def custom(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def custom=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def default(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def default=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1350
  def delete; end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def settings(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def settings=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def template_data(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def template_data=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def template_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def template_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def unit_of_measure(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def unit_of_measure=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1357
  def update; end

  class << self
    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1372
    def get(template_id, options = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1337
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1380
class PayPal::SDK::REST::DataTypes::TemplateData < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def allow_partial_payment(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def allow_partial_payment=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def attachments(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def attachments=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def billing_info(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def billing_info=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def cc_info(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def cc_info=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def custom(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def custom=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def discount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def discount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def items(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def items=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def logo_url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def logo_url=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def merchant_info(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def merchant_info=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def merchant_memo(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def merchant_memo=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def minimum_amount_due(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def minimum_amount_due=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def note(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def note=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payment_term(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payment_term=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def reference(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def reference=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def shipping_cost(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def shipping_cost=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def shipping_info(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def shipping_info=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def tax_calculated_after_discount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def tax_calculated_after_discount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def tax_inclusive(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def tax_inclusive=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def terms(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def terms=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def total_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def total_amount=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1382
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1407
class PayPal::SDK::REST::DataTypes::TemplateSettings < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def display_preference(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def display_preference=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def field_name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def field_name=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1409
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1415
class PayPal::SDK::REST::DataTypes::TemplateSettingsMetadata < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def hidden(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def hidden=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1417
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1437
class PayPal::SDK::REST::DataTypes::Templates < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def addresses(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def addresses=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def emails(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def emails=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def phones(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def phones=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def templates(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def templates=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1450
    def get_all(options = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1439
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2145
class PayPal::SDK::REST::DataTypes::Terms < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount_range(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount_range=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def buyer_editable(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def buyer_editable=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def max_billing_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def max_billing_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def occurrences(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def occurrences=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def type=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2146
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#659
class PayPal::SDK::REST::DataTypes::Transaction < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def custom(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def custom=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def description(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def description=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def invoice_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def invoice_number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def item_list(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def item_list=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def notify_url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def notify_url=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payee(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payee=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def payment_options(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def payment_options=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def purchase_unit_reference_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def purchase_unit_reference_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def related_resources(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def related_resources=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def soft_descriptor(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def soft_descriptor=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def transactions(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def transactions=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#660
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2521
class PayPal::SDK::REST::DataTypes::TransactionInfo < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def buyer(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def buyer=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def buyer_transaction_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def buyer_transaction_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def create_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def create_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def custom(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def custom=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def gross_amount(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def gross_amount=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def invoice_number(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def invoice_number=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def items(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def items=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def seller(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def seller=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def seller_transaction_id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def seller_transaction_id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def transaction_status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def transaction_status=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2522
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2397
class PayPal::SDK::REST::DataTypes::WebProfile < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2409
  def create; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2431
  def delete; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def delete!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def flow_config(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def flow_config=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def input_fields(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def input_fields=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2423
  def partial_update(patch_request); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def partial_update!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def presentation(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def presentation=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def temporary(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def temporary=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2416
  def update; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def update!(*arg); end

  class << self
    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2441
    def find(resource_id); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2447
    def get_list(options = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2398
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2489
class PayPal::SDK::REST::DataTypes::WebProfileList < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def flow_config(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def flow_config=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def input_fields(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def input_fields=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def name(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def name=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def presentation(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def presentation=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def temporary(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def temporary=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#2490
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1621
class PayPal::SDK::REST::DataTypes::Webhook < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1632
  def create; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1648
  def delete; end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def delete!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def event_types(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def event_types=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1639
  def update(patch); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#45
  def update!(*arg); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def url(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def url=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1670
    def all(options = T.unsafe(nil)); end

    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1658
    def get(webhook_id); end

    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1664
    def get_event_types(webhook_id); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1623
    def load_members; end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1675
    def simulate_event(webhook_id, url, event_type); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1500
class PayPal::SDK::REST::DataTypes::WebhookEvent < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def create_time(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def create_time=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def event_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def event_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def event_version(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def event_version=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1518
  def get_resource; end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def id(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def id=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1513
  def resend; end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def resource(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def resource=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def resource_type(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def resource_type=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def status(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def status=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def summary(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def summary=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1614
    def all(options = T.unsafe(nil)); end

    # @raise [ArgumentError]
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1608
    def find(resource_id); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1604
    def get(webhook_event_id); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1532
    def get_cert(cert_url); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1537
    def get_cert_chain; end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1548
    def get_expected_sig(transmission_id, timestamp, webhook_id, event_body); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1589
    def get_resource_class(name); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1501
    def load_members; end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1598
    def search(page_size, start_time, end_time); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1584
    def verify(transmission_id, timestamp, webhook_id, event_body, cert_url, sig, algo = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1578
    def verify_cert(cert); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1574
    def verify_cert_chain(cert_store, cert); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1554
    def verify_common_name(cert); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1570
    def verify_expiration(cert); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1560
    def verify_signature(transmission_id, timestamp, webhook_id, event_body, cert, actual_sig_encoded, algo); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1492
class PayPal::SDK::REST::DataTypes::WebhookEventList < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def count(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def count=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def events(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def events=(value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def links(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def links=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1493
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1478
class PayPal::SDK::REST::DataTypes::WebhookList < ::PayPal::SDK::REST::DataTypes::Base
  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def webhooks(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def webhooks=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1479
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1457
class PayPal::SDK::REST::DataTypes::WebhooksEventType < ::PayPal::SDK::REST::DataTypes::Base
  include ::PayPal::SDK::REST::RequestDataType
  include ::PayPal::SDK::REST::SetAPI
  extend ::PayPal::SDK::REST::GetAPI
  extend ::PayPal::SDK::REST::SetAPI

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#60
  def event_types(&block); end

  # source://paypal-sdk-rest//lib/paypal-sdk/core/api/data_types/base.rb#55
  def event_types=(value); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1465
    def all(options = T.unsafe(nil)); end

    # source://paypal-sdk-rest//lib/paypal-sdk/rest/data_types.rb#1458
    def load_members; end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/error_hash.rb#4
class PayPal::SDK::REST::ErrorHash < ::PayPal::SDK::Core::Util::OrderedHash
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/error_hash.rb#25
  def [](name); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/error_hash.rb#13
  def []=(key, value); end

  # source://paypal-sdk-rest//lib/paypal-sdk/rest/error_hash.rb#29
  def method_missing(name, *args); end

  class << self
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/error_hash.rb#5
    def convert(hash); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/get_api.rb#4
module PayPal::SDK::REST::GetAPI
  # Get API object
  # === Example
  #   Payment.api
  #   payment.api
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/get_api.rb#9
  def api; end

  # Parent API object
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/get_api.rb#14
  def parent_api; end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/request_data_type.rb#4
module PayPal::SDK::REST::RequestDataType
  extend ::PayPal::SDK::REST::SetAPI
  include ::PayPal::SDK::REST::SetAPI

  mixes_in_class_methods ::PayPal::SDK::REST::GetAPI
  mixes_in_class_methods ::PayPal::SDK::REST::SetAPI

  # Get a local API object or Class level API object
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/request_data_type.rb#6
  def api; end

  # Convert Hash object to ErrorHash object
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/request_data_type.rb#11
  def error=(hash); end

  class << self
    # Global API object
    # === Example
    #   RequestDataType.api
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/request_data_type.rb#24
    def api; end

    # Configure depended module, when RequestDataType is include.
    # === Example
    #   class Payment < DataTypes
    #     include RequestDataType
    #   end
    #   Payment.set_config(..)
    #   payment.set_config(..)
    #   Payment.api
    #   payment.api
    #
    # source://paypal-sdk-rest//lib/paypal-sdk/rest/request_data_type.rb#42
    def included(klass); end
  end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/set_api.rb#4
module PayPal::SDK::REST::SetAPI
  # Set new api
  # === Examples
  #   payment.set_config(:development)
  #   payment.set_config(:client_id => "XYZ", :client_secret => "SECRET")
  #   payment.set_config
  #   payment.api = API.new(:development)
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/set_api.rb#11
  def api=(*args); end

  # Override token
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/set_api.rb#25
  def auth=(token); end

  # Override client id
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/set_api.rb#31
  def client_id=(client_id); end

  # Override client secret
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/set_api.rb#36
  def client_secret=(client_secret); end

  # Set new api
  # === Examples
  #   payment.set_config(:development)
  #   payment.set_config(:client_id => "XYZ", :client_secret => "SECRET")
  #   payment.set_config
  #   payment.api = API.new(:development)
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/set_api.rb#11
  def config=(*args); end

  # Set new api
  # === Examples
  #   payment.set_config(:development)
  #   payment.set_config(:client_id => "XYZ", :client_secret => "SECRET")
  #   payment.set_config
  #   payment.api = API.new(:development)
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/set_api.rb#11
  def set_api(*args); end

  # Set new api
  # === Examples
  #   payment.set_config(:development)
  #   payment.set_config(:client_id => "XYZ", :client_secret => "SECRET")
  #   payment.set_config
  #   payment.api = API.new(:development)
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/set_api.rb#11
  def set_config(*args); end

  # Override token
  #
  # source://paypal-sdk-rest//lib/paypal-sdk/rest/set_api.rb#25
  def token=(token); end
end

# source://paypal-sdk-rest//lib/paypal-sdk/rest/version.rb#4
PayPal::SDK::REST::VERSION = T.let(T.unsafe(nil), String)
