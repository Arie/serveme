# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/redis-rack/all/redis-rack.rbi
#
# redis-rack-3.0.0

class Redis
end
module Redis::Rack
end
class Redis::Rack::Connection
  def initialize(options = nil); end
  def pool; end
  def pool_options; end
  def pooled?; end
  def store; end
  def with(&block); end
end
module Rack
end
module Rack::Session
end
class Rack::Session::Redis < Rack::Session::Abstract::PersistedSecure
  def delete_session(req, sid, options); end
  def find_session(req, sid); end
  def generate_unique_sid(session); end
  def get_session_with_fallback(sid); end
  def initialize(app, options = nil); end
  def mutex; end
  def threadsafe?; end
  def with(&block); end
  def with_lock(req, default = nil); end
  def write_session(req, sid, new_session, options = nil); end
end
