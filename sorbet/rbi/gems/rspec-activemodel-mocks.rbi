# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/rspec-activemodel-mocks/all/rspec-activemodel-mocks.rbi
#
# rspec-activemodel-mocks-1.2.0

module RSpec
end
module RSpec::ActiveModel
end
module RSpec::ActiveModel::Mocks
end
module RSpec::ActiveModel::Mocks::Version
end
class RSpec::ActiveModel::Mocks::IllegalDataAccessException < StandardError
end
module RSpec::ActiveModel::Mocks::Mocks
  def mock_model(string_or_model_class, stubs = nil); end
  def next_id; end
  def stub_model(model_class, stubs = nil); end
end
module RSpec::ActiveModel::Mocks::Mocks::ActiveModelInstanceMethods
  def as_new_record; end
  def persisted?; end
  def respond_to?(message, include_private = nil); end
end
class RSpec::ActiveModel::Mocks::Mocks::Association
  def initialize(association_name); end
  def inversed; end
  def inversed=(arg0); end
  def inversed_from(record); end
  def target; end
  def target=(arg0); end
end
module RSpec::ActiveModel::Mocks::Mocks::ActiveRecordInstanceMethods
  def [](key); end
  def _read_attribute(key); end
  def association(association_name); end
  def destroy; end
  def new_record?; end
end
module RSpec::ActiveModel::Mocks::Mocks::ActiveModelStubExtensions
  def as_new_record; end
  def persisted?; end
end
module RSpec::ActiveModel::Mocks::Mocks::ActiveRecordStubExtensions
  def as_new_record; end
  def connection; end
  def new_record?; end
end
