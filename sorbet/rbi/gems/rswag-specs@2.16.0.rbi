# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rswag-specs` gem.
# Please instead update this file by running `bin/tapioca gem rswag-specs`.


# source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#5
module Rswag; end

# source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#6
module Rswag::Specs
  class << self
    # source://rswag-specs//lib/rswag/specs.rb#32
    def config; end

    # source://rswag-specs//lib/rswag/specs.rb#36
    def deprecator; end
  end
end

# source://rswag-specs//lib/rswag/specs/configuration.rb#5
class Rswag::Specs::Configuration
  # @return [Configuration] a new instance of Configuration
  #
  # source://rswag-specs//lib/rswag/specs/configuration.rb#6
  def initialize(rspec_config); end

  # @raise [ConfigurationError]
  #
  # source://rswag-specs//lib/rswag/specs/configuration.rb#49
  def get_openapi_spec(name); end

  # source://rswag-specs//lib/rswag/specs/configuration.rb#56
  def get_openapi_spec_version(name); end

  # source://rswag-specs//lib/rswag/specs/configuration.rb#65
  def openapi_all_properties_required; end

  # source://rswag-specs//lib/rswag/specs/configuration.rb#35
  def openapi_format; end

  # source://rswag-specs//lib/rswag/specs/configuration.rb#69
  def openapi_no_additional_properties; end

  # source://rswag-specs//lib/rswag/specs/configuration.rb#10
  def openapi_root; end

  # source://rswag-specs//lib/rswag/specs/configuration.rb#15
  def openapi_specs; end

  # source://rswag-specs//lib/rswag/specs/configuration.rb#61
  def openapi_strict_schema_validation; end

  # source://rswag-specs//lib/rswag/specs/configuration.rb#25
  def rswag_dry_run; end
end

# source://rswag-specs//lib/rswag/specs/configuration.rb#74
class Rswag::Specs::ConfigurationError < ::StandardError; end

# source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#7
module Rswag::Specs::ExampleGroupHelpers
  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#37
  def consumes(*value); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#14
  def delete(summary, **metadata, &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#21
  def deprecated(value); end

  # NOTE: 'description' requires special treatment because ExampleGroup already
  # defines a method with that name. Provide an override that supports the existing
  # functionality while also setting the appropriate metadata if applicable
  #
  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#29
  def description(value = T.unsafe(nil)); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#93
  def example(mime, name, value, summary = T.unsafe(nil), description = T.unsafe(nil)); end

  # NOTE: Similar to 'description', 'examples' need to handle the case when
  # being invoked with no params to avoid overriding 'examples' method of
  # rspec-core ExampleGroup
  #
  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#85
  def examples(examples = T.unsafe(nil)); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#14
  def get(summary, **metadata, &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#14
  def head(summary, **metadata, &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#76
  def header(name, attributes); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#21
  def operationId(value); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#14
  def options(summary, **metadata, &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#42
  def parameter(attributes); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#14
  def patch(summary, **metadata, &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#8
  def path(template, metadata = T.unsafe(nil), &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#14
  def post(summary, **metadata, &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#37
  def produces(*value); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#14
  def put(summary, **metadata, &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#56
  def request_body_example(value:, summary: T.unsafe(nil), name: T.unsafe(nil)); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#67
  def response(code, description, metadata = T.unsafe(nil), &block); end

  # Perform request and assert response matches swagger definitions
  #
  # @param description [String] description of the test
  # @param args [Array] arguments to pass to the `it` method
  # @param options [Hash] options to pass to the `it` method
  # @param &block [Proc] you can make additional assertions within that block
  # @return [void]
  #
  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#123
  def run_test!(description = T.unsafe(nil), *args, **options, &block); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#72
  def schema(value); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#37
  def schemes(*value); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#21
  def security(value); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#37
  def tags(*value); end

  # source://rswag-specs//lib/rswag/specs/example_group_helpers.rb#14
  def trace(summary, **metadata, &block); end
end

# source://rswag-specs//lib/rswag/specs/example_helpers.rb#8
module Rswag::Specs::ExampleHelpers
  # source://rswag-specs//lib/rswag/specs/example_helpers.rb#29
  def assert_response_matches_metadata(metadata); end

  # source://rswag-specs//lib/rswag/specs/example_helpers.rb#9
  def submit_request(metadata); end
end

# source://rswag-specs//lib/rswag/specs/extended_schema.rb#7
class Rswag::Specs::ExtendedSchema < ::JSON::Schema::Draft4
  # @return [ExtendedSchema] a new instance of ExtendedSchema
  #
  # source://rswag-specs//lib/rswag/specs/extended_schema.rb#8
  def initialize; end

  # source://rswag-specs//lib/rswag/specs/extended_schema.rb#14
  def validate(current_schema, data, *_arg2); end
end

# source://rswag-specs//lib/rswag/specs/request_factory.rb#287
class Rswag::Specs::MissingParameterError < ::StandardError
  # @return [MissingParameterError] a new instance of MissingParameterError
  #
  # source://rswag-specs//lib/rswag/specs/request_factory.rb#290
  def initialize(body_param); end

  # Returns the value of attribute body_param.
  #
  # source://rswag-specs//lib/rswag/specs/request_factory.rb#288
  def body_param; end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#294
  def message; end
end

# Support Rails 3+ and RSpec 2+ (sigh!)
#
# source://rswag-specs//lib/rswag/specs.rb#41
Rswag::Specs::RAILS_VERSION = T.let(T.unsafe(nil), Integer)

# source://rswag-specs//lib/rswag/specs.rb#11
Rswag::Specs::RENAMED_METHODS = T.let(T.unsafe(nil), Hash)

# source://rswag-specs//lib/rswag/specs.rb#42
Rswag::Specs::RSPEC_VERSION = T.let(T.unsafe(nil), Integer)

# source://rswag-specs//lib/rswag/specs/railtie.rb#5
class Rswag::Specs::Railtie < ::Rails::Railtie; end

# source://rswag-specs//lib/rswag/specs/request_factory.rb#9
class Rswag::Specs::RequestFactory
  # @return [RequestFactory] a new instance of RequestFactory
  #
  # source://rswag-specs//lib/rswag/specs/request_factory.rb#10
  def initialize(config = T.unsafe(nil)); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#14
  def build_request(metadata, example); end

  private

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#198
  def add_headers(request, metadata, swagger_doc, parameters, example); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#113
  def add_path(request, metadata, swagger_doc, parameters, example); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#241
  def add_payload(request, parameters, example); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#100
  def add_verb(request, metadata); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#104
  def base_path_from_servers(swagger_doc, use_server = T.unsafe(nil)); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#254
  def build_form_payload(parameters, example); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#274
  def build_json_payload(parameters, example); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#143
  def build_query_string_part(param, value, swagger_doc); end

  # @raise [MissingParameterError]
  #
  # source://rswag-specs//lib/rswag/specs/request_factory.rb#265
  def build_raw_payload(parameters, example); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#86
  def definition_version(swagger_doc); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#40
  def derive_security_params(metadata, swagger_doc); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#278
  def doc_version(doc); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#28
  def expand_parameters(metadata, swagger_doc, example); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#282
  def extract_getter(parameter); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#73
  def key_version(ref, swagger_doc); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#65
  def resolve_parameter(ref, swagger_doc); end

  # source://rswag-specs//lib/rswag/specs/request_factory.rb#51
  def security_version(scheme_names, swagger_doc); end
end

# source://rswag-specs//lib/rswag/specs/response_validator.rb#10
class Rswag::Specs::ResponseValidator
  # @return [ResponseValidator] a new instance of ResponseValidator
  #
  # source://rswag-specs//lib/rswag/specs/response_validator.rb#11
  def initialize(config = T.unsafe(nil)); end

  # source://rswag-specs//lib/rswag/specs/response_validator.rb#15
  def validate!(metadata, response); end

  private

  # source://rswag-specs//lib/rswag/specs/response_validator.rb#96
  def definitions_or_component_schemas(swagger_doc, version); end

  # @raise [UnexpectedResponse]
  #
  # source://rswag-specs//lib/rswag/specs/response_validator.rb#54
  def validate_body!(metadata, swagger_doc, body); end

  # source://rswag-specs//lib/rswag/specs/response_validator.rb#25
  def validate_code!(metadata, response); end

  # source://rswag-specs//lib/rswag/specs/response_validator.rb#34
  def validate_headers!(metadata, headers); end

  # source://rswag-specs//lib/rswag/specs/response_validator.rb#75
  def validation_options_from(metadata); end
end

# source://rswag-specs//lib/rswag/specs/response_validator.rb#111
class Rswag::Specs::UnexpectedResponse < ::StandardError; end
