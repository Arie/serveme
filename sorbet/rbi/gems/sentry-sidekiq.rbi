# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/sentry-sidekiq/all/sentry-sidekiq.rbi
#
# sentry-sidekiq-5.19.0

module Sentry
end
module Sentry::Sidekiq
  extend Sentry::Integrable
end
class Sentry::Configuration
  def sidekiq; end
end
class Sentry::Sidekiq::Configuration
  def initialize; end
  def report_after_job_retries; end
  def report_after_job_retries=(arg0); end
end
class Sentry::Sidekiq::ContextFilter
  def context; end
  def filter_context(hash); end
  def filter_context_hash(key, value); end
  def filtered; end
  def has_global_id?; end
  def initialize(context); end
  def transaction_name; end
end
class Sentry::Sidekiq::ErrorHandler
  def call(ex, context, sidekiq_config = nil); end
  def retry_limit(context, sidekiq_config); end
  def retryable?(context); end
end
class Sentry::Sidekiq::SentryContextServerMiddleware
  def build_tags(tags); end
  def call(_worker, job, queue); end
  def finish_transaction(transaction, status); end
  def start_transaction(scope, env); end
end
class Sentry::Sidekiq::SentryContextClientMiddleware
  def call(_worker_class, job, _queue, _redis_pool); end
end
module Sentry::Sidekiq::Cron
end
module Sentry::Sidekiq::Cron::Job
  def save; end
end
class Sentry::Sidekiq::Railtie < Rails::Railtie
end
