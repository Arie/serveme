# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/ssrf_filter/all/ssrf_filter.rbi
#
# ssrf_filter-1.1.2

class SsrfFilter
  def self.delete(url, options = nil, &block); end
  def self.fetch_once(uri, ip, verb, options, &block); end
  def self.get(url, options = nil, &block); end
  def self.head(url, options = nil, &block); end
  def self.host_header(hostname, uri); end
  def self.ipaddr_has_mask?(ipaddr); end
  def self.patch(url, options = nil, &block); end
  def self.post(url, options = nil, &block); end
  def self.prefixlen_from_ipaddr(ipaddr); end
  def self.put(url, options = nil, &block); end
  def self.unsafe_ip_address?(ip_address); end
  def self.validate_request(request); end
  def self.with_forced_hostname(hostname, &_block); end
end
module SsrfFilter::Patch
end
module SsrfFilter::Patch::SSLSocket
  def self.apply!; end
end
class SsrfFilter::Error < StandardError
end
class SsrfFilter::InvalidUriScheme < SsrfFilter::Error
end
class SsrfFilter::PrivateIPAddress < SsrfFilter::Error
end
class SsrfFilter::UnresolvedHostname < SsrfFilter::Error
end
class SsrfFilter::TooManyRedirects < SsrfFilter::Error
end
class SsrfFilter::CRLFInjection < SsrfFilter::Error
end
